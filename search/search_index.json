{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udee1\ufe0f Fail2ban Dashboard - Documentaci\u00f3n T\u00e9cnica","text":"<p>Sistema en Vivo</p> <p>\ud83c\udf10 Dashboard: alertasfail2ban.xmakuno.com \ud83d\udce1 API Docs: alertasfail2ban.xmakuno.com/docs \ud83d\udcca Monitoreo: alertasfail2ban.xmakuno.com/health</p>"},{"location":"#que-es-fail2ban-dashboard","title":"\ud83c\udfaf \u00bfQu\u00e9 es Fail2ban Dashboard?","text":"<p>Una soluci\u00f3n moderna y completa para monitorear y gestionar Fail2ban a trav\u00e9s de una interfaz web intuitiva y una API REST robusta.</p>"},{"location":"#caracteristicas-destacadas","title":"\u2728 Caracter\u00edsticas Destacadas","text":"<ul> <li> <p> Monitoreo en Tiempo Real</p> <p>Visualiza intentos de intrusi\u00f3n, baneos activos y estad\u00edsticas del sistema en tiempo real con WebSockets.</p> </li> <li> <p> API REST Completa</p> <p>Gestiona jails, consulta logs y controla baneos a trav\u00e9s de una API moderna con documentaci\u00f3n autom\u00e1tica.</p> </li> <li> <p> Seguridad Multicapa</p> <p>Protecci\u00f3n con SSL/TLS, headers de seguridad, rate limiting y autenticaci\u00f3n por claves SSH.</p> </li> <li> <p> Dashboard Responsivo</p> <p>Interfaz moderna con Vue.js y Vuetify, optimizada para desktop, tablet y m\u00f3vil.</p> </li> </ul>"},{"location":"#arquitectura-del-sistema","title":"\ud83c\udfd7\ufe0f Arquitectura del Sistema","text":""},{"location":"#stack-tecnologico","title":"\ud83d\udd27 Stack Tecnol\u00f3gico","text":"BackendFrontendInfraestructura <p>API &amp; Services <pre><code>\ud83d\udc0d FastAPI          - API REST moderna\n\ud83d\udee1\ufe0f Fail2ban         - Sistema de prevenci\u00f3n de intrusiones  \n\ud83d\uddc4\ufe0f Loki             - Agregaci\u00f3n de logs\n\ud83d\udcdc Promtail         - Colector de logs\n\ud83d\udd12 Caddy            - Proxy inverso con SSL autom\u00e1tico\n</code></pre></p> <p>Dashboard Web <pre><code>\ud83d\uddbc\ufe0f Vue.js 3         - Framework reactivo\n\ud83c\udfa8 Vuetify 3        - Componentes Material Design\n\ud83d\udcca Chart.js         - Gr\u00e1ficos y visualizaciones\n\ud83d\uddfa\ufe0f Leaflet          - Mapas interactivos\n\u26a1 Vite             - Build tool moderno\n</code></pre></p> <p>Deployment &amp; Security <pre><code>\ud83d\udc33 Docker           - Containerizaci\u00f3n\n\u2601\ufe0f DigitalOcean     - Cloud hosting\n\ud83d\udd10 Let's Encrypt    - Certificados SSL gratuitos\n\ud83d\udd25 UFW/iptables     - Firewall del sistema\n\ud83d\udcdd Systemd          - Gesti\u00f3n de servicios\n</code></pre></p>"},{"location":"#inicio-rapido","title":"\ud83d\ude80 Inicio R\u00e1pido","text":"<p>Desarrollo Local</p> \ud83d\udee0\ufe0f Configuraci\u00f3n\ud83d\udc33 Docker Compose\ud83c\udf10 Acceso <pre><code># 1. Clonar repositorio\ngit clone https://github.com/AleGC019/aca-fail2ban-dashboard.git\ncd aca-fail2ban-dashboard\n\n# 2. Configurar variables de entorno\ncp .env.example .env\nnano .env  # Editar configuraci\u00f3n\n</code></pre> <pre><code># 3. Levantar servicios\ndocker compose up -d --build\n\n# 4. Verificar estado\ndocker compose ps\ndocker compose logs -f\n</code></pre> <pre><code># Frontend\nhttp://localhost:3000\n\n# API Documentation  \nhttp://localhost:8000/docs\n\n# Health Check\ncurl http://localhost:8000/health\n</code></pre> <p>Producci\u00f3n</p> \ud83c\udf0d Acceso Directo\ud83d\udcca Monitoreo <p>Dashboard Principal https://alertasfail2ban.xmakuno.com</p> <p>API Interactiva https://alertasfail2ban.xmakuno.com/docs</p> <pre><code># Estado del sistema\ncurl https://alertasfail2ban.xmakuno.com/health\n\n# Jails activos\ncurl https://alertasfail2ban.xmakuno.com/api/jails\n\n# Logs recientes\ncurl https://alertasfail2ban.xmakuno.com/api/logs?limit=10\n</code></pre>"},{"location":"#documentacion-completa","title":"\ufffd Documentaci\u00f3n Completa","text":"<ul> <li> <p> Arquitectura</p> <p>Dise\u00f1o del sistema, componentes y flujo de datos</p> </li> <li> <p> Configuraci\u00f3n del Servidor</p> <p>Setup del Droplet, seguridad y software base</p> </li> <li> <p> Servicios Backend</p> <p>Fail2ban, Loki, Promtail, Caddy y API</p> </li> <li> <p> Frontend Dashboard</p> <p>Interfaz web, componentes y funcionalidades</p> </li> <li> <p> Despliegue</p> <p>Instalaci\u00f3n, mantenimiento y troubleshooting</p> </li> <li> <p> API Reference</p> <p>Documentaci\u00f3n completa de endpoints REST</p> </li> </ul>"},{"location":"#estado-del-sistema","title":"\ud83d\udcca Estado del Sistema","text":"<p>Informaci\u00f3n del Proyecto</p> Aspecto Detalle \ud83d\udcc5 Documentaci\u00f3n 1 de julio de 2025 \ud83d\udd17 Repositorio GitHub - ACA Fail2ban Dashboard \u2601\ufe0f Hosting DigitalOcean Droplet Ubuntu 22.04 LTS \ud83c\udf10 Dominio <code>alertasfail2ban.xmakuno.com</code> \ud83d\udd12 SSL Let's Encrypt (Renovaci\u00f3n autom\u00e1tica) \ud83d\udcc8 Uptime 99.9% SLA objetivo"},{"location":"#etiquetas-del-proyecto","title":"\ud83c\udff7\ufe0f Etiquetas del Proyecto","text":"<pre><code>#fail2ban #security #monitoring #fastapi #vue3 #docker #digitalocean #ubuntu #ssl #api-rest #dashboard #logs #intrusion-prevention #cybersecurity #devops\n</code></pre>"},{"location":"api/authentication/","title":"\ud83d\udd10 Autenticaci\u00f3n y Autorizaci\u00f3n","text":""},{"location":"api/authentication/#modelo-de-seguridad-actual","title":"Modelo de Seguridad Actual","text":"<p>Configuraci\u00f3n Actual</p> <p>El sistema actualmente NO requiere autenticaci\u00f3n para acceder a la API, ya que est\u00e1 dise\u00f1ado para uso interno y est\u00e1 protegido por:</p> <ul> <li>\ud83d\udd12 Proxy reverso: Solo accesible a trav\u00e9s de Caddy</li> <li>\ud83d\udee1\ufe0f Firewall: Puerto 8000 no expuesto directamente</li> <li>\ud83c\udf10 Red privada: API solo accesible desde la red Docker interna</li> </ul>"},{"location":"api/authentication/#implementacion-futura","title":"\ud83d\udd04 Implementaci\u00f3n Futura","text":""},{"location":"api/authentication/#opciones-de-autenticacion","title":"Opciones de Autenticaci\u00f3n","text":"API Key AuthenticationJWT Token AuthenticationBasic Authentication <pre><code># Implementaci\u00f3n con header API Key\nfrom fastapi import Header, HTTPException\n\nasync def verify_api_key(x_api_key: str = Header()):\n    if x_api_key != VALID_API_KEY:\n        raise HTTPException(status_code=401, detail=\"Invalid API key\")\n    return x_api_key\n</code></pre> <pre><code># Uso con curl\ncurl -H \"X-API-Key: your-secret-key\" \\\n     https://alertasfail2ban.xmakuno.com/api/jails\n</code></pre> <pre><code># Implementaci\u00f3n con JWT\nfrom fastapi import Depends, HTTPException\nfrom fastapi.security import HTTPBearer\n\nsecurity = HTTPBearer()\n\nasync def verify_token(token: str = Depends(security)):\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[\"HS256\"])\n        return payload\n    except jwt.InvalidTokenError:\n        raise HTTPException(status_code=401, detail=\"Invalid token\")\n</code></pre> <pre><code># Uso con JWT\ncurl -H \"Authorization: Bearer your-jwt-token\" \\\n     https://alertasfail2ban.xmakuno.com/api/jails\n</code></pre> <pre><code># Implementaci\u00f3n b\u00e1sica\nfrom fastapi import Depends, HTTPException\nfrom fastapi.security import HTTPBasic, HTTPBasicCredentials\n\nsecurity = HTTPBasic()\n\nasync def verify_credentials(credentials: HTTPBasicCredentials = Depends(security)):\n    if credentials.username != USERNAME or credentials.password != PASSWORD:\n        raise HTTPException(status_code=401, detail=\"Invalid credentials\")\n    return credentials.username\n</code></pre>"},{"location":"api/authentication/#seguridad-de-red-actual","title":"\ud83d\udd12 Seguridad de Red Actual","text":""},{"location":"api/authentication/#capas-de-proteccion","title":"Capas de Protecci\u00f3n","text":"<pre><code>graph LR\n    CLIENT[\ud83d\udc64 Cliente] --&gt; CADDY[\ud83d\udd12 Caddy :443]\n    CADDY --&gt; API[\u2699\ufe0f API :8000]\n\n    subgraph \"Protecciones Activas\"\n        SSL[\ud83d\udd10 SSL/TLS]\n        HEADERS[\ud83d\udccb Security Headers]\n        RATE[\u23f1\ufe0f Rate Limiting]\n        FIREWALL[\ud83d\udd25 Cloud Firewall]\n    end\n\n    CLIENT --&gt; SSL\n    CADDY --&gt; HEADERS\n    CADDY --&gt; RATE\n    FIREWALL --&gt; CADDY</code></pre>"},{"location":"api/authentication/#configuracion-de-seguridad","title":"Configuraci\u00f3n de Seguridad","text":"<pre><code># Configuraci\u00f3n actual en Caddy\nalertasfail2ban.xmakuno.com {\n    reverse_proxy localhost:8000\n\n    # Rate limiting por IP\n    rate_limit {\n        zone dynamic {\n            key {remote_host}\n            events 60\n            window 1m\n        }\n    }\n\n    # Security headers\n    header {\n        Strict-Transport-Security \"max-age=31536000\"\n        X-Frame-Options \"DENY\"\n        X-Content-Type-Options \"nosniff\"\n    }\n}\n</code></pre>"},{"location":"api/authentication/#mejores-practicas","title":"\ud83d\udee1\ufe0f Mejores Pr\u00e1cticas","text":""},{"location":"api/authentication/#para-uso-actual","title":"Para Uso Actual","text":"<pre><code># Verificar que el puerto 8000 NO est\u00e9 expuesto\nnmap -p 8000 tu_servidor_ip\n\n# Solo debe ser accesible v\u00eda HTTPS\ncurl https://alertasfail2ban.xmakuno.com/health\n</code></pre>"},{"location":"api/authentication/#para-implementacion-futura","title":"Para Implementaci\u00f3n Futura","text":"<pre><code># Ejemplo de middleware de seguridad\nfrom fastapi import Request\nfrom starlette.middleware.base import BaseHTTPMiddleware\n\nclass SecurityMiddleware(BaseHTTPMiddleware):\n    async def dispatch(self, request: Request, call_next):\n        # Rate limiting\n        # IP whitelisting\n        # Request validation\n        response = await call_next(request)\n        return response\n</code></pre>"},{"location":"api/authentication/#monitoreo-de-acceso","title":"\ud83d\udcca Monitoreo de Acceso","text":""},{"location":"api/authentication/#logs-de-acceso","title":"Logs de Acceso","text":"<pre><code># Monitorear accesos a la API\nsudo tail -f /var/log/caddy/access.log | grep \"/api/\"\n\n# Verificar intentos no autorizados\ngrep \"401\\|403\" /var/log/caddy/access.log\n</code></pre>"},{"location":"api/authentication/#metricas-de-seguridad","title":"M\u00e9tricas de Seguridad","text":"<pre><code># Implementar logging de seguridad\nimport logging\n\nsecurity_logger = logging.getLogger(\"security\")\n\n@app.middleware(\"http\")\nasync def log_requests(request: Request, call_next):\n    start_time = time.time()\n    response = await call_next(request)\n    process_time = time.time() - start_time\n\n    security_logger.info(\n        f\"IP: {request.client.host} \"\n        f\"Method: {request.method} \"\n        f\"Path: {request.url.path} \"\n        f\"Status: {response.status_code} \"\n        f\"Time: {process_time:.4f}s\"\n    )\n    return response\n</code></pre> <p>Estado Actual</p> <p>El sistema actual NO requiere autenticaci\u00f3n pero est\u00e1 protegido por m\u00faltiples capas de seguridad de red y proxy reverso.</p> <p>Recomendaci\u00f3n Futura</p> <p>Para entornos de producci\u00f3n con m\u00faltiples usuarios, considera implementar autenticaci\u00f3n basada en API keys o JWT tokens.</p> <p>Acceso Seguro</p> <p>Accede siempre a trav\u00e9s de: https://alertasfail2ban.xmakuno.com</p>"},{"location":"api/reference/","title":"\ud83d\udce1 API Reference","text":""},{"location":"api/reference/#introduccion","title":"Introducci\u00f3n","text":"<p>La documentaci\u00f3n completa de la API est\u00e1 disponible de forma interactiva a trav\u00e9s de Swagger UI y ReDoc, generada autom\u00e1ticamente por FastAPI.</p> <p>Acceso a la Documentaci\u00f3n</p> <p>Una vez que el sistema est\u00e9 desplegado, puedes acceder a la documentaci\u00f3n interactiva de la API en:</p> <ul> <li>Swagger UI: https://alertasfail2ban.xmakuno.com/docs</li> <li>ReDoc: https://alertasfail2ban.xmakuno.com/redoc</li> <li>OpenAPI Schema: https://alertasfail2ban.xmakuno.com/openapi.json</li> </ul>"},{"location":"api/reference/#enlaces-de-documentacion","title":"\ud83d\udd17 Enlaces de Documentaci\u00f3n","text":""},{"location":"api/reference/#swagger-ui-interactiva","title":"Swagger UI (Interactiva)","text":"<p>https://alertasfail2ban.xmakuno.com/docs</p> <p>Caracter\u00edsticas de Swagger UI</p> <ul> <li>\ud83e\uddea Pruebas en vivo: Ejecuta requests directamente desde el navegador</li> <li>\ud83d\udccb Esquemas detallados: Visualiza modelos de datos con ejemplos</li> <li>\ud83d\udd0d Exploraci\u00f3n interactiva: Navega por todos los endpoints disponibles</li> <li>\ud83d\udcdd Documentaci\u00f3n autom\u00e1tica: Generada desde el c\u00f3digo fuente</li> </ul>"},{"location":"api/reference/#redoc-documentacion","title":"ReDoc (Documentaci\u00f3n)","text":"<p>https://alertasfail2ban.xmakuno.com/redoc</p> <p>Caracter\u00edsticas de ReDoc</p> <ul> <li>\ud83d\udcd6 Vista optimizada para lectura: Layout dise\u00f1ado para documentaci\u00f3n</li> <li>\ud83d\udd0d B\u00fasqueda avanzada: Encuentra endpoints y modelos r\u00e1pidamente</li> <li>\ud83d\udcf1 Responsive design: Funciona perfectamente en m\u00f3viles</li> <li>\ud83d\udcca Ejemplos de c\u00f3digo: Snippets en m\u00faltiples lenguajes</li> </ul>"},{"location":"api/reference/#endpoints-principales","title":"\ud83d\ude80 Endpoints Principales","text":""},{"location":"api/reference/#resumen-de-la-api","title":"Resumen de la API","text":"Categor\u00eda Endpoint Descripci\u00f3n Health <code>GET /health</code> Estado del sistema y servicios Jails <code>GET /api/jails</code> Lista de jails de Fail2ban Jails <code>GET /api/jails/{jail_name}</code> Detalles de un jail espec\u00edfico Logs <code>GET /api/logs</code> Consulta de logs desde Loki Logs <code>GET /api/logs/stream</code> Stream de logs en tiempo real WebSocket <code>WS /ws/logs</code> Conexi\u00f3n WebSocket para logs"},{"location":"api/reference/#ejemplos-rapidos","title":"Ejemplos R\u00e1pidos","text":"Health CheckLista de JailsLogs Recientes <pre><code>curl https://alertasfail2ban.xmakuno.com/health\n</code></pre> <pre><code>{\n    \"status\": \"healthy\",\n    \"timestamp\": \"2025-01-21T10:30:00Z\",\n    \"services\": {\n        \"loki\": \"connected\",\n        \"fail2ban\": \"connected\"\n    }\n}\n</code></pre> <pre><code>curl https://alertasfail2ban.xmakuno.com/api/jails\n</code></pre> <pre><code>[\n    {\n        \"name\": \"sshd\",\n        \"status\": \"active\",\n        \"banned_ips\": [\"192.168.1.100\"],\n        \"total_banned\": 5,\n        \"total_failed\": 25\n    }\n]\n</code></pre> <pre><code>curl \"https://alertasfail2ban.xmakuno.com/api/logs?limit=10\"\n</code></pre>"},{"location":"api/reference/#desarrollo-y-testing","title":"\ud83d\udee0\ufe0f Desarrollo y Testing","text":""},{"location":"api/reference/#entorno-local","title":"Entorno Local","text":"<p>Si est\u00e1s ejecutando el sistema localmente para desarrollo:</p> <pre><code># Documentaci\u00f3n local\nhttp://localhost:8000/docs      # Swagger UI\nhttp://localhost:8000/redoc     # ReDoc\nhttp://localhost:8000/openapi.json  # Schema\n</code></pre>"},{"location":"api/reference/#pruebas-de-api","title":"Pruebas de API","text":"<pre><code>import requests\n\n# Configuraci\u00f3n base\nBASE_URL = \"https://alertasfail2ban.xmakuno.com\"\n\n# Test health endpoint\nresponse = requests.get(f\"{BASE_URL}/health\")\nprint(response.json())\n\n# Test jails endpoint\nresponse = requests.get(f\"{BASE_URL}/api/jails\")\nprint(response.json())\n</code></pre>"},{"location":"api/reference/#cliente-websocket","title":"Cliente WebSocket","text":"<pre><code>// Conexi\u00f3n WebSocket para logs en tiempo real\nconst ws = new WebSocket('wss://alertasfail2ban.xmakuno.com/ws/logs');\n\nws.onmessage = function(event) {\n    const logData = JSON.parse(event.data);\n    console.log('Nuevo log:', logData);\n};\n</code></pre>"},{"location":"api/reference/#modelos-de-datos","title":"\ud83d\udcda Modelos de Datos","text":""},{"location":"api/reference/#principales-schemas","title":"Principales Schemas","text":"<p>Los schemas completos est\u00e1n disponibles en la documentaci\u00f3n interactiva, pero aqu\u00ed tienes un resumen:</p> JailStatusLogEntryHealthStatus <pre><code>{\n    \"name\": \"string\",\n    \"status\": \"active | inactive\",\n    \"banned_ips\": [\"string\"],\n    \"total_banned\": 0,\n    \"total_failed\": 0,\n    \"filter_name\": \"string\",\n    \"actions\": [\"string\"]\n}\n</code></pre> <pre><code>{\n    \"timestamp\": \"2025-01-21T10:30:00Z\",\n    \"level\": \"INFO | WARNING | ERROR\",\n    \"message\": \"string\",\n    \"jail\": \"string\",\n    \"action\": \"string\",\n    \"ip\": \"string\"\n}\n</code></pre> <pre><code>{\n    \"status\": \"healthy | unhealthy\",\n    \"timestamp\": \"2025-01-21T10:30:00Z\",\n    \"services\": {\n        \"loki\": \"connected | disconnected\",\n        \"fail2ban\": \"connected | disconnected\"\n    },\n    \"version\": \"string\"\n}\n</code></pre>"},{"location":"api/reference/#configuracion-de-cliente","title":"\ud83d\udd27 Configuraci\u00f3n de Cliente","text":""},{"location":"api/reference/#headers-recomendados","title":"Headers Recomendados","text":"<pre><code># Headers para requests\nContent-Type: application/json\nAccept: application/json\nUser-Agent: YourApp/1.0\n</code></pre>"},{"location":"api/reference/#rate-limiting","title":"Rate Limiting","text":"<p>L\u00edmites de Rate</p> <ul> <li>Requests por minuto: 60 por IP</li> <li>Burst limit: 10 requests</li> <li>WebSocket connections: 5 por IP</li> </ul> <p>Si necesitas l\u00edmites m\u00e1s altos, contacta al administrador.</p>"},{"location":"api/reference/#error-handling","title":"Error Handling","text":"<pre><code>// Formato de errores est\u00e1ndar\n{\n    \"detail\": \"Error description\",\n    \"status_code\": 400,\n    \"timestamp\": \"2025-01-21T10:30:00Z\"\n}\n</code></pre>"},{"location":"api/reference/#documentacion-adicional","title":"\ud83d\udcd6 Documentaci\u00f3n Adicional","text":""},{"location":"api/reference/#enlaces-utiles","title":"Enlaces \u00datiles","text":"<ul> <li>C\u00f3digo Fuente: Repositorio completo del proyecto</li> <li>FastAPI Docs: Documentaci\u00f3n oficial de FastAPI</li> <li>Loki API: Documentaci\u00f3n de Loki para consultas avanzadas</li> </ul>"},{"location":"api/reference/#soporte","title":"Soporte","text":"<p>Si encuentras problemas con la API:</p> <ol> <li>Verifica el status: <code>GET /health</code></li> <li>Consulta los logs: Documentaci\u00f3n de troubleshooting</li> <li>Revisa ejemplos: En la documentaci\u00f3n interactiva</li> <li>Contacta soporte: Issues en el repositorio de GitHub</li> </ol> <p>Mejores Pr\u00e1cticas</p> <ul> <li>Usa la documentaci\u00f3n interactiva para explorar y probar</li> <li>Implementa retry logic para requests cr\u00edticos</li> <li>Monitorea rate limits en aplicaciones de producci\u00f3n</li> <li>Usa WebSockets para datos en tiempo real</li> </ul> <p>\u00a1Explora la API!</p> <p>Visita https://alertasfail2ban.xmakuno.com/docs para comenzar a explorar todos los endpoints disponibles de forma interactiva.</p>"},{"location":"arquitectura/components/","title":"\ud83d\udccb Componentes del Sistema","text":""},{"location":"arquitectura/components/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n detalla cada componente del sistema Fail2ban Dashboard, explicando su funci\u00f3n espec\u00edfica, configuraci\u00f3n y c\u00f3mo interact\u00faa con otros servicios.</p>"},{"location":"arquitectura/components/#fail2ban-host-service","title":"\ud83d\udee1\ufe0f Fail2ban (Host Service)","text":""},{"location":"arquitectura/components/#descripcion","title":"Descripci\u00f3n","text":"<p>Fail2ban es el coraz\u00f3n del sistema de seguridad. Monitorea logs del sistema en tiempo real y aplica baneos autom\u00e1ticos a IPs que muestran comportamiento sospechoso.</p>"},{"location":"arquitectura/components/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>Monitoreo en tiempo real de logs del sistema</li> <li>Baneos autom\u00e1ticos basados en patrones configurables</li> <li>M\u00faltiples jails para diferentes servicios (SSH, HTTP, etc.)</li> <li>Integraci\u00f3n con iptables para aplicar reglas de firewall</li> <li>API cliente para gesti\u00f3n program\u00e1tica</li> </ul>"},{"location":"arquitectura/components/#configuracion","title":"Configuraci\u00f3n","text":"Archivos ClaveVariables Importantes <ul> <li><code>/etc/fail2ban/jail.conf</code> - Configuraci\u00f3n base (NO modificar)</li> <li><code>/etc/fail2ban/jail.local</code> - Configuraci\u00f3n personalizada</li> <li><code>/etc/fail2ban/jail.d/</code> - Configuraciones espec\u00edficas por servicio</li> <li><code>/var/log/fail2ban.log</code> - Logs de actividad</li> </ul> <pre><code>[DEFAULT]\nbantime = 3600        # Tiempo de baneo (segundos)\nfindtime = 600        # Ventana de observaci\u00f3n\nmaxretry = 5          # Intentos m\u00e1ximos permitidos\nignoreip = 127.0.0.1/8 ::1  # IPs nunca baneadas\n</code></pre>"},{"location":"arquitectura/components/#interacciones","title":"Interacciones","text":"<pre><code>graph LR\n    F[Fail2ban] --&gt; L[System Logs]\n    F --&gt; I[iptables]\n    F --&gt; S[Socket /var/run/fail2ban/fail2ban.sock]\n    API[FastAPI] --&gt; S\n    P[Promtail] --&gt; L</code></pre>"},{"location":"arquitectura/components/#promtail-container","title":"\ud83d\udcdc Promtail (Container)","text":""},{"location":"arquitectura/components/#descripcion_1","title":"Descripci\u00f3n","text":"<p>Promtail es el agente recolector de logs que lee continuamente los archivos de log del sistema y los env\u00eda a Loki para almacenamiento y procesamiento.</p>"},{"location":"arquitectura/components/#caracteristicas-principales_1","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>Lectura continua de archivos de log</li> <li>Parsing y estructuraci\u00f3n de logs con regex</li> <li>Etiquetado autom\u00e1tico para facilitar consultas</li> <li>Multiline support para logs complejos</li> <li>Buffer management para garantizar entrega</li> </ul>"},{"location":"arquitectura/components/#pipeline-de-procesamiento","title":"Pipeline de Procesamiento","text":"<pre><code># promtail/promtail.yaml\npipeline_stages:\n  # 1. Multiline: Agrupa logs relacionados\n  - multiline:\n      firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n\n  # 2. Regex: Extrae campos estructurados\n  - regex:\n      expression: '^(?P&lt;time&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.]+)\\[(?P&lt;pid&gt;\\d+)\\]: (?P&lt;level&gt;\\w+)\\s+(\\[(?P&lt;jail&gt;\\w+)\\] )?(?P&lt;msg&gt;.*)'\n\n  # 3. Timestamp: Parsea fecha y hora\n  - timestamp:\n      source: time\n      format: '2006-01-02 15:04:05,000'\n\n  # 4. Labels: Crea etiquetas para Loki\n  - labels:\n      component:\n      level:\n      jail:\n\n  # 5. Output: Formateo final\n  - output:\n      source: msg\n</code></pre>"},{"location":"arquitectura/components/#volumenes-y-montajes","title":"Vol\u00famenes y Montajes","text":"<pre><code># docker-compose.yaml\nvolumes:\n  - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n  - /tmp/positions.yaml:/tmp/positions.yaml\n</code></pre> <p>Permisos</p> <p>Promtail necesita acceso de lectura a los logs de Fail2ban. Aseg\u00farate de que el usuario Docker tenga permisos adecuados.</p>"},{"location":"arquitectura/components/#loki-container","title":"\ud83d\uddc4\ufe0f Loki (Container)","text":""},{"location":"arquitectura/components/#descripcion_2","title":"Descripci\u00f3n","text":"<p>Loki es el sistema de agregaci\u00f3n y almacenamiento de logs, optimizado para consultas r\u00e1pidas y almacenamiento eficiente.</p>"},{"location":"arquitectura/components/#caracteristicas-principales_2","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>Almacenamiento distribuido de logs</li> <li>Indexaci\u00f3n por etiquetas para consultas eficientes</li> <li>Compresi\u00f3n autom\u00e1tica para optimizar espacio</li> <li>Retenci\u00f3n configurable de datos</li> <li>API REST para consultas y streaming</li> </ul>"},{"location":"arquitectura/components/#configuracion-de-almacenamiento","title":"Configuraci\u00f3n de Almacenamiento","text":"<pre><code># loki/config.yaml\nstorage_config:\n  boltdb_shipper:\n    active_index_directory: /loki/boltdb-shipper-active\n    cache_location: /loki/boltdb-shipper-cache\n    shared_store: filesystem\n  filesystem:\n    directory: /loki/chunks\n\nschema_config:\n  configs:\n    - from: 2020-10-24\n      store: boltdb-shipper\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n</code></pre>"},{"location":"arquitectura/components/#endpoints-de-api","title":"Endpoints de API","text":"Endpoint M\u00e9todo Descripci\u00f3n <code>/loki/api/v1/push</code> POST Ingesta de logs desde Promtail <code>/loki/api/v1/query</code> GET Consultas instant\u00e1neas <code>/loki/api/v1/query_range</code> GET Consultas con rango de tiempo <code>/loki/api/v1/tail</code> GET/WS Streaming de logs en tiempo real <code>/loki/api/v1/labels</code> GET Lista de etiquetas disponibles"},{"location":"arquitectura/components/#persistencia-de-datos","title":"Persistencia de Datos","text":"<pre><code># Volumen Docker para persistencia\nvolumes:\n  loki_data:\n    driver: local\n</code></pre> <p>Backup</p> <p>Los datos de Loki se almacenan en el volumen <code>loki_data</code>. Realizar backups regulares de este volumen.</p>"},{"location":"arquitectura/components/#api-fastapi-container","title":"\u2699\ufe0f API FastAPI (Container)","text":""},{"location":"arquitectura/components/#descripcion_3","title":"Descripci\u00f3n","text":"<p>FastAPI es el backend principal que proporciona la interfaz REST para interactuar con todos los servicios del sistema.</p>"},{"location":"arquitectura/components/#caracteristicas-principales_3","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>API REST completa con documentaci\u00f3n autom\u00e1tica</li> <li>WebSockets para streaming en tiempo real</li> <li>Integraci\u00f3n con Fail2ban via socket Unix</li> <li>Consultas a Loki para datos hist\u00f3ricos</li> <li>Servicio de archivos est\u00e1ticos y templates HTML</li> </ul>"},{"location":"arquitectura/components/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>api/\n\u251c\u2500\u2500 main.py                 # Aplicaci\u00f3n principal FastAPI\n\u251c\u2500\u2500 controllers/            # Endpoints REST\n\u2502   \u251c\u2500\u2500 logs_controller.py\n\u2502   \u251c\u2500\u2500 jails_controller.py\n\u2502   \u2514\u2500\u2500 stats_controller.py\n\u251c\u2500\u2500 services/              # L\u00f3gica de negocio\n\u2502   \u251c\u2500\u2500 loki_service.py\n\u2502   \u251c\u2500\u2500 fail2ban_service.py\n\u2502   \u2514\u2500\u2500 websocket_service.py\n\u251c\u2500\u2500 data/                  # Modelos de datos\n\u2502   \u251c\u2500\u2500 log_models.py\n\u2502   \u2514\u2500\u2500 jail_models.py\n\u251c\u2500\u2500 configuration/         # Configuraci\u00f3n\n\u2502   \u2514\u2500\u2500 settings.py\n\u251c\u2500\u2500 static/               # Archivos CSS/JS\n\u251c\u2500\u2500 templates/            # Templates HTML\n\u2514\u2500\u2500 requirements.txt      # Dependencias Python\n</code></pre>"},{"location":"arquitectura/components/#endpoints-principales","title":"Endpoints Principales","text":"LogsJailsWebSockets <pre><code># GET /api/logs\n# Consulta logs con filtros\n@router.get(\"/logs\")\nasync def get_logs(\n    start_time: str,\n    end_time: str,\n    jail: Optional[str] = None,\n    level: Optional[str] = None\n):\n    # Consulta a Loki via HTTP\n    return loki_service.query_logs(...)\n</code></pre> <pre><code># GET /api/jails\n# Lista jails activos\n@router.get(\"/jails\")\nasync def get_jails():\n    # Consulta via fail2ban-client\n    return fail2ban_service.get_jails()\n\n# POST /api/jails/{jail}/ban\n# Banea IP en jail espec\u00edfico\n@router.post(\"/jails/{jail}/ban\")\nasync def ban_ip(jail: str, ip: str):\n    return fail2ban_service.ban_ip(jail, ip)\n</code></pre> <pre><code># WebSocket /ws/logs\n# Streaming de logs en tiempo real\n@router.websocket(\"/ws/logs\")\nasync def websocket_logs(websocket: WebSocket):\n    # Proxy a Loki /tail endpoint\n    await websocket_service.stream_logs(websocket)\n</code></pre>"},{"location":"arquitectura/components/#configuracion-de-variables","title":"Configuraci\u00f3n de Variables","text":"<pre><code># configuration/settings.py\nfrom pydantic_settings import BaseSettings\n\nclass Settings(BaseSettings):\n    loki_query_url: str = \"http://loki:3100/loki/api/v1/query_range\"\n    loki_ws_url: str = \"ws://loki:3100/loki/api/v1/tail\"\n    fail2ban_log_path: str = \"/var/log/fail2ban.log\"\n    api_port: int = 8000\n\n    class Config:\n        env_file = \".env\"\n\nsettings = Settings()\n</code></pre>"},{"location":"arquitectura/components/#dependencias-docker","title":"Dependencias Docker","text":"<pre><code># Dockerfile\nFROM python:3.10-slim\n\n# Instalar fail2ban-client\nRUN apt-get update &amp;&amp; apt-get install -y fail2ban &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Instalar dependencias Python\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copiar c\u00f3digo\nCOPY . /app\nWORKDIR /app\n\n# Configurar Uvicorn para proxy headers\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\", \"--proxy-headers\", \"--forwarded-allow-ips\", \"*\"]\n</code></pre>"},{"location":"arquitectura/components/#caddy-host-service","title":"\ud83d\udd12 Caddy (Host Service)","text":""},{"location":"arquitectura/components/#descripcion_4","title":"Descripci\u00f3n","text":"<p>Caddy es el servidor web y proxy inverso que maneja el tr\u00e1fico HTTPS, certificados SSL autom\u00e1ticos y ruteo de requests.</p>"},{"location":"arquitectura/components/#caracteristicas-principales_4","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>HTTPS autom\u00e1tico con Let's Encrypt</li> <li>Proxy inverso hacia la API FastAPI</li> <li>Renovaci\u00f3n autom\u00e1tica de certificados</li> <li>Redirecci\u00f3n HTTP \u2192 HTTPS autom\u00e1tica</li> <li>Headers de seguridad configurables</li> </ul>"},{"location":"arquitectura/components/#configuracion-caddyfile","title":"Configuraci\u00f3n Caddyfile","text":"<pre><code># /etc/caddy/Caddyfile\nalertasfail2ban.xmakuno.com {\n    # Proxy inverso a la API\n    reverse_proxy localhost:8000\n\n    # Headers de seguridad\n    header {\n        # HSTS\n        Strict-Transport-Security max-age=31536000\n        # Prevenir clickjacking\n        X-Frame-Options DENY\n        # Prevenir MIME sniffing\n        X-Content-Type-Options nosniff\n        # XSS Protection\n        X-XSS-Protection \"1; mode=block\"\n    }\n\n    # Logs de acceso\n    log {\n        output file /var/log/caddy/access.log\n        format json\n    }\n\n    # Manejo de errores personalizado\n    handle_errors {\n        @5xx expression {http.error.status_code} &gt;= 500\n        respond @5xx \"Error interno del servidor\" 500\n    }\n}\n\n# Redirecci\u00f3n de www (opcional)\nwww.alertasfail2ban.xmakuno.com {\n    redir https://alertasfail2ban.xmakuno.com{uri} permanent\n}\n</code></pre>"},{"location":"arquitectura/components/#gestion-de-certificados","title":"Gesti\u00f3n de Certificados","text":"<p>Let's Encrypt Autom\u00e1tico</p> <p>Caddy maneja autom\u00e1ticamente:</p> <ul> <li>Obtenci\u00f3n inicial de certificados SSL</li> <li>Validaci\u00f3n HTTP-01 para verificar dominio</li> <li>Renovaci\u00f3n autom\u00e1tica antes del vencimiento</li> <li>Fallback a HTTP si hay problemas con HTTPS</li> </ul>"},{"location":"arquitectura/components/#logs-y-monitoreo","title":"Logs y Monitoreo","text":"<pre><code># Logs de Caddy\nsudo journalctl -u caddy -f\n\n# Estado del servicio\nsudo systemctl status caddy\n\n# Verificar certificados\ncaddy list-certificates\n</code></pre>"},{"location":"arquitectura/components/#docker-y-orquestacion","title":"\ud83d\udc33 Docker y Orquestaci\u00f3n","text":""},{"location":"arquitectura/components/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code># docker-compose.yaml\nversion: '3.8'\n\nservices:\n  api:\n    build: \n      context: ./api\n      dockerfile: Dockerfile\n    container_name: fail2ban-api\n    restart: unless-stopped\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - /var/run/fail2ban/fail2ban.sock:/var/run/fail2ban/fail2ban.sock\n      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n    environment:\n      - LOKI_QUERY_URL=http://loki:3100/loki/api/v1/query_range\n      - LOKI_WS_URL=ws://loki:3100/loki/api/v1/tail\n    depends_on:\n      - loki\n    networks:\n      - fail2ban_network\n\n  loki:\n    image: grafana/loki:latest\n    container_name: fail2ban-loki\n    restart: unless-stopped\n    ports:\n      - \"3100:3100\"\n    volumes:\n      - ./loki/config.yaml:/etc/loki/local-config.yaml\n      - loki_data:/loki\n    command: -config.file=/etc/loki/local-config.yaml\n    networks:\n      - fail2ban_network\n\n  promtail:\n    image: grafana/promtail:latest\n    container_name: fail2ban-promtail\n    restart: unless-stopped\n    volumes:\n      - ./promtail/promtail.yaml:/etc/promtail/config.yml\n      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n      - /tmp/positions.yaml:/tmp/positions.yaml\n    command: -config.file=/etc/promtail/config.yml\n    depends_on:\n      - loki\n    networks:\n      - fail2ban_network\n\nvolumes:\n  loki_data:\n    driver: local\n\nnetworks:\n  fail2ban_network:\n    driver: bridge\n</code></pre>"},{"location":"arquitectura/components/#politicas-de-restart","title":"Pol\u00edticas de Restart","text":"<p>Alta Disponibilidad</p> <p>Todos los servicios est\u00e1n configurados con <code>restart: unless-stopped</code> para:</p> <ul> <li>Reinicio autom\u00e1tico si el contenedor falla</li> <li>Supervivencia a reinicios del sistema</li> <li>Recuperaci\u00f3n autom\u00e1tica tras actualizaciones de Docker</li> </ul>"},{"location":"arquitectura/components/#flujo-de-datos-completo","title":"Flujo de Datos Completo","text":"<pre><code>sequenceDiagram\n    participant U as Usuario\n    participant C as Caddy\n    participant A as API\n    participant F as Fail2ban\n    participant P as Promtail\n    participant L as Loki\n\n    Note over F: Detecta intrusi\u00f3n\n    F-&gt;&gt;F: Banea IP maliciosa\n    F-&gt;&gt;+System: Escribe log\n\n    P-&gt;&gt;System: Lee log nuevo\n    P-&gt;&gt;P: Procesa y estructura\n    P-&gt;&gt;L: Env\u00eda a Loki\n\n    U-&gt;&gt;C: Accede al dashboard\n    C-&gt;&gt;A: Proxy request\n    A-&gt;&gt;L: Consulta logs recientes\n    L-&gt;&gt;A: Retorna datos\n    A-&gt;&gt;C: Respuesta JSON\n    C-&gt;&gt;U: Dashboard actualizado\n\n    Note over U: Ve baneo en tiempo real</code></pre> <p>Pr\u00f3ximo Paso</p> <p>Explora los diagramas detallados para ver representaciones visuales completas de la arquitectura.</p>"},{"location":"arquitectura/diagrams/","title":"\ud83d\uddfa\ufe0f Diagramas de Arquitectura","text":""},{"location":"arquitectura/diagrams/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta secci\u00f3n presenta diagramas t\u00e9cnicos detallados que muestran la arquitectura del sistema desde diferentes perspectivas: infraestructura, flujo de datos, redes y despliegue.</p>"},{"location":"arquitectura/diagrams/#arquitectura-de-infraestructura","title":"\ud83c\udfd7\ufe0f Arquitectura de Infraestructura","text":""},{"location":"arquitectura/diagrams/#vista-general-del-sistema","title":"Vista General del Sistema","text":"<pre><code>graph TB\n    subgraph \"Internet\"\n        USER[\ud83d\udc64 Usuarios]\n        DNS[\ud83c\udf10 Namecheap DNS]\n        LE[\ud83d\udd12 Let's Encrypt]\n    end\n\n    subgraph \"DigitalOcean Cloud\"\n        subgraph \"Cloud Firewall\"\n            FW_SSH[SSH:22]\n            FW_HTTP[HTTP:80]\n            FW_HTTPS[HTTPS:443]\n        end\n\n        subgraph \"Ubuntu 22.04 Droplet\"\n            subgraph \"Host Services\"\n                CADDY[\ud83d\udd12 Caddy v2]\n                FAIL2BAN[\ud83d\udee1\ufe0f Fail2ban]\n                DOCKER[\ud83d\udc33 Docker Engine]\n                UFW[\ud83d\udd25 ufw Firewall]\n            end\n\n            subgraph \"Docker Network (fail2ban_network)\"\n                API[\u2699\ufe0f FastAPI Container]\n                LOKI[\ud83d\uddc4\ufe0f Loki Container]\n                PROMTAIL[\ud83d\udcdc Promtail Container]\n            end\n\n            subgraph \"File System\"\n                LOGS[\ud83d\udcc1 /var/log/fail2ban.log]\n                SOCKET[\ud83d\udd0c /var/run/fail2ban/fail2ban.sock]\n                LOKI_DATA[\ud83d\udcbe loki_data volume]\n            end\n        end\n    end\n\n    USER --&gt;|HTTPS Request| DNS\n    DNS --&gt;|Resolves to| FW_HTTPS\n    FW_HTTPS --&gt; CADDY\n\n    CADDY --&gt;|Reverse Proxy| API\n    CADDY &lt;--&gt;|Certificate Validation| LE\n\n    API --&gt;|Unix Socket| SOCKET\n    API --&gt;|HTTP Queries| LOKI\n\n    FAIL2BAN --&gt; LOGS\n    FAIL2BAN --&gt; SOCKET\n\n    PROMTAIL --&gt;|Reads| LOGS\n    PROMTAIL --&gt;|Ships Logs| LOKI\n\n    LOKI --&gt; LOKI_DATA\n\n    DOCKER --&gt;|Manages| API\n    DOCKER --&gt;|Manages| LOKI\n    DOCKER --&gt;|Manages| PROMTAIL</code></pre>"},{"location":"arquitectura/diagrams/#arquitectura-de-red","title":"\ud83c\udf10 Arquitectura de Red","text":""},{"location":"arquitectura/diagrams/#configuracion-de-puertos-y-firewall","title":"Configuraci\u00f3n de Puertos y Firewall","text":"<pre><code>graph LR\n    subgraph \"External Network\"\n        INTERNET[\ud83c\udf0d Internet]\n    end\n\n    subgraph \"DigitalOcean Cloud Firewall\"\n        CF_22[Port 22/TCP&lt;br/&gt;SSH Access]\n        CF_80[Port 80/TCP&lt;br/&gt;HTTP&lt;br/&gt;Let's Encrypt]\n        CF_443[Port 443/TCP&lt;br/&gt;HTTPS&lt;br/&gt;Production Traffic]\n        CF_BLOCK[\u274c Port 8000/TCP&lt;br/&gt;BLOCKED&lt;br/&gt;Direct API Access]\n    end\n\n    subgraph \"Droplet Internal Network\"\n        subgraph \"Host Ports\"\n            H_22[22 \u2192 SSH]\n            H_80[80 \u2192 Caddy]\n            H_443[443 \u2192 Caddy]\n            H_8000[8000 \u2192 API Container]\n        end\n\n        subgraph \"Docker Bridge Network\"\n            D_API[API:8000]\n            D_LOKI[Loki:3100]\n            D_PROMTAIL[Promtail:9080]\n        end\n    end\n\n    INTERNET --&gt; CF_22\n    INTERNET --&gt; CF_80\n    INTERNET --&gt; CF_443\n    INTERNET -.-&gt;|BLOCKED| CF_BLOCK\n\n    CF_22 --&gt; H_22\n    CF_80 --&gt; H_80\n    CF_443 --&gt; H_443\n\n    H_80 --&gt; D_API\n    H_443 --&gt; D_API\n    H_8000 --&gt; D_API\n\n    D_API &lt;--&gt; D_LOKI\n    D_PROMTAIL --&gt; D_LOKI</code></pre>"},{"location":"arquitectura/diagrams/#flujo-de-red-detallado","title":"Flujo de Red Detallado","text":"<p>Configuraci\u00f3n de Seguridad de Red</p> Puertos ExpuestosPuertos InternosBloqueos Cr\u00edticos <ul> <li>22/TCP: SSH para administraci\u00f3n (restringir por IP)</li> <li>80/TCP: HTTP para validaci\u00f3n Let's Encrypt</li> <li>443/TCP: HTTPS para tr\u00e1fico de producci\u00f3n</li> </ul> <ul> <li>8000/TCP: API FastAPI (solo localhost)</li> <li>3100/TCP: Loki (solo red Docker)</li> <li>9080/TCP: Promtail (solo red Docker)</li> </ul> <ul> <li>\u274c Puerto 8000 NO debe estar abierto en Cloud Firewall</li> <li>\u274c Puertos 3100, 9080 NO deben ser accesibles externamente</li> </ul>"},{"location":"arquitectura/diagrams/#flujo-de-datos-y-procesamiento","title":"\ud83d\udcca Flujo de Datos y Procesamiento","text":""},{"location":"arquitectura/diagrams/#pipeline-completo-de-logs","title":"Pipeline Completo de Logs","text":"<pre><code>sequenceDiagram\n    participant SS as Suspicious Source\n    participant SRV as Server Service\n    participant FB as Fail2ban\n    participant FS as File System\n    participant PT as Promtail\n    participant LK as Loki\n    participant API as FastAPI\n    participant CD as Caddy\n    participant USR as User Dashboard\n\n    Note over SS,SRV: 1. Intento de Intrusi\u00f3n\n    SS-&gt;&gt;+SRV: M\u00faltiples intentos SSH fallidos\n    SRV-&gt;&gt;FS: Escribe en /var/log/auth.log\n\n    Note over FB: 2. Detecci\u00f3n y Baneo\n    FB-&gt;&gt;FS: Monitorea auth.log\n    FB-&gt;&gt;FB: Detecta patr\u00f3n malicioso\n    FB-&gt;&gt;SRV: Aplica regla iptables\n    FB-&gt;&gt;FS: Escribe en fail2ban.log\n\n    Note over PT,LK: 3. Recolecci\u00f3n de Logs\n    PT-&gt;&gt;FS: Lee fail2ban.log\n    PT-&gt;&gt;PT: Procesa con regex\n    PT-&gt;&gt;+LK: Env\u00eda logs estructurados\n    LK-&gt;&gt;LK: Indexa por etiquetas\n\n    Note over API,USR: 4. Visualizaci\u00f3n\n    USR-&gt;&gt;CD: Accede al dashboard\n    CD-&gt;&gt;API: Proxy HTTPS request\n    API-&gt;&gt;LK: Query logs recientes\n    LK-&gt;&gt;API: Retorna datos JSON\n    API-&gt;&gt;CD: Response con datos\n    CD-&gt;&gt;USR: Dashboard actualizado\n\n    Note over USR: 5. Acci\u00f3n del Usuario\n    USR-&gt;&gt;CD: Solicita desbanear IP\n    CD-&gt;&gt;API: POST /jails/sshd/unban\n    API-&gt;&gt;FB: fail2ban-client unban\n    FB-&gt;&gt;SRV: Remueve regla iptables\n    FB-&gt;&gt;FS: Log de desbaneo</code></pre>"},{"location":"arquitectura/diagrams/#estados-del-sistema","title":"Estados del Sistema","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; Normal\n\n    Normal --&gt; Suspicious: Detecta actividad maliciosa\n    Suspicious --&gt; Analyzing: Fail2ban eval\u00faa patrones\n\n    Analyzing --&gt; Banned: Excede threshold\n    Analyzing --&gt; Normal: Dentro de l\u00edmites\n\n    Banned --&gt; Monitoring: IP baneada\n    Monitoring --&gt; Banned: Mantiene baneo\n    Monitoring --&gt; Normal: Tiempo de baneo expirado\n\n    Banned --&gt; Normal: Admin desbanea manualmente\n\n    state Monitoring {\n        [*] --&gt; Active\n        Active --&gt; Logging: Registra actividad\n        Logging --&gt; Active\n    }</code></pre>"},{"location":"arquitectura/diagrams/#arquitectura-de-despliegue","title":"\ud83d\udd04 Arquitectura de Despliegue","text":""},{"location":"arquitectura/diagrams/#flujo-de-cicd-y-despliegue","title":"Flujo de CI/CD y Despliegue","text":"<pre><code>graph TB\n    subgraph \"Development\"\n        DEV[\ud83d\udc68\u200d\ud83d\udcbb Developer]\n        GIT[\ud83d\udcda Git Repository]\n    end\n\n    subgraph \"Build &amp; Deploy\"\n        GHA[\ud83d\udd04 GitHub Actions]\n        DOCKER_BUILD[\ud83d\udc33 Docker Build]\n        DOCKER_PUSH[\ud83d\udce4 Docker Push]\n    end\n\n    subgraph \"Production Server\"\n        PULL[\ud83d\udce5 Docker Pull]\n        COMPOSE[\ud83c\udfbc Docker Compose]\n        HEALTH[\ud83c\udfe5 Health Checks]\n    end\n\n    subgraph \"Monitoring\"\n        LOGS_MON[\ud83d\udcca Log Monitoring]\n        ALERTS[\ud83d\udea8 Alerts]\n        METRICS[\ud83d\udcc8 Metrics]\n    end\n\n    DEV --&gt; GIT\n    GIT --&gt; GHA\n\n    GHA --&gt; DOCKER_BUILD\n    DOCKER_BUILD --&gt; DOCKER_PUSH\n\n    DOCKER_PUSH --&gt; PULL\n    PULL --&gt; COMPOSE\n    COMPOSE --&gt; HEALTH\n\n    HEALTH --&gt; LOGS_MON\n    LOGS_MON --&gt; ALERTS\n    LOGS_MON --&gt; METRICS\n\n    ALERTS --&gt;|Notifica| DEV</code></pre>"},{"location":"arquitectura/diagrams/#estrategia-de-actualizacion","title":"Estrategia de Actualizaci\u00f3n","text":"<pre><code>graph LR\n    subgraph \"Actualizaci\u00f3n Zero-Downtime\"\n        BACKUP[\ud83d\udcbe Backup Data]\n        PULL_NEW[\ud83d\udce5 Pull New Images]\n        STOP_OLD[\u23f9\ufe0f Stop Old Containers]\n        START_NEW[\u25b6\ufe0f Start New Containers]\n        VERIFY[\u2705 Verify Health]\n        ROLLBACK[\ud83d\udd04 Rollback if Error]\n    end\n\n    BACKUP --&gt; PULL_NEW\n    PULL_NEW --&gt; STOP_OLD\n    STOP_OLD --&gt; START_NEW\n    START_NEW --&gt; VERIFY\n    VERIFY --&gt;|\u274c Error| ROLLBACK\n    VERIFY --&gt;|\u2705 Success| END[\ud83c\udf89 Deploy Complete]\n    ROLLBACK --&gt; STOP_OLD</code></pre>"},{"location":"arquitectura/diagrams/#arquitectura-de-seguridad","title":"\ud83d\udd10 Arquitectura de Seguridad","text":""},{"location":"arquitectura/diagrams/#capas-de-seguridad","title":"Capas de Seguridad","text":"<pre><code>graph TB\n    subgraph \"Security Layers\"\n        subgraph \"Layer 1: Cloud Infrastructure\"\n            CF[\ud83d\udee1\ufe0f DigitalOcean Cloud Firewall]\n            DOS[\ud83d\udeab DDoS Protection]\n        end\n\n        subgraph \"Layer 2: Host Level\"\n            UFW[\ud83d\udd25 ufw Firewall]\n            FAIL2BAN[\ud83d\udee1\ufe0f Fail2ban IPS]\n            SSH_KEY[\ud83d\udd11 SSH Key Auth]\n        end\n\n        subgraph \"Layer 3: Application Level\"\n            TLS[\ud83d\udd12 TLS/SSL Encryption]\n            CADDY_SEC[\ud83d\udee1\ufe0f Caddy Security Headers]\n            API_AUTH[\ud83d\udd10 API Authentication]\n        end\n\n        subgraph \"Layer 4: Container Level\"\n            DOCKER_NET[\ud83c\udf10 Isolated Docker Networks]\n            CONTAINER_USER[\ud83d\udc64 Non-root Containers]\n            VOLUME_PERM[\ud83d\udcc1 Volume Permissions]\n        end\n    end\n\n    INTERNET[\ud83c\udf0d Internet] --&gt; CF\n    CF --&gt; DOS\n    DOS --&gt; UFW\n    UFW --&gt; FAIL2BAN\n    FAIL2BAN --&gt; SSH_KEY\n    SSH_KEY --&gt; TLS\n    TLS --&gt; CADDY_SEC\n    CADDY_SEC --&gt; API_AUTH\n    API_AUTH --&gt; DOCKER_NET\n    DOCKER_NET --&gt; CONTAINER_USER\n    CONTAINER_USER --&gt; VOLUME_PERM\n    VOLUME_PERM --&gt; SECURE_APP[\ud83c\udfaf Secure Application]</code></pre>"},{"location":"arquitectura/diagrams/#flujo-de-autenticacion-y-autorizacion","title":"Flujo de Autenticaci\u00f3n y Autorizaci\u00f3n","text":"<pre><code>sequenceDiagram\n    participant C as Client\n    participant CF as Cloud Firewall\n    participant CD as Caddy\n    participant API as FastAPI\n    participant FB as Fail2ban\n\n    Note over C,FB: Security Check Flow\n\n    C-&gt;&gt;CF: Request to server\n    CF-&gt;&gt;CF: Check allowed ports\n    alt Port not allowed\n        CF-&gt;&gt;C: \u274c Block request\n    else Port allowed\n        CF-&gt;&gt;CD: Forward request\n    end\n\n    CD-&gt;&gt;CD: Verify SSL certificate\n    CD-&gt;&gt;CD: Apply security headers\n    CD-&gt;&gt;API: Proxy to API\n\n    API-&gt;&gt;API: Validate request format\n    API-&gt;&gt;API: Check rate limits\n\n    alt Rate limit exceeded\n        API-&gt;&gt;FB: Report suspicious activity\n        FB-&gt;&gt;FB: Evaluate for banning\n        API-&gt;&gt;CD: \u274c Rate limit error\n    else Request valid\n        API-&gt;&gt;API: Process request\n        API-&gt;&gt;CD: \u2705 Success response\n    end\n\n    CD-&gt;&gt;C: Final response</code></pre>"},{"location":"arquitectura/diagrams/#arquitectura-de-monitoreo","title":"\ud83d\udcc8 Arquitectura de Monitoreo","text":""},{"location":"arquitectura/diagrams/#sistema-de-observabilidad","title":"Sistema de Observabilidad","text":"<pre><code>graph TB\n    subgraph \"Data Sources\"\n        APP_LOGS[\ud83d\udcdd Application Logs]\n        SYS_LOGS[\ud83d\udccb System Logs]\n        FAIL2BAN_LOGS[\ud83d\udee1\ufe0f Fail2ban Logs]\n        CADDY_LOGS[\ud83d\udd12 Caddy Logs]\n    end\n\n    subgraph \"Collection Layer\"\n        PROMTAIL[\ud83d\udcdc Promtail Agent]\n        FILEBEAT[\ud83d\udcca Log Shippers]\n    end\n\n    subgraph \"Storage &amp; Processing\"\n        LOKI[\ud83d\uddc4\ufe0f Loki Log Store]\n        ELASTIC[\ud83d\udd0d Search Engine]\n    end\n\n    subgraph \"Visualization\"\n        API_ENDPOINT[\u2699\ufe0f API Endpoints]\n        DASHBOARD[\ud83d\udcca Web Dashboard]\n        GRAFANA[\ud83d\udcc8 Grafana (Optional)]\n    end\n\n    subgraph \"Alerting\"\n        WEBHOOKS[\ud83d\udd17 Webhooks]\n        EMAIL[\ud83d\udce7 Email Alerts]\n        SLACK[\ud83d\udcac Slack Integration]\n    end\n\n    APP_LOGS --&gt; PROMTAIL\n    SYS_LOGS --&gt; PROMTAIL\n    FAIL2BAN_LOGS --&gt; PROMTAIL\n    CADDY_LOGS --&gt; FILEBEAT\n\n    PROMTAIL --&gt; LOKI\n    FILEBEAT --&gt; ELASTIC\n\n    LOKI --&gt; API_ENDPOINT\n    ELASTIC --&gt; API_ENDPOINT\n\n    API_ENDPOINT --&gt; DASHBOARD\n    API_ENDPOINT --&gt; GRAFANA\n\n    API_ENDPOINT --&gt; WEBHOOKS\n    WEBHOOKS --&gt; EMAIL\n    WEBHOOKS --&gt; SLACK</code></pre>"},{"location":"arquitectura/diagrams/#escalabilidad-y-alta-disponibilidad","title":"\ud83d\ude80 Escalabilidad y Alta Disponibilidad","text":""},{"location":"arquitectura/diagrams/#arquitectura-escalable","title":"Arquitectura Escalable","text":"<pre><code>graph TB\n    subgraph \"Load Balancer Tier\"\n        LB[\u2696\ufe0f Load Balancer]\n        CDN[\ud83c\udf10 CDN (Optional)]\n    end\n\n    subgraph \"Application Tier\"\n        API1[\u2699\ufe0f API Instance 1]\n        API2[\u2699\ufe0f API Instance 2]\n        API3[\u2699\ufe0f API Instance N]\n    end\n\n    subgraph \"Data Tier\"\n        LOKI_CLUSTER[\ud83d\uddc4\ufe0f Loki Cluster]\n        DB_BACKUP[\ud83d\udcbe Database Backup]\n    end\n\n    subgraph \"Monitoring Tier\"\n        PROMTAIL_MULTI[\ud83d\udcdc Promtail Instances]\n        METRICS[\ud83d\udcca Metrics Collection]\n    end\n\n    CDN --&gt; LB\n    LB --&gt; API1\n    LB --&gt; API2\n    LB --&gt; API3\n\n    API1 --&gt; LOKI_CLUSTER\n    API2 --&gt; LOKI_CLUSTER\n    API3 --&gt; LOKI_CLUSTER\n\n    LOKI_CLUSTER --&gt; DB_BACKUP\n\n    PROMTAIL_MULTI --&gt; LOKI_CLUSTER\n    METRICS --&gt; LOKI_CLUSTER</code></pre> <p>Consideraciones de Escalabilidad</p> Escala HorizontalEscala VerticalAlta Disponibilidad <ul> <li>M\u00faltiples instancias API detr\u00e1s de load balancer</li> <li>Cluster de Loki para mayor capacidad de almacenamiento</li> <li>M\u00faltiples Promtail para recolecci\u00f3n distribuida</li> </ul> <ul> <li>Incrementar recursos de los contenedores existentes</li> <li>Optimizar consultas a Loki para mejor rendimiento</li> <li>Tuning de configuraciones para mayor throughput</li> </ul> <ul> <li>Health checks autom\u00e1ticos en todos los servicios</li> <li>Failover autom\u00e1tico con restart policies</li> <li>Backups regulares de datos cr\u00edticos</li> <li>Monitoreo proactivo con alertas</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Ahora que entiendes la arquitectura completa, contin\u00faa con la configuraci\u00f3n del servidor para implementar este sistema paso a paso.</p>"},{"location":"arquitectura/overview/","title":"\ud83d\uddfa\ufe0f Descripci\u00f3n General del Sistema","text":""},{"location":"arquitectura/overview/#introduccion","title":"Introducci\u00f3n","text":"<p>El sistema de monitoreo Fail2ban est\u00e1 dise\u00f1ado como una arquitectura de microservicios containerizada que proporciona una soluci\u00f3n completa para la gesti\u00f3n y monitoreo de seguridad en servidores.</p>"},{"location":"arquitectura/overview/#componentes-principales","title":"Componentes Principales","text":"<pre><code>graph TB\n    subgraph \"Host System (Ubuntu 22.04)\"\n        F[Fail2ban Service]\n        C[Caddy Web Server]\n        D[Docker Engine]\n        L[System Logs]\n    end\n\n    subgraph \"Docker Network\"\n        API[FastAPI Container]\n        LOKI[Loki Container]\n        PROM[Promtail Container]\n    end\n\n    subgraph \"External\"\n        USER[Users/Admins]\n        LE[Let's Encrypt]\n        DOMAIN[alertasfail2ban.xmakuno.com]\n    end\n\n    F --&gt; L\n    PROM --&gt; L\n    PROM --&gt; LOKI\n    API --&gt; LOKI\n    API --&gt; F\n    C --&gt; API\n    C --&gt; LE\n    USER --&gt; C\n    USER --&gt; DOMAIN\n    DOMAIN --&gt; C\n    D --&gt; API\n    D --&gt; LOKI\n    D --&gt; PROM</code></pre>"},{"location":"arquitectura/overview/#arquitectura-de-alto-nivel","title":"Arquitectura de Alto Nivel","text":""},{"location":"arquitectura/overview/#distribucion-de-servicios","title":"\ud83c\udfd7\ufe0f Distribuci\u00f3n de Servicios","text":"<p>El sistema est\u00e1 distribuido en dos capas principales:</p> Host LevelContainer Level <p>Servicios que se ejecutan directamente en el sistema operativo Ubuntu:</p> <ul> <li>\ud83d\udee1\ufe0f Fail2ban: Monitoreo y baneos autom\u00e1ticos</li> <li>\ud83d\udd12 Caddy: Servidor web y proxy inverso con SSL autom\u00e1tico</li> <li>\ud83d\udc33 Docker Engine: Plataforma de containerizaci\u00f3n</li> <li>\ud83d\udcc2 Sistema de archivos: Logs y configuraciones</li> </ul> <p>Servicios containerizados con Docker:</p> <ul> <li>\u2699\ufe0f API FastAPI: Backend principal de la aplicaci\u00f3n</li> <li>\ud83d\uddc4\ufe0f Loki: Sistema de agregaci\u00f3n de logs</li> <li>\ud83d\udcdc Promtail: Agente recolector de logs</li> </ul>"},{"location":"arquitectura/overview/#flujo-de-datos","title":"Flujo de Datos","text":""},{"location":"arquitectura/overview/#1-recoleccion-de-logs","title":"1. \ud83d\udcdd Recolecci\u00f3n de Logs","text":"<p>Pipeline de Logging</p> <pre><code>sequenceDiagram\n    participant F as Fail2ban\n    participant L as System Logs\n    participant P as Promtail\n    participant LK as Loki\n    participant A as API\n\n    F-&gt;&gt;L: Escribe logs de actividad\n    P-&gt;&gt;L: Lee logs continuamente\n    P-&gt;&gt;P: Procesa y parsea logs\n    P-&gt;&gt;LK: Env\u00eda logs estructurados\n    A-&gt;&gt;LK: Consulta logs hist\u00f3ricos\n    LK-&gt;&gt;A: Retorna resultados</code></pre>"},{"location":"arquitectura/overview/#2-acceso-web","title":"2. \ud83c\udf10 Acceso Web","text":"<p>Flujo de Requests HTTP/HTTPS</p> <pre><code>sequenceDiagram\n    participant U as Usuario\n    participant D as DNS/Domain\n    participant C as Caddy\n    participant A as API FastAPI\n    participant L as Loki\n\n    U-&gt;&gt;D: Solicita alertasfail2ban.xmakuno.com\n    D-&gt;&gt;C: Resuelve a IP del Droplet\n    C-&gt;&gt;C: Verifica/Renueva certificado SSL\n    C-&gt;&gt;A: Proxy request a localhost:8000\n    A-&gt;&gt;L: Consulta datos si necesario\n    L-&gt;&gt;A: Responde con datos\n    A-&gt;&gt;C: Respuesta JSON/HTML\n    C-&gt;&gt;U: Respuesta HTTPS</code></pre>"},{"location":"arquitectura/overview/#3-gestion-de-baneos","title":"3. \ud83d\udd27 Gesti\u00f3n de Baneos","text":"<p>Control de Acceso en Tiempo Real</p> <pre><code>sequenceDiagram\n    participant UI as Dashboard/API\n    participant A as API FastAPI\n    participant FC as fail2ban-client\n    participant F as Fail2ban Service\n    participant IPT as iptables\n\n    UI-&gt;&gt;A: Solicitud de baneo/desbaneo\n    A-&gt;&gt;FC: Ejecuta comando via socket\n    FC-&gt;&gt;F: Comunica acci\u00f3n\n    F-&gt;&gt;IPT: Aplica regla de firewall\n    F-&gt;&gt;F: Actualiza logs\n    A-&gt;&gt;UI: Confirma acci\u00f3n</code></pre>"},{"location":"arquitectura/overview/#beneficios-de-la-arquitectura","title":"Beneficios de la Arquitectura","text":""},{"location":"arquitectura/overview/#ventajas-clave","title":"\ud83c\udfaf Ventajas Clave","text":"EscalabilidadSeguridadMantenibilidadDisponibilidad <ul> <li>Containerizaci\u00f3n: Cada servicio puede escalarse independientemente</li> <li>Microservicios: Componentes desacoplados y reutilizables</li> <li>API REST: Interfaz est\u00e1ndar para m\u00faltiples clientes (web, m\u00f3vil, CLI)</li> <li>Load Balancing: Caddy puede distribuir carga entre m\u00faltiples instancias</li> </ul> <ul> <li>Aislamiento: Servicios en contenedores con redes separadas</li> <li>HTTPS Autom\u00e1tico: Let's Encrypt gestiona certificados SSL/TLS</li> <li>Firewall Multi-capa: Cloud Firewall + ufw + Fail2ban + iptables</li> <li>Principio de menor privilegio: Cada servicio con permisos m\u00ednimos</li> </ul> <ul> <li>Infrastructure as Code: Docker Compose define toda la infraestructura</li> <li>Logs Centralizados: Monitoreo unificado con Loki</li> <li>Configuraci\u00f3n Declarativa: Variables de entorno y archivos de config</li> <li>Rollback F\u00e1cil: Versionado de contenedores Docker</li> </ul> <ul> <li>Auto-restart: Pol\u00edtica <code>unless-stopped</code> en todos los contenedores</li> <li>Health Checks: Monitoreo autom\u00e1tico de servicios</li> <li>Backup Autom\u00e1tico: Persistencia de datos cr\u00edticos</li> <li>Zero-downtime Deployments: Actualizaciones sin interrupciones</li> </ul>"},{"location":"arquitectura/overview/#tecnologias-y-versiones","title":"Tecnolog\u00edas y Versiones","text":"Componente Tecnolog\u00eda Versi\u00f3n Prop\u00f3sito Principal Proxy Inverso Caddy v2+ Servidor web, SSL autom\u00e1tico, reverse proxy Backend API FastAPI Latest API REST, WebSockets, documentaci\u00f3n autom\u00e1tica Log Aggregation Loki Latest Almacenamiento y consulta de logs Log Collection Promtail Latest Recolecci\u00f3n y procesamiento de logs Security Fail2ban Latest Prevenci\u00f3n de intrusiones y baneos Containerization Docker Latest Aislamiento y portabilidad de servicios Orchestration Docker Compose v2+ Definici\u00f3n y gesti\u00f3n de multi-contenedores Operating System Ubuntu 22.04 LTS Sistema operativo base estable Cloud Provider DigitalOcean - Hosting de la infraestructura"},{"location":"arquitectura/overview/#patrones-arquitectonicos-implementados","title":"Patrones Arquitect\u00f3nicos Implementados","text":""},{"location":"arquitectura/overview/#patrones-utilizados","title":"\ud83c\udfdb\ufe0f Patrones Utilizados","text":"<p>Microservicios</p> <p>Cada componente tiene una responsabilidad espec\u00edfica y puede desarrollarse, desplegarse y escalarse independientemente.</p> <p>API Gateway Pattern</p> <p>Caddy act\u00faa como punto de entrada \u00fanico, manejando SSL, routing y load balancing.</p> <p>Sidecar Pattern</p> <p>Promtail act\u00faa como sidecar para recolectar logs sin afectar el servicio principal.</p> <p>Circuit Breaker</p> <p>La API implementa timeouts y retry logic para fallos de comunicaci\u00f3n con servicios externos.</p> <p>Configuration Management</p> <p>Variables de entorno y archivos de configuraci\u00f3n separados del c\u00f3digo para diferentes ambientes.</p>"},{"location":"arquitectura/overview/#consideraciones-de-red","title":"Consideraciones de Red","text":""},{"location":"arquitectura/overview/#configuracion-de-red-docker","title":"\ud83c\udf10 Configuraci\u00f3n de Red Docker","text":"<pre><code># docker-compose.yaml - Red interna\nnetworks:\n  fail2ban_network:\n    driver: bridge\n    internal: false\n</code></pre>"},{"location":"arquitectura/overview/#mapeo-de-puertos","title":"\ud83d\udd12 Mapeo de Puertos","text":"Servicio Puerto Interno Puerto Host Exposici\u00f3n API FastAPI 8000 8000 Solo localhost Loki 3100 3100 Solo red Docker Promtail 9080 - Solo red Docker Caddy 80/443 80/443 Internet <p>Seguridad de Puertos</p> <ul> <li>Solo los puertos 80 y 443 de Caddy est\u00e1n expuestos al internet</li> <li>El puerto 8000 de la API solo es accesible desde localhost</li> <li>Loki y Promtail solo son accesibles dentro de la red Docker</li> </ul>"},{"location":"arquitectura/overview/#proximos-pasos","title":"Pr\u00f3ximos Pasos","text":"<p>Continuar Explorando</p> <ul> <li>\ud83d\udccb Componentes Detallados - An\u00e1lisis profundo de cada servicio</li> <li>\ud83d\uddfa\ufe0f Diagramas de Arquitectura - Diagramas t\u00e9cnicos completos</li> <li>\u2699\ufe0f Configuraci\u00f3n del Servidor - Setup inicial del Droplet</li> </ul>"},{"location":"deployment/installation/","title":"\ud83d\ude80 Instalaci\u00f3n del Sistema","text":""},{"location":"deployment/installation/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta gu\u00eda te llevar\u00e1 paso a paso por la instalaci\u00f3n completa del sistema Fail2ban Dashboard en un Droplet de DigitalOcean desde cero.</p>"},{"location":"deployment/installation/#requisitos-previos","title":"\ud83d\udccb Requisitos Previos","text":""},{"location":"deployment/installation/#infraestructura-minima","title":"Infraestructura M\u00ednima","text":"<p>Especificaciones del Servidor</p> <ul> <li>Proveedor: DigitalOcean Droplet</li> <li>SO: Ubuntu 22.04 LTS</li> <li>RAM: M\u00ednimo 2GB (recomendado 4GB)</li> <li>Almacenamiento: M\u00ednimo 20GB SSD</li> <li>CPU: 1 vCPU (recomendado 2 vCPUs)</li> <li>Dominio: Configurado y apuntando al Droplet</li> </ul>"},{"location":"deployment/installation/#servicios-externos","title":"Servicios Externos","text":"Dominio y DNSAcceso SSH <ul> <li>Dominio registrado (ej. Namecheap)</li> <li>Record A apuntando al IP del Droplet</li> <li>Record AAAA para IPv6 (opcional)</li> </ul> <ul> <li>Par de claves SSH generadas</li> <li>Clave p\u00fablica agregada al Droplet</li> </ul>"},{"location":"deployment/installation/#preparacion-del-servidor","title":"\ud83d\udd27 Preparaci\u00f3n del Servidor","text":""},{"location":"deployment/installation/#1-configuracion-inicial-del-usuario","title":"1. Configuraci\u00f3n Inicial del Usuario","text":"<p>Con\u00e9ctate al Droplet y crea un usuario no-root:</p> <pre><code># Conectar como root\nssh root@tu_droplet_ip\n\n# Crear usuario no-root\nadduser makuno\n\n# Agregar a grupo sudo\nusermod -aG sudo makuno\n\n# Cambiar a nuevo usuario\nsu - makuno\n</code></pre>"},{"location":"deployment/installation/#2-configuracion-ssh","title":"2. Configuraci\u00f3n SSH","text":"<pre><code># Crear directorio SSH para el nuevo usuario\nmkdir -p ~/.ssh\nchmod 700 ~/.ssh\n\n# Copiar clave p\u00fablica autorizada\nsudo cp /root/.ssh/authorized_keys ~/.ssh/\nsudo chown makuno:makuno ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n\n# Configurar SSH para mayor seguridad\nsudo nano /etc/ssh/sshd_config\n</code></pre> <p>Configuraci\u00f3n SSH recomendada:</p> <pre><code># /etc/ssh/sshd_config\nPasswordAuthentication no\nChallengeResponseAuthentication no\nPermitRootLogin prohibit-password\nPubkeyAuthentication yes\n</code></pre> <pre><code># Reiniciar SSH\nsudo systemctl restart sshd\n</code></pre>"},{"location":"deployment/installation/#3-actualizacion-del-sistema","title":"3. Actualizaci\u00f3n del Sistema","text":"<pre><code># Actualizar repositorios y paquetes\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Instalar paquetes esenciales\nsudo apt install -y curl wget git ufw htop neofetch\n</code></pre>"},{"location":"deployment/installation/#configuracion-de-firewall","title":"\ud83d\udd10 Configuraci\u00f3n de Firewall","text":""},{"location":"deployment/installation/#cloud-firewall-digitalocean","title":"Cloud Firewall (DigitalOcean)","text":"<p>Configura las reglas en el panel de DigitalOcean:</p> Tipo Protocolo Puerto Origen SSH TCP 22 Tu IP o IPs espec\u00edficas HTTP TCP 80 All IPv4, All IPv6 HTTPS TCP 443 All IPv4, All IPv6 <p>Importante</p> <p>NO abras el puerto 8000 en el Cloud Firewall. La API debe ser accesible solo a trav\u00e9s de Caddy.</p>"},{"location":"deployment/installation/#ufw-opcional","title":"ufw (Opcional)","text":"<p>Si quieres una capa adicional de firewall:</p> <pre><code># Habilitar ufw\nsudo ufw enable\n\n# Permitir SSH\nsudo ufw allow 22/tcp\n\n# Permitir HTTP y HTTPS\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\n\n# Verificar estado\nsudo ufw status verbose\n</code></pre>"},{"location":"deployment/installation/#instalacion-de-software-base","title":"\ud83d\udee0\ufe0f Instalaci\u00f3n de Software Base","text":""},{"location":"deployment/installation/#1-docker-engine","title":"1. Docker Engine","text":"<pre><code># Desinstalar versiones anteriores\nsudo apt remove -y docker docker-engine docker.io containerd runc\n\n# Instalar dependencias\nsudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Agregar clave GPG oficial de Docker\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Agregar repositorio\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Instalar Docker\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Agregar usuario al grupo docker\nsudo usermod -aG docker $USER\n\n# Habilitar Docker al arranque\nsudo systemctl enable docker\nsudo systemctl start docker\n</code></pre> <p>Reiniciar Sesi\u00f3n</p> <p>Cierra y abre una nueva sesi\u00f3n SSH para que los cambios del grupo docker tomen efecto.</p>"},{"location":"deployment/installation/#2-fail2ban","title":"2. Fail2ban","text":"<pre><code># Instalar Fail2ban\nsudo apt install -y fail2ban\n\n# Habilitar al arranque\nsudo systemctl enable fail2ban\nsudo systemctl start fail2ban\n\n# Verificar estado\nsudo systemctl status fail2ban\n</code></pre>"},{"location":"deployment/installation/#3-caddy","title":"3. Caddy","text":"<pre><code># Instalar dependencias\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\n\n# Agregar clave GPG de Caddy\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\n\n# Agregar repositorio\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\n\n# Instalar Caddy\nsudo apt update\nsudo apt install -y caddy\n\n# Habilitar al arranque\nsudo systemctl enable caddy\n</code></pre>"},{"location":"deployment/installation/#despliegue-del-proyecto","title":"\ud83d\udce5 Despliegue del Proyecto","text":""},{"location":"deployment/installation/#1-clonacion-del-repositorio","title":"1. Clonaci\u00f3n del Repositorio","text":"<pre><code># Navegar al directorio home\ncd ~\n\n# Clonar el repositorio del proyecto\ngit clone https://github.com/tu-usuario/aca-fail2ban-dashboard.git\ncd aca-fail2ban-dashboard\n\n# Verificar estructura del proyecto\nls -la\n</code></pre>"},{"location":"deployment/installation/#2-configuracion-de-variables-de-entorno","title":"2. Configuraci\u00f3n de Variables de Entorno","text":"<pre><code># Copiar archivo de ejemplo\ncp .env.example .env\n\n# Editar variables de entorno\nnano .env\n</code></pre> <p>Configuraci\u00f3n <code>.env</code> requerida:</p> <pre><code># .env\n# =================================\n# Configuraci\u00f3n de la API\n# =================================\nAPI_HOST=0.0.0.0\nAPI_PORT=8000\nAPI_RELOAD=false\n\n# =================================\n# Configuraci\u00f3n de Loki\n# =================================\nLOKI_URL=http://loki:3100\nLOKI_QUERY_URL=http://loki:3100/loki/api/v1/query_range\nLOKI_WS_URL=ws://loki:3100/loki/api/v1/tail\n\n# =================================\n# Configuraci\u00f3n de Fail2ban\n# =================================\nFAIL2BAN_LOG_PATH=/var/log/fail2ban.log\nFAIL2BAN_SOCKET_PATH=/var/run/fail2ban/fail2ban.sock\n\n# =================================\n# Configuraci\u00f3n de Dominio\n# =================================\nDOMAIN_NAME=alertasfail2ban.xmakuno.com\nAPI_BASE_URL=https://alertasfail2ban.xmakuno.com\n\n# =================================\n# Configuraci\u00f3n de Logs\n# =================================\nLOG_LEVEL=INFO\nLOG_FORMAT=json\n\n# =================================\n# Configuraci\u00f3n de Promtail\n# =================================\nPROMTAIL_PORT=9080\nPROMTAIL_LOG_LEVEL=info\n\n# =================================\n# Configuraci\u00f3n de Loki Storage\n# =================================\nLOKI_RETENTION_PERIOD=744h  # 31 d\u00edas\nLOKI_MAX_CHUNK_AGE=1h\n</code></pre>"},{"location":"deployment/installation/#3-configuracion-de-fail2ban","title":"3. Configuraci\u00f3n de Fail2ban","text":"<pre><code># Crear configuraci\u00f3n local\nsudo nano /etc/fail2ban/jail.local\n</code></pre> <p>Configuraci\u00f3n recomendada:</p> <pre><code># /etc/fail2ban/jail.local\n[DEFAULT]\n# IPs que nunca ser\u00e1n baneadas (CAMBIAR POR TU IP)\nignoreip = 127.0.0.1/8 ::1 TU_IP_PUBLICA_AQUI\n\n# Tiempo de banneo por defecto (1 hora)\nbantime = 3600\n\n# Ventana de tiempo para contar intentos (10 minutos)\nfindtime = 600\n\n# N\u00famero m\u00e1ximo de intentos fallidos\nmaxretry = 5\n\n# Configuraci\u00f3n de email (opcional)\ndestemail = tu_email@example.com\nsendername = Fail2ban-Alert\nmta = sendmail\n\n[sshd]\nenabled = true\nport = ssh\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 86400  # 24 horas para SSH\nfindtime = 600   # 10 minutos\n\n[caddy]\nenabled = true\nport = http,https\nfilter = caddy\nlogpath = /var/log/caddy/access.log\nmaxretry = 10\nbantime = 3600\nfindtime = 600\n</code></pre> <pre><code># Reiniciar Fail2ban para aplicar configuraci\u00f3n\nsudo systemctl restart fail2ban\n\n# Verificar jails activos\nsudo fail2ban-client status\n</code></pre>"},{"location":"deployment/installation/#4-construccion-y-despliegue-de-contenedores","title":"4. Construcci\u00f3n y Despliegue de Contenedores","text":"<pre><code># Verificar que Docker funciona sin sudo\ndocker --version\ndocker ps\n\n# Construir e iniciar servicios\ndocker compose up -d --build\n\n# Verificar que los contenedores est\u00e9n corriendo\ndocker compose ps\n</code></pre> <p>Salida esperada:</p> <pre><code>NAME                IMAGE                      STATUS\nfail2ban-api        aca-fail2ban-dashboard-api Up 2 minutes\nfail2ban-loki       grafana/loki:latest        Up 2 minutes  \nfail2ban-promtail   grafana/promtail:latest    Up 2 minutes\n</code></pre>"},{"location":"deployment/installation/#5-configuracion-de-caddy","title":"5. Configuraci\u00f3n de Caddy","text":"<pre><code># Crear directorio de configuraci\u00f3n\nsudo mkdir -p /etc/caddy\n\n# Crear Caddyfile\nsudo nano /etc/caddy/Caddyfile\n</code></pre> <p>Configuraci\u00f3n de Caddy:</p> <pre><code># /etc/caddy/Caddyfile\n{\n    # Configuraci\u00f3n global\n    email tu_email@example.com\n}\n\nalertasfail2ban.xmakuno.com {\n    # Proxy inverso a la API FastAPI\n    reverse_proxy localhost:8000\n\n    # Headers de seguridad\n    header {\n        # HSTS - Forzar HTTPS\n        Strict-Transport-Security max-age=31536000; includeSubDomains; preload\n\n        # Prevenir clickjacking\n        X-Frame-Options DENY\n\n        # Prevenir MIME type sniffing\n        X-Content-Type-Options nosniff\n\n        # XSS Protection\n        X-XSS-Protection \"1; mode=block\"\n\n        # Referrer Policy\n        Referrer-Policy strict-origin-when-cross-origin\n\n        # Content Security Policy\n        Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'\"\n    }\n\n    # Logs de acceso\n    log {\n        output file /var/log/caddy/access.log {\n            roll_size 100mb\n            roll_keep 5\n            roll_keep_for 720h\n        }\n        format json\n    }\n\n    # Manejo de errores personalizado\n    handle_errors {\n        @5xx expression {http.error.status_code} &gt;= 500\n        respond @5xx \"Error interno del servidor - Por favor intenta m\u00e1s tarde\" 500\n\n        @4xx expression {http.error.status_code} &gt;= 400\n        respond @4xx \"Recurso no encontrado\" 404\n    }\n\n    # Rate limiting (opcional)\n    rate_limit {\n        zone dynamic {\n            key {remote_host}\n            events 30\n            window 1m\n        }\n    }\n}\n\n# Redirecci\u00f3n de www (opcional)\nwww.alertasfail2ban.xmakuno.com {\n    redir https://alertasfail2ban.xmakuno.com{uri} permanent\n}\n</code></pre> <pre><code># Crear directorio de logs\nsudo mkdir -p /var/log/caddy\nsudo chown caddy:caddy /var/log/caddy\n\n# Verificar configuraci\u00f3n\nsudo caddy validate --config /etc/caddy/Caddyfile\n\n# Reiniciar Caddy\nsudo systemctl restart caddy\n\n# Verificar estado\nsudo systemctl status caddy\n</code></pre>"},{"location":"deployment/installation/#verificacion-de-la-instalacion","title":"\u2705 Verificaci\u00f3n de la Instalaci\u00f3n","text":""},{"location":"deployment/installation/#1-verificar-servicios-base","title":"1. Verificar Servicios Base","text":"<pre><code># Estado de todos los servicios\nsudo systemctl status fail2ban caddy docker\n\n# Verificar logs\nsudo journalctl -u fail2ban -f --lines=20\nsudo journalctl -u caddy -f --lines=20\n</code></pre>"},{"location":"deployment/installation/#2-verificar-contenedores-docker","title":"2. Verificar Contenedores Docker","text":"<pre><code># Estado de contenedores\ndocker compose ps\n\n# Logs de contenedores\ndocker compose logs -f --tail=20\n\n# Logs espec\u00edficos por servicio\ndocker compose logs api -f\ndocker compose logs loki -f\ndocker compose logs promtail -f\n</code></pre>"},{"location":"deployment/installation/#3-verificar-conectividad","title":"3. Verificar Conectividad","text":"<pre><code># Verificar API local\ncurl http://localhost:8000/health\n\n# Verificar Loki\ncurl http://localhost:3100/ready\n\n# Verificar SSL y dominio\ncurl -I https://alertasfail2ban.xmakuno.com\n</code></pre>"},{"location":"deployment/installation/#4-verificar-fail2ban","title":"4. Verificar Fail2ban","text":"<pre><code># Estado general\nsudo fail2ban-client status\n\n# Estado del jail SSH\nsudo fail2ban-client status sshd\n\n# Verificar logs\nsudo tail -f /var/log/fail2ban.log\n</code></pre>"},{"location":"deployment/installation/#pruebas-post-instalacion","title":"\ud83e\uddea Pruebas Post-Instalaci\u00f3n","text":""},{"location":"deployment/installation/#1-prueba-de-la-api","title":"1. Prueba de la API","text":"Endpoint de HealthEndpoint de Jails <pre><code>curl https://alertasfail2ban.xmakuno.com/health\n</code></pre> <p>Respuesta esperada: <pre><code>{\n    \"status\": \"healthy\",\n    \"timestamp\": \"2025-01-21T10:30:00Z\",\n    \"services\": {\n        \"loki\": \"connected\",\n        \"fail2ban\": \"connected\"\n    }\n}\n</code></pre></p> <pre><code>curl https://alertasfail2ban.xmakuno.com/api/jails\n</code></pre> <p>Respuesta esperada: <pre><code>[\n    {\n        \"name\": \"sshd\",\n        \"status\": \"active\",\n        \"banned_ips\": [],\n        \"total_banned\": 0,\n        \"total_failed\": 0\n    }\n]\n</code></pre></p>"},{"location":"deployment/installation/#2-prueba-de-dashboard-web","title":"2. Prueba de Dashboard Web","text":"<p>Abre en tu navegador: <pre><code>https://alertasfail2ban.xmakuno.com\n</code></pre></p> <p>Deber\u00edas ver: - \u2705 Dashboard cargando correctamente - \u2705 Certificado SSL v\u00e1lido - \u2705 Datos de jails mostrados - \u2705 Logs en tiempo real</p>"},{"location":"deployment/installation/#3-prueba-de-logs-en-tiempo-real","title":"3. Prueba de Logs en Tiempo Real","text":"<pre><code># Generar actividad en logs\nsudo fail2ban-client status\n\n# Verificar que Promtail est\u00e9 enviando a Loki\ncurl \"http://localhost:3100/loki/api/v1/query?query={component=\\\"fail2ban\\\"}&amp;limit=10\"\n</code></pre>"},{"location":"deployment/installation/#configuracion-opcional","title":"\ud83d\udd27 Configuraci\u00f3n Opcional","text":""},{"location":"deployment/installation/#1-configurar-logrotate-para-loki","title":"1. Configurar Logrotate para Loki","text":"<pre><code>sudo nano /etc/logrotate.d/loki\n</code></pre> <pre><code># /etc/logrotate.d/loki\n/var/log/caddy/*.log {\n    daily\n    missingok\n    rotate 14\n    compress\n    notifempty\n    create 644 caddy caddy\n    postrotate\n        systemctl reload caddy\n    endscript\n}\n</code></pre>"},{"location":"deployment/installation/#2-configurar-backup-automatico","title":"2. Configurar Backup Autom\u00e1tico","text":"<pre><code># Crear script de backup\nnano ~/backup-loki.sh\n</code></pre> <pre><code>#!/bin/bash\n# backup-loki.sh\n\nBACKUP_DIR=\"/home/makuno/backups\"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p $BACKUP_DIR\n\n# Backup de volumen Loki\ndocker run --rm -v aca-fail2ban-dashboard_loki_data:/data -v $BACKUP_DIR:/backup ubuntu tar czf /backup/loki_data_$DATE.tar.gz -C /data .\n\n# Backup de configuraciones\ntar czf $BACKUP_DIR/configs_$DATE.tar.gz /etc/caddy /etc/fail2ban/jail.local .env\n\n# Limpiar backups antiguos (mantener 7 d\u00edas)\nfind $BACKUP_DIR -name \"*.tar.gz\" -mtime +7 -delete\n\necho \"Backup completado: $DATE\"\n</code></pre> <pre><code># Hacer ejecutable\nchmod +x ~/backup-loki.sh\n\n# Configurar cron para backup diario\ncrontab -e\n</code></pre> <pre><code># Backup diario a las 2 AM\n0 2 * * * /home/makuno/backup-loki.sh &gt;&gt; /home/makuno/backup.log 2&gt;&amp;1\n</code></pre>"},{"location":"deployment/installation/#solucion-de-problemas-comunes","title":"\ud83d\udea8 Soluci\u00f3n de Problemas Comunes","text":""},{"location":"deployment/installation/#problema-contenedores-no-inician","title":"Problema: Contenedores no inician","text":"<pre><code># Verificar logs detallados\ndocker compose logs --details\n\n# Verificar permisos de archivos\nls -la /var/log/fail2ban.log\nls -la /var/run/fail2ban/fail2ban.sock\n\n# Reiniciar servicios\ndocker compose down\nsudo systemctl restart fail2ban\ndocker compose up -d\n</code></pre>"},{"location":"deployment/installation/#problema-caddy-no-obtiene-certificado-ssl","title":"Problema: Caddy no obtiene certificado SSL","text":"<pre><code># Verificar logs de Caddy\nsudo journalctl -u caddy -f\n\n# Verificar que el dominio apunte al servidor\ndig alertasfail2ban.xmakuno.com\n\n# Verificar que el puerto 80 est\u00e9 abierto\nsudo netstat -tlnp | grep :80\n\n# Forzar renovaci\u00f3n de certificado\nsudo caddy reload --config /etc/caddy/Caddyfile\n</code></pre>"},{"location":"deployment/installation/#problema-api-no-puede-conectarse-a-fail2ban","title":"Problema: API no puede conectarse a Fail2ban","text":"<pre><code># Verificar socket de Fail2ban\nls -la /var/run/fail2ban/fail2ban.sock\n\n# Verificar permisos\nsudo chmod 666 /var/run/fail2ban/fail2ban.sock\n\n# Reiniciar contenedor API\ndocker compose restart api\n</code></pre> <p>\u00a1Instalaci\u00f3n Completa!</p> <p>Si todos los pasos se completaron exitosamente, tu sistema Fail2ban Dashboard ya est\u00e1 funcionando y listo para usar.</p> <p>Pr\u00f3ximos Pasos</p> <ul> <li>Revisa la gu\u00eda de mantenimiento para tareas rutinarias</li> <li>Consulta troubleshooting para resolver problemas</li> <li>Explora la documentaci\u00f3n de la API para integraciones</li> </ul>"},{"location":"deployment/maintenance/","title":"\ud83d\udd27 Mantenimiento del Sistema","text":""},{"location":"deployment/maintenance/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta gu\u00eda cubre todas las tareas de mantenimiento necesarias para mantener el sistema Fail2ban Dashboard funcionando de manera \u00f3ptima y segura.</p>"},{"location":"deployment/maintenance/#tareas-de-mantenimiento-rutinario","title":"\ud83d\udcc5 Tareas de Mantenimiento Rutinario","text":""},{"location":"deployment/maintenance/#diarias","title":"Diarias","text":"<p>Tareas Autom\u00e1ticas Diarias</p> <ul> <li>\u2705 Backup de datos (configurado via cron)</li> <li>\u2705 Rotaci\u00f3n de logs (configurado via logrotate)</li> <li>\u2705 Renovaci\u00f3n de certificados SSL (autom\u00e1tico con Caddy)</li> </ul>"},{"location":"deployment/maintenance/#semanales","title":"Semanales","text":"<pre><code># Verificar estado general del sistema\n~/scripts/weekly-health-check.sh\n</code></pre> <p>Crea el script de verificaci\u00f3n semanal:</p> <pre><code>#!/bin/bash\n# weekly-health-check.sh\n\necho \"=== HEALTH CHECK SEMANAL - $(date) ===\"\n\n# 1. Estado de servicios cr\u00edticos\necho \"\ud83d\udcca Estado de servicios:\"\nsudo systemctl status fail2ban --no-pager -l\nsudo systemctl status caddy --no-pager -l\nsudo systemctl status docker --no-pager -l\n\n# 2. Estado de contenedores\necho \"\ud83d\udc33 Estado de contenedores:\"\ndocker compose ps\n\n# 3. Uso de disco\necho \"\ud83d\udcbe Uso de disco:\"\ndf -h /\n\n# 4. Uso de memoria\necho \"\ud83e\udde0 Uso de memoria:\"\nfree -h\n\n# 5. IPs baneadas actualmente\necho \"\ud83d\udee1\ufe0f IPs baneadas:\"\nsudo fail2ban-client status sshd\n\n# 6. Logs recientes de errores\necho \"\ud83d\udcdd Errores recientes:\"\nsudo journalctl --since=\"24 hours ago\" --priority=err --no-pager\n\n# 7. Tama\u00f1o de vol\u00famenes Docker\necho \"\ud83d\udce6 Tama\u00f1o de vol\u00famenes:\"\ndocker system df\n\necho \"=== FIN HEALTH CHECK ===\"\n</code></pre>"},{"location":"deployment/maintenance/#mensuales","title":"Mensuales","text":"Actualizaciones de SistemaLimpieza de DockerRotaci\u00f3n de Backups <pre><code># Actualizar sistema operativo\nsudo apt update &amp;&amp; sudo apt list --upgradable\nsudo apt upgrade -y\n\n# Reiniciar si es necesario\nif [ -f /var/run/reboot-required ]; then\n    echo \"Reinicio requerido\"\n    sudo reboot\nfi\n</code></pre> <pre><code># Limpiar im\u00e1genes no utilizadas\ndocker image prune -f\n\n# Limpiar contenedores detenidos\ndocker container prune -f\n\n# Limpiar vol\u00famenes no utilizados\ndocker volume prune -f\n\n# Limpiar redes no utilizadas\ndocker network prune -f\n\n# Limpieza completa (cuidado!)\ndocker system prune -af --volumes\n</code></pre> <pre><code># Limpiar backups antiguos (mantener 30 d\u00edas)\nfind ~/backups -name \"*.tar.gz\" -mtime +30 -delete\n\n# Verificar integridad de backups recientes\nfor backup in $(find ~/backups -name \"*.tar.gz\" -mtime -7); do\n    if tar -tzf \"$backup\" &gt;/dev/null 2&gt;&amp;1; then\n        echo \"\u2705 $backup - OK\"\n    else\n        echo \"\u274c $backup - CORRUPTO\"\n    fi\ndone\n</code></pre>"},{"location":"deployment/maintenance/#monitoreo-y-metricas","title":"\ud83d\udcca Monitoreo y M\u00e9tricas","text":""},{"location":"deployment/maintenance/#dashboard-de-monitoreo","title":"Dashboard de Monitoreo","text":"<p>Crea un script para generar m\u00e9tricas:</p> <pre><code>#!/bin/bash\n# metrics-report.sh\n\necho \"=== REPORTE DE M\u00c9TRICAS - $(date) ===\"\n\n# M\u00e9tricas de Fail2ban\necho \"\ud83d\udee1\ufe0f Estad\u00edsticas de Fail2ban:\"\nfor jail in $(sudo fail2ban-client status | grep \"Jail list:\" | cut -d: -f2 | tr ',' '\\n' | xargs); do\n    echo \"  Jail: $jail\"\n    sudo fail2ban-client status $jail | grep -E \"(Currently banned|Total banned|Currently failed|Total failed)\"\ndone\n\n# M\u00e9tricas de la API\necho \"\u2699\ufe0f Estad\u00edsticas de la API:\"\ncurl -s http://localhost:8000/metrics 2&gt;/dev/null || echo \"API no disponible\"\n\n# M\u00e9tricas de Loki\necho \"\ud83d\uddc4\ufe0f Estad\u00edsticas de Loki:\"\ncurl -s http://localhost:3100/metrics | grep -E \"loki_ingester_streams|loki_distributor_lines_received_total\" | head -5\n\n# Top IPs baneadas (\u00faltimos 7 d\u00edas)\necho \"\ud83d\udd34 Top IPs baneadas (\u00faltimos 7 d\u00edas):\"\nsudo grep \"Ban \" /var/log/fail2ban.log | grep \"$(date -d '7 days ago' '+%Y-%m-%d')\" | awk '{print $NF}' | sort | uniq -c | sort -nr | head -10\n\necho \"=== FIN REPORTE ===\"\n</code></pre>"},{"location":"deployment/maintenance/#alertas-automaticas","title":"Alertas Autom\u00e1ticas","text":"<p>Configura alertas por email para eventos cr\u00edticos:</p> <pre><code># /etc/fail2ban/action.d/sendmail-alert.conf\n[Definition]\nactionstart = echo \"Fail2ban iniciado en $(hostname)\" | mail -s \"Fail2ban: Servicio iniciado\" admin@tudominio.com\nactionstop = echo \"Fail2ban detenido en $(hostname)\" | mail -s \"Fail2ban: Servicio detenido\" admin@tudominio.com\nactioncheck = \nactionban = echo \"IP &lt;ip&gt; baneada en jail &lt;name&gt; en $(hostname) por &lt;failures&gt; intentos fallidos\" | mail -s \"Fail2ban: Nueva IP baneada\" admin@tudominio.com\nactionunban = echo \"IP &lt;ip&gt; desbaneada en jail &lt;name&gt; en $(hostname)\" | mail -s \"Fail2ban: IP desbaneada\" admin@tudominio.com\n\n[Init]\nname = default\n</code></pre>"},{"location":"deployment/maintenance/#actualizaciones-del-sistema","title":"\ud83d\udd04 Actualizaciones del Sistema","text":""},{"location":"deployment/maintenance/#actualizacion-de-contenedores","title":"Actualizaci\u00f3n de Contenedores","text":"Actualizaci\u00f3n PlanificadaRollback en caso de problemas <pre><code># 1. Crear backup antes de actualizar\n~/backup-loki.sh\n\n# 2. Descargar nuevas im\u00e1genes\ndocker compose pull\n\n# 3. Recrear contenedores con nuevas im\u00e1genes\ndocker compose up -d --force-recreate\n\n# 4. Verificar que todo funciona\ndocker compose ps\ncurl -I https://alertasfail2ban.xmakuno.com/health\n</code></pre> <pre><code># Volver a im\u00e1genes anteriores\ndocker compose down\n\n# Restaurar backup si es necesario\ncd ~/backups\nlatest_backup=$(ls -t loki_data_*.tar.gz | head -1)\ndocker run --rm -v aca-fail2ban-dashboard_loki_data:/data -v $(pwd):/backup ubuntu tar xzf /backup/$latest_backup -C /data\n\n# Iniciar servicios\ndocker compose up -d\n</code></pre>"},{"location":"deployment/maintenance/#actualizacion-de-la-api","title":"Actualizaci\u00f3n de la API","text":"<pre><code># Actualizar c\u00f3digo desde Git\ncd ~/aca-fail2ban-dashboard\ngit fetch origin\ngit checkout main\ngit pull origin main\n\n# Rebuild y restart de la API\ndocker compose build api\ndocker compose up -d api\n\n# Verificar logs\ndocker compose logs api -f\n</code></pre>"},{"location":"deployment/maintenance/#actualizacion-de-caddy","title":"Actualizaci\u00f3n de Caddy","text":"<pre><code># Actualizar Caddy\nsudo apt update\nsudo apt upgrade caddy\n\n# Verificar nueva versi\u00f3n\ncaddy version\n\n# Restart del servicio\nsudo systemctl restart caddy\nsudo systemctl status caddy\n</code></pre>"},{"location":"deployment/maintenance/#gestion-de-datos-y-backups","title":"\ud83d\uddc4\ufe0f Gesti\u00f3n de Datos y Backups","text":""},{"location":"deployment/maintenance/#estrategia-de-backup","title":"Estrategia de Backup","text":"<p>Tipos de Backup</p> Backup CompletoBackup IncrementalBackup de Configuraci\u00f3n <ul> <li>Frecuencia: Semanal</li> <li>Contenido: Todos los datos de Loki + configuraciones</li> <li>Retenci\u00f3n: 4 backups (1 mes)</li> </ul> <ul> <li>Frecuencia: Diario</li> <li>Contenido: Solo cambios recientes</li> <li>Retenci\u00f3n: 7 backups (1 semana)</li> </ul> <ul> <li>Frecuencia: Antes de cada cambio</li> <li>Contenido: Archivos de configuraci\u00f3n cr\u00edticos</li> <li>Retenci\u00f3n: 30 backups</li> </ul>"},{"location":"deployment/maintenance/#scripts-de-backup-avanzado","title":"Scripts de Backup Avanzado","text":"<pre><code>#!/bin/bash\n# advanced-backup.sh\n\nBACKUP_DIR=\"/home/makuno/backups\"\nDATE=$(date +%Y%m%d_%H%M%S)\nRETENTION_DAYS=7\n\n# Funci\u00f3n para logging\nlog() {\n    echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a /var/log/backup.log\n}\n\n# Crear directorio de backup\nmkdir -p $BACKUP_DIR\n\nlog \"Iniciando backup completo...\"\n\n# 1. Backup de volumen Loki\nlog \"Backing up Loki data...\"\ndocker run --rm \\\n    -v aca-fail2ban-dashboard_loki_data:/data \\\n    -v $BACKUP_DIR:/backup \\\n    ubuntu tar czf /backup/loki_data_$DATE.tar.gz -C /data .\n\nif [ $? -eq 0 ]; then\n    log \"\u2705 Loki data backup completado\"\nelse\n    log \"\u274c Error en Loki data backup\"\n    exit 1\nfi\n\n# 2. Backup de configuraciones\nlog \"Backing up configurations...\"\ntar czf $BACKUP_DIR/configs_$DATE.tar.gz \\\n    /etc/caddy/Caddyfile \\\n    /etc/fail2ban/jail.local \\\n    ~/aca-fail2ban-dashboard/.env \\\n    ~/aca-fail2ban-dashboard/docker-compose.yaml\n\n# 3. Backup de base de datos de fail2ban\nlog \"Backing up fail2ban database...\"\nif [ -f /var/lib/fail2ban/fail2ban.sqlite3 ]; then\n    cp /var/lib/fail2ban/fail2ban.sqlite3 $BACKUP_DIR/fail2ban_db_$DATE.sqlite3\nfi\n\n# 4. Verificar integridad de backups\nlog \"Verificando integridad de backups...\"\nfor backup in $BACKUP_DIR/*_$DATE.tar.gz; do\n    if tar -tzf \"$backup\" &gt;/dev/null 2&gt;&amp;1; then\n        log \"\u2705 $backup - Integridad OK\"\n    else\n        log \"\u274c $backup - Integridad FALLIDA\"\n    fi\ndone\n\n# 5. Limpiar backups antiguos\nlog \"Limpiando backups antiguos...\"\nfind $BACKUP_DIR -name \"*.tar.gz\" -mtime +$RETENTION_DAYS -delete\nfind $BACKUP_DIR -name \"*.sqlite3\" -mtime +$RETENTION_DAYS -delete\n\n# 6. Enviar resumen por email (opcional)\nif command -v mail &gt;/dev/null 2&gt;&amp;1; then\n    backup_size=$(du -sh $BACKUP_DIR | cut -f1)\n    echo \"Backup completado: $DATE\n    Tama\u00f1o total: $backup_size\n    Ubicaci\u00f3n: $BACKUP_DIR\" | mail -s \"Backup Report - $DATE\" admin@tudominio.com\nfi\n\nlog \"Backup completado exitosamente\"\n</code></pre>"},{"location":"deployment/maintenance/#restauracion-desde-backup","title":"Restauraci\u00f3n desde Backup","text":"<pre><code>#!/bin/bash\n# restore-backup.sh\n\nBACKUP_DIR=\"/home/makuno/backups\"\nRESTORE_DATE=$1\n\nif [ -z \"$RESTORE_DATE\" ]; then\n    echo \"Uso: $0 YYYYMMDD_HHMMSS\"\n    echo \"Backups disponibles:\"\n    ls -la $BACKUP_DIR/*_*.tar.gz | awk '{print $9}' | sort\n    exit 1\nfi\n\necho \"\u26a0\ufe0f  ADVERTENCIA: Esto restaurar\u00e1 datos desde el backup $RESTORE_DATE\"\necho \"Todos los datos actuales se perder\u00e1n.\"\nread -p \"\u00bfContinuar? (yes/no): \" confirm\n\nif [ \"$confirm\" != \"yes\" ]; then\n    echo \"Operaci\u00f3n cancelada\"\n    exit 1\nfi\n\n# 1. Detener servicios\necho \"Deteniendo servicios...\"\ndocker compose down\nsudo systemctl stop caddy\n\n# 2. Restaurar datos de Loki\necho \"Restaurando datos de Loki...\"\ndocker run --rm \\\n    -v aca-fail2ban-dashboard_loki_data:/data \\\n    -v $BACKUP_DIR:/backup \\\n    ubuntu sh -c \"rm -rf /data/* &amp;&amp; tar xzf /backup/loki_data_$RESTORE_DATE.tar.gz -C /data\"\n\n# 3. Restaurar configuraciones\necho \"Restaurando configuraciones...\"\ntar xzf $BACKUP_DIR/configs_$RESTORE_DATE.tar.gz -C /\n\n# 4. Restaurar base de datos de fail2ban\nif [ -f $BACKUP_DIR/fail2ban_db_$RESTORE_DATE.sqlite3 ]; then\n    echo \"Restaurando base de datos de fail2ban...\"\n    sudo cp $BACKUP_DIR/fail2ban_db_$RESTORE_DATE.sqlite3 /var/lib/fail2ban/fail2ban.sqlite3\n    sudo chown fail2ban:fail2ban /var/lib/fail2ban/fail2ban.sqlite3\nfi\n\n# 5. Reiniciar servicios\necho \"Iniciando servicios...\"\nsudo systemctl start caddy\ndocker compose up -d\n\n# 6. Verificar que todo funciona\nsleep 10\necho \"Verificando servicios...\"\ndocker compose ps\ncurl -I https://alertasfail2ban.xmakuno.com/health\n\necho \"\u2705 Restauraci\u00f3n completada\"\n</code></pre>"},{"location":"deployment/maintenance/#mantenimiento-de-seguridad","title":"\ud83d\udd10 Mantenimiento de Seguridad","text":""},{"location":"deployment/maintenance/#auditoria-de-seguridad-mensual","title":"Auditor\u00eda de Seguridad Mensual","text":"<pre><code>#!/bin/bash\n# security-audit.sh\n\necho \"=== AUDITOR\u00cdA DE SEGURIDAD - $(date) ===\"\n\n# 1. Verificar actualizaciones de seguridad\necho \"\ud83d\udd0d Verificando actualizaciones de seguridad...\"\nsudo apt list --upgradable | grep -i security\n\n# 2. Verificar configuraci\u00f3n SSH\necho \"\ud83d\udd10 Configuraci\u00f3n SSH:\"\nsudo sshd -T | grep -E \"(PasswordAuthentication|PubkeyAuthentication|PermitRootLogin)\"\n\n# 3. Verificar firewall\necho \"\ud83d\udd25 Estado del firewall:\"\nsudo ufw status verbose\n\n# 4. Verificar certificados SSL\necho \"\ud83d\udd12 Certificados SSL:\"\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates\n\n# 5. Verificar intentos de acceso fallidos\necho \"\ud83d\udea8 Intentos de acceso fallidos (\u00faltimas 24h):\"\nsudo grep \"Failed password\" /var/log/auth.log | tail -10\n\n# 6. Verificar jails activos\necho \"\ud83d\udee1\ufe0f Jails de Fail2ban:\"\nsudo fail2ban-client status\n\n# 7. Top IPs atacantes\necho \"\ud83d\udd34 Top IPs atacantes (\u00faltima semana):\"\nsudo grep \"Ban \" /var/log/fail2ban.log | awk '{print $NF}' | sort | uniq -c | sort -nr | head -10\n\necho \"=== FIN AUDITOR\u00cdA ===\"\n</code></pre>"},{"location":"deployment/maintenance/#rotacion-de-claves-ssh","title":"Rotaci\u00f3n de Claves SSH","text":"<pre><code># Generar nuevas claves SSH\nssh-keygen -t ed25519 -C \"nueva-clave-$(date +%Y%m%d)\" -f ~/.ssh/nueva_clave\n\n# Agregar nueva clave a authorized_keys\ncat ~/.ssh/nueva_clave.pub &gt;&gt; ~/.ssh/authorized_keys\n\n# Probar nueva clave desde otra sesi\u00f3n antes de eliminar la antigua\n# ssh -i ~/.ssh/nueva_clave makuno@tu_servidor\n\n# Eliminar clave antigua despu\u00e9s de confirmar que la nueva funciona\n# sed -i '/clave_antigua/d' ~/.ssh/authorized_keys\n</code></pre>"},{"location":"deployment/maintenance/#optimizacion-de-performance","title":"\ud83d\udcc8 Optimizaci\u00f3n de Performance","text":""},{"location":"deployment/maintenance/#monitoreo-de-recursos","title":"Monitoreo de Recursos","text":"<pre><code>#!/bin/bash\n# performance-monitor.sh\n\necho \"=== MONITOREO DE PERFORMANCE - $(date) ===\"\n\n# CPU\necho \"\ud83d\udcbb Uso de CPU:\"\ntop -bn1 | grep \"Cpu(s)\" | awk '{print $2}' | cut -d'%' -f1\n\n# Memoria\necho \"\ud83e\udde0 Uso de memoria:\"\nfree -h\n\n# Disco\necho \"\ud83d\udcbe Uso de disco:\"\ndf -h / | tail -1\n\n# Docker stats\necho \"\ud83d\udc33 Recursos de contenedores:\"\ndocker stats --no-stream --format \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.MemPerc}}\"\n\n# Conexiones de red\necho \"\ud83c\udf10 Conexiones activas:\"\nss -tuln | grep -E \":(80|443|8000|3100|22)\"\n\n# Procesos top\necho \"\ud83d\udd1d Top procesos por CPU:\"\nps aux --sort=-%cpu | head -6\n\necho \"=== FIN MONITOREO ===\"\n</code></pre>"},{"location":"deployment/maintenance/#optimizacion-de-loki","title":"Optimizaci\u00f3n de Loki","text":"<pre><code># Configuraci\u00f3n optimizada para Loki\n# loki/config.yaml\nlimits_config:\n  # Optimizaci\u00f3n de ingesta\n  ingestion_rate_mb: 4\n  ingestion_burst_size_mb: 6\n  max_streams_per_user: 10000\n  max_line_size: 256000\n\n  # Optimizaci\u00f3n de queries\n  max_query_parallelism: 32\n  max_query_time: \"5m\"\n  max_query_length: \"12000h\"\n\n  # L\u00edmites de retenci\u00f3n\n  retention_period: \"744h\"  # 31 d\u00edas\n</code></pre> <p>Mejores Pr\u00e1cticas de Mantenimiento</p> <ol> <li>Automatiza todo lo posible con scripts y cron jobs</li> <li>Monitorea proactivamente en lugar de reactivamente</li> <li>Mant\u00e9n backups regulares y prueba la restauraci\u00f3n</li> <li>Documenta todos los cambios y procedimientos</li> <li>Mant\u00e9n el sistema actualizado pero prueba en staging primero</li> </ol> <p>Pr\u00f3ximo Paso</p> <p>Revisa la gu\u00eda de troubleshooting para resolver problemas comunes que pueden surgir durante el mantenimiento.</p>"},{"location":"deployment/troubleshooting/","title":"\ud83d\udd27 Troubleshooting y Resoluci\u00f3n de Problemas","text":""},{"location":"deployment/troubleshooting/#introduccion","title":"Introducci\u00f3n","text":"<p>Esta gu\u00eda cubre los problemas m\u00e1s comunes que pueden surgir en el sistema Fail2ban Dashboard y sus soluciones paso a paso.</p>"},{"location":"deployment/troubleshooting/#problemas-criticos-del-sistema","title":"\ud83d\udea8 Problemas Cr\u00edticos del Sistema","text":""},{"location":"deployment/troubleshooting/#sistema-no-responde","title":"Sistema No Responde","text":"<p>S\u00edntomas</p> <ul> <li>El sitio web no carga</li> <li>Error 502/503 en el navegador</li> <li>Timeout en conexiones</li> </ul> Diagn\u00f3stico R\u00e1pidoSoluci\u00f3n <pre><code># Verificar estado de servicios cr\u00edticos\nsudo systemctl status caddy fail2ban docker\n\n# Verificar contenedores\ndocker compose ps\n\n# Verificar conectividad b\u00e1sica\ncurl -I http://localhost:8000\ncurl -I http://localhost:3100/ready\n</code></pre> <pre><code># Reinicio ordenado de servicios\nsudo systemctl restart caddy\ndocker compose restart\n\n# Si el problema persiste, reinicio completo\ndocker compose down\nsudo systemctl restart docker\ndocker compose up -d\n</code></pre>"},{"location":"deployment/troubleshooting/#certificado-ssl-expirado-o-invalido","title":"Certificado SSL Expirado o Inv\u00e1lido","text":"<p>S\u00edntomas</p> <ul> <li>Advertencia de certificado en navegador</li> <li>Error \"NET::ERR_CERT_DATE_INVALID\"</li> <li>Fallo en HTTPS</li> </ul> Verificar CertificadoSoluci\u00f3n <pre><code># Verificar estado del certificado\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates\n\n# Verificar logs de Caddy\nsudo journalctl -u caddy -f --since \"1 hour ago\"\n\n# Verificar configuraci\u00f3n de Caddy\nsudo caddy validate --config /etc/caddy/Caddyfile\n</code></pre> <pre><code># Forzar renovaci\u00f3n de certificado\nsudo systemctl stop caddy\nsudo rm -rf /var/lib/caddy/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/\nsudo systemctl start caddy\n\n# Verificar logs durante renovaci\u00f3n\nsudo journalctl -u caddy -f\n</code></pre>"},{"location":"deployment/troubleshooting/#problemas-de-docker-y-contenedores","title":"\ud83d\udc33 Problemas de Docker y Contenedores","text":""},{"location":"deployment/troubleshooting/#contenedores-no-inician","title":"Contenedores No Inician","text":"<p>S\u00edntomas</p> <ul> <li><code>docker compose ps</code> muestra contenedores como \"Exited\"</li> <li>Errores en <code>docker compose logs</code></li> </ul> Diagn\u00f3sticoSoluciones Comunes <pre><code># Verificar logs detallados\ndocker compose logs --details --timestamps\n\n# Verificar recursos del sistema\ndf -h\nfree -h\n\n# Verificar permisos de archivos montados\nls -la /var/log/fail2ban.log\nls -la /var/run/fail2ban/fail2ban.sock\n</code></pre> <p>Problema de Permisos: <pre><code># Ajustar permisos de archivos cr\u00edticos\nsudo chmod 644 /var/log/fail2ban.log\nsudo chmod 666 /var/run/fail2ban/fail2ban.sock\n\n# Verificar que fail2ban est\u00e9 corriendo\nsudo systemctl restart fail2ban\n</code></pre></p> <p>Falta de Espacio en Disco: <pre><code># Limpiar espacio en Docker\ndocker system prune -af\n\n# Limpiar logs antiguos\nsudo journalctl --vacuum-time=3d\n</code></pre></p> <p>Variables de Entorno Faltantes: <pre><code># Verificar archivo .env\ncat .env\n\n# Recrear desde ejemplo si es necesario\ncp .env.example .env\nnano .env\n</code></pre></p>"},{"location":"deployment/troubleshooting/#contenedor-api-no-conecta-a-servicios","title":"Contenedor API No Conecta a Servicios","text":"<p>S\u00edntomas</p> <ul> <li>Error 500 en endpoints de la API</li> <li>\"Connection refused\" en logs</li> <li>Timeout en consultas a Loki</li> </ul> Verificar Conectividad de RedSoluci\u00f3n <pre><code># Verificar red Docker\ndocker network ls\ndocker network inspect aca-fail2ban-dashboard_fail2ban_network\n\n# Probar conectividad entre contenedores\ndocker compose exec api ping loki\ndocker compose exec api curl http://loki:3100/ready\n</code></pre> <pre><code># Recrear red Docker\ndocker compose down\ndocker network prune -f\ndocker compose up -d\n\n# Verificar que todos los servicios est\u00e9n en la misma red\ndocker inspect $(docker compose ps -q) | grep NetworkMode\n</code></pre>"},{"location":"deployment/troubleshooting/#problemas-de-fail2ban","title":"\ud83d\udee1\ufe0f Problemas de Fail2ban","text":""},{"location":"deployment/troubleshooting/#fail2ban-no-banea-ips","title":"Fail2ban No Banea IPs","text":"<p>S\u00edntomas</p> <ul> <li>IPs maliciosas no son baneadas</li> <li>No hay logs de baneos en <code>/var/log/fail2ban.log</code></li> <li><code>fail2ban-client status</code> muestra 0 baneos</li> </ul> Verificar Configuraci\u00f3nRevisar Logs de EntradaSoluci\u00f3n <pre><code># Verificar que fail2ban est\u00e9 activo\nsudo systemctl status fail2ban\n\n# Verificar jails configurados\nsudo fail2ban-client status\n\n# Verificar configuraci\u00f3n espec\u00edfica\nsudo fail2ban-client get sshd logpath\nsudo fail2ban-client get sshd maxretry\nsudo fail2ban-client get sshd findtime\nsudo fail2ban-client get sshd bantime\n</code></pre> <pre><code># Verificar que los logs que monitorea existan\nls -la /var/log/auth.log\n\n# Verificar que hay actividad en los logs\nsudo tail -f /var/log/auth.log\n\n# Buscar intentos SSH fallidos\nsudo grep \"Failed password\" /var/log/auth.log | tail -10\n</code></pre> <pre><code># Verificar filtros de fail2ban\nsudo fail2ban-client set sshd addlogpath /var/log/auth.log\n\n# Recargar configuraci\u00f3n\nsudo fail2ban-client reload sshd\n\n# Probar filtro manualmente\nsudo fail2ban-regex /var/log/auth.log /etc/fail2ban/filter.d/sshd.conf\n\n# Verificar que no est\u00e9 en ignoreip\nsudo fail2ban-client get sshd ignoreip\n</code></pre>"},{"location":"deployment/troubleshooting/#fail2ban-banea-ips-legitimas","title":"Fail2ban Banea IPs Leg\u00edtimas","text":"<p>S\u00edntomas</p> <ul> <li>Admins no pueden acceder v\u00eda SSH</li> <li>IPs leg\u00edtimas aparecen en listas de baneos</li> <li>Servicios cr\u00edticos afectados</li> </ul> Desbanear IP InmediatamentePrevenir Auto-baneos Futuros <pre><code># Verificar IP baneada\nsudo fail2ban-client status sshd\n\n# Desbanear IP espec\u00edfica\nsudo fail2ban-client set sshd unbanip IP_A_DESBANEAR\n\n# Verificar que se desbane\u00f3\nsudo fail2ban-client status sshd\n</code></pre> <pre><code># Editar configuraci\u00f3n para agregar IP a ignoreip\nsudo nano /etc/fail2ban/jail.local\n\n# Agregar IPs de administradores\n[DEFAULT]\nignoreip = 127.0.0.1/8 ::1 TU_IP_PUBLICA_AQUI TU_IP_OFICINA_AQUI\n\n# Recargar configuraci\u00f3n\nsudo fail2ban-client reload\n</code></pre>"},{"location":"deployment/troubleshooting/#problemas-de-loki-y-logs","title":"\ud83d\uddc4\ufe0f Problemas de Loki y Logs","text":""},{"location":"deployment/troubleshooting/#loki-no-recibe-logs","title":"Loki No Recibe Logs","text":"<p>S\u00edntomas</p> <ul> <li>Dashboard muestra datos vac\u00edos</li> <li>Consultas a Loki retornan resultados vac\u00edos</li> <li>Promtail no env\u00eda datos</li> </ul> Verificar Pipeline Promtail \u2192 LokiVerificar Configuraci\u00f3n de PromtailSoluci\u00f3n <pre><code># Verificar que Promtail est\u00e9 leyendo logs\ndocker compose logs promtail | grep -i \"reading\\|tailing\"\n\n# Verificar conectividad Promtail \u2192 Loki\ndocker compose exec promtail curl http://loki:3100/ready\n\n# Verificar logs de Promtail\ndocker compose logs promtail --tail=50\n</code></pre> <pre><code># Verificar archivo de configuraci\u00f3n\ncat promtail/promtail.yaml\n\n# Verificar que el archivo de log existe y es legible\nls -la /var/log/fail2ban.log\n\n# Verificar posiciones de lectura\ncat /tmp/positions.yaml\n</code></pre> <pre><code># Reiniciar pipeline de logs\ndocker compose restart promtail\n\n# Verificar que los logs est\u00e9n siendo generados\nsudo tail -f /var/log/fail2ban.log\n\n# Forzar actividad en fail2ban para generar logs\nsudo fail2ban-client status\n\n# Verificar en Loki directamente\ncurl \"http://localhost:3100/loki/api/v1/query?query={job=\\\"failban\\\"}&amp;limit=10\"\n</code></pre>"},{"location":"deployment/troubleshooting/#consultas-loki-muy-lentas","title":"Consultas Loki Muy Lentas","text":"<p>S\u00edntomas</p> <ul> <li>Dashboard tarda mucho en cargar</li> <li>Timeouts en consultas de la API</li> <li>Loki consume mucha CPU/memoria</li> </ul> Optimizar ConsultasSoluci\u00f3n <pre><code># Verificar estado de Loki\ncurl http://localhost:3100/metrics | grep loki_ingester\n\n# Verificar tama\u00f1o de datos\ndocker exec aca-fail2ban-dashboard-loki-1 du -sh /loki\n\n# Verificar queries activas\ncurl http://localhost:3100/loki/api/v1/query_stats\n</code></pre> <pre><code># Optimizar configuraci\u00f3n de Loki\n# loki/config.yaml\nlimits_config:\n  max_query_time: \"2m\"\n  max_query_parallelism: 16\n  max_streams_per_user: 5000\n\nchunk_store_config:\n  max_look_back_period: \"168h\"  # 7 d\u00edas\n\ntable_manager:\n  retention_deletes_enabled: true\n  retention_period: \"168h\"  # 7 d\u00edas\n</code></pre>"},{"location":"deployment/troubleshooting/#problemas-de-red-y-conectividad","title":"\ud83c\udf10 Problemas de Red y Conectividad","text":""},{"location":"deployment/troubleshooting/#caddy-no-puede-obtener-certificado-ssl","title":"Caddy No Puede Obtener Certificado SSL","text":"<p>S\u00edntomas</p> <ul> <li>Error 502 \"Bad Gateway\"</li> <li>Logs de Caddy muestran errores de ACME</li> <li>Certificado SSL no se renueva</li> </ul> Verificar Conectividad ExternaVerificar Configuraci\u00f3n de FirewallSoluci\u00f3n <pre><code># Verificar que el dominio apunte al servidor\ndig alertasfail2ban.xmakuno.com\nnslookup alertasfail2ban.xmakuno.com\n\n# Verificar desde externa (usar sitio web)\n# https://dnschecker.org/\n\n# Verificar puertos abiertos\nsudo netstat -tlnp | grep -E \":(80|443)\"\n</code></pre> <pre><code># Verificar Cloud Firewall de DigitalOcean\n# (revisar en panel web)\n\n# Verificar ufw local\nsudo ufw status verbose\n\n# Verificar que no hay otros servicios en puerto 80\nsudo lsof -i :80\n</code></pre> <pre><code># Detener Caddy temporalmente\nsudo systemctl stop caddy\n\n# Probar validaci\u00f3n manual con certbot\nsudo apt install certbot\nsudo certbot certonly --standalone -d alertasfail2ban.xmakuno.com\n\n# Si certbot funciona, el problema est\u00e1 en Caddy\nsudo systemctl start caddy\n\n# Verificar logs espec\u00edficos\nsudo journalctl -u caddy -f --since \"10 minutes ago\"\n</code></pre>"},{"location":"deployment/troubleshooting/#puerto-8000-accesible-externamente","title":"Puerto 8000 Accesible Externamente","text":"<p>Problema de Seguridad Cr\u00edtico</p> <p>Si el puerto 8000 de la API es accesible desde internet, es un riesgo de seguridad.</p> Verificar Exposici\u00f3nSoluci\u00f3n Inmediata <pre><code># Verificar desde otra m\u00e1quina\nnmap -p 8000 tu_ip_servidor\n\n# O usar herramienta online como:\n# https://www.yougetsignal.com/tools/open-ports/\n</code></pre> <pre><code># Verificar Cloud Firewall de DigitalOcean\n# Puerto 8000 NO debe estar en las reglas\n\n# Verificar configuraci\u00f3n Docker\ndocker compose ps\n# Solo debe mostrar 8000:8000 sin 0.0.0.0:8000:8000\n\n# Si est\u00e1 mal configurado, editar docker-compose.yaml\nnano docker-compose.yaml\n\n# Cambiar de:\n# ports:\n#   - \"0.0.0.0:8000:8000\"\n# A:\n# ports:\n#   - \"127.0.0.1:8000:8000\"\n\n# Recrear contenedores\ndocker compose up -d --force-recreate\n</code></pre>"},{"location":"deployment/troubleshooting/#problemas-de-performance","title":"\u26a1 Problemas de Performance","text":""},{"location":"deployment/troubleshooting/#alta-carga-del-sistema","title":"Alta Carga del Sistema","text":"<p>S\u00edntomas</p> <ul> <li>Load average muy alto</li> <li>Sistema lento en respuesta</li> <li>Servicios que no responden</li> </ul> Identificar CausaSoluciones por Causa <pre><code># Verificar carga actual\nuptime\n\n# Top procesos por CPU\ntop -c\n\n# Top procesos por memoria\nps aux --sort=-%mem | head -10\n\n# Verificar I/O de disco\niotop -ao\n\n# Verificar uso de red\niftop\n</code></pre> <p>CPU Alto por Loki: <pre><code># Reducir retenci\u00f3n de datos\n# Editar loki/config.yaml\nlimits_config:\n  retention_period: \"72h\"  # Reducir de 744h a 72h\n\n# Reiniciar Loki\ndocker compose restart loki\n</code></pre></p> <p>Memoria Alta: <pre><code># Verificar uso de memoria por contenedor\ndocker stats --no-stream\n\n# Limpiar cache del sistema\nsync &amp;&amp; echo 3 | sudo tee /proc/sys/vm/drop_caches\n\n# Agregar l\u00edmites de memoria en docker-compose.yaml\nservices:\n  loki:\n    deploy:\n      resources:\n        limits:\n          memory: 512M\n</code></pre></p> <p>Disco Lleno: <pre><code># Verificar uso de disco\ndf -h\n\n# Limpiar logs antiguos\nsudo journalctl --vacuum-time=3d\n\n# Limpiar Docker\ndocker system prune -af --volumes\n\n# Rotar logs de Caddy\nsudo logrotate -f /etc/logrotate.d/caddy\n</code></pre></p>"},{"location":"deployment/troubleshooting/#herramientas-de-diagnostico","title":"\ud83d\udd0d Herramientas de Diagn\u00f3stico","text":""},{"location":"deployment/troubleshooting/#script-de-diagnostico-automatico","title":"Script de Diagn\u00f3stico Autom\u00e1tico","text":"<pre><code>#!/bin/bash\n# diagnostic.sh - Script completo de diagn\u00f3stico\n\necho \"=== DIAGN\u00d3STICO COMPLETO DEL SISTEMA ===\"\necho \"Fecha: $(date)\"\necho \"==========================================\"\n\n# 1. Estado general del sistema\necho \"\ud83d\udcca ESTADO DEL SISTEMA:\"\nuptime\nfree -h\ndf -h /\n\n# 2. Servicios cr\u00edticos\necho -e \"\\n\ud83d\udd27 SERVICIOS CR\u00cdTICOS:\"\nfor service in fail2ban caddy docker; do\n    if systemctl is-active --quiet $service; then\n        echo \"\u2705 $service: ACTIVO\"\n    else\n        echo \"\u274c $service: INACTIVO\"\n    fi\ndone\n\n# 3. Contenedores Docker\necho -e \"\\n\ud83d\udc33 CONTENEDORES DOCKER:\"\ndocker compose ps 2&gt;/dev/null || echo \"\u274c Docker Compose no disponible\"\n\n# 4. Conectividad de red\necho -e \"\\n\ud83c\udf10 CONECTIVIDAD DE RED:\"\nif curl -s http://localhost:8000/health &gt;/dev/null; then\n    echo \"\u2705 API local: DISPONIBLE\"\nelse\n    echo \"\u274c API local: NO DISPONIBLE\"\nfi\n\nif curl -s http://localhost:3100/ready &gt;/dev/null; then\n    echo \"\u2705 Loki: DISPONIBLE\"\nelse\n    echo \"\u274c Loki: NO DISPONIBLE\"\nfi\n\n# 5. SSL/TLS\necho -e \"\\n\ud83d\udd12 CERTIFICADO SSL:\"\ncert_info=$(echo | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates 2&gt;/dev/null)\nif [ $? -eq 0 ]; then\n    echo \"\u2705 Certificado SSL v\u00e1lido\"\n    echo \"$cert_info\"\nelse\n    echo \"\u274c Problema con certificado SSL\"\nfi\n\n# 6. Fail2ban status\necho -e \"\\n\ud83d\udee1\ufe0f FAIL2BAN STATUS:\"\nif sudo fail2ban-client status &gt;/dev/null 2&gt;&amp;1; then\n    echo \"\u2705 Fail2ban funcionando\"\n    sudo fail2ban-client status | grep \"Jail list\"\nelse\n    echo \"\u274c Problema con Fail2ban\"\nfi\n\n# 7. Logs recientes de errores\necho -e \"\\n\ud83d\udcdd ERRORES RECIENTES (\u00faltimas 2 horas):\"\nsudo journalctl --since=\"2 hours ago\" --priority=err --no-pager | tail -5\n\necho -e \"\\n==========================================\"\necho \"Diagn\u00f3stico completado: $(date)\"\n</code></pre>"},{"location":"deployment/troubleshooting/#monitoreo-en-tiempo-real","title":"Monitoreo en Tiempo Real","text":"<pre><code>#!/bin/bash\n# monitor.sh - Monitoreo en tiempo real\n\nwatch -n 5 '\necho \"=== MONITOREO EN TIEMPO REAL ===\"\necho \"Fecha: $(date)\"\necho \"================================\"\necho \"\"\necho \"\ud83d\udd27 Servicios:\"\nsystemctl is-active fail2ban caddy docker | paste &lt;(echo -e \"fail2ban\\ncaddy\\ndocker\") - | column -t\necho \"\"\necho \"\ud83d\udc33 Contenedores:\"\ndocker compose ps --format \"table {{.Name}}\\t{{.Status}}\\t{{.Ports}}\" 2&gt;/dev/null\necho \"\"\necho \"\ud83d\udcca Recursos:\"\necho \"CPU: $(top -bn1 | grep \"Cpu(s)\" | awk \"{print \\$2}\" | cut -d\"%\" -f1)%\"\necho \"RAM: $(free | grep Mem | awk \"{printf \\\"%.1f%%\\\", \\$3/\\$2 * 100.0}\")\"\necho \"Disk: $(df / | tail -1 | awk \"{print \\$5}\")\"\necho \"\"\necho \"\ud83d\udee1\ufe0f Fail2ban (\u00faltimos 5 min):\"\nsudo grep \"$(date \"+%Y-%m-%d %H:%M\" -d \"5 minutes ago\")\" /var/log/fail2ban.log 2&gt;/dev/null | tail -3 || echo \"Sin actividad\"\n'\n</code></pre> <p>Mejores Pr\u00e1cticas de Troubleshooting</p> <ol> <li>Siempre verifica logs antes de hacer cambios</li> <li>Haz backups antes de modificar configuraciones cr\u00edticas</li> <li>Documenta todos los cambios para futura referencia</li> <li>Prueba en ambiente controlado cuando sea posible</li> <li>Ten un plan de rollback para cada cambio importante</li> </ol> <p>Recursos Adicionales</p> <ul> <li>Logs del sistema: Ubicaciones y formatos de logs</li> <li>Configuraci\u00f3n de seguridad: Hardening adicional</li> <li>API Reference: Documentaci\u00f3n completa de endpoints</li> </ul> <p>Soporte Adicional</p> <p>Si no puedes resolver un problema con esta gu\u00eda:</p> <ol> <li>Ejecuta el script de diagn\u00f3stico completo</li> <li>Recopila logs relevantes con <code>journalctl</code></li> <li>Documenta los pasos exactos que llevaron al problema</li> <li>Revisa la documentaci\u00f3n oficial de cada componente</li> </ol>"},{"location":"frontend/components/","title":"\ud83e\udde9 Componentes del Frontend","text":""},{"location":"frontend/components/#arquitectura-de-componentes","title":"Arquitectura de Componentes","text":""},{"location":"frontend/components/#jerarquia-principal","title":"Jerarqu\u00eda Principal","text":"<pre><code>graph TB\n    subgraph \"App Router\"\n        LAYOUT[RootLayout]\n        AUTH[AuthPage]\n        DASHBOARD[DashboardLayout]\n    end\n\n    subgraph \"Authentication\"\n        LOGIN[LoginForm]\n        REGISTER[RegisterForm]\n        AUTHPAGE[AuthPage]\n    end\n\n    subgraph \"Dashboard\"\n        METRICS[MetricsCards]\n        JAILS[JailsTable]\n        LOGS[LogsViewer]\n        SETTINGS[SettingsPanel]\n    end\n\n    LAYOUT --&gt; AUTH\n    LAYOUT --&gt; DASHBOARD\n    AUTH --&gt; LOGIN\n    AUTH --&gt; REGISTER\n    DASHBOARD --&gt; METRICS\n    DASHBOARD --&gt; JAILS\n    DASHBOARD --&gt; LOGS</code></pre>"},{"location":"frontend/components/#componentes-de-autenticacion","title":"\ud83d\udd10 Componentes de Autenticaci\u00f3n","text":""},{"location":"frontend/components/#authpagetsx","title":"AuthPage.tsx","text":"<pre><code>'use client'\n\nimport { useState } from 'react'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nexport function AuthPage() {\n  const [mode, setMode] = useState&lt;'login' | 'register'&gt;('login')\n\n  return (\n    &lt;section className=\"min-h-screen flex flex-col lg:flex-row\"&gt;\n      &lt;section className=\"flex-1 flex items-center justify-center p-8\"&gt;\n        &lt;AnimatePresence mode=\"wait\"&gt;\n          {mode === 'login' ? (\n            &lt;motion.div\n              key=\"login\"\n              initial={{ opacity: 0, x: 100 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -100 }}\n            &gt;\n              &lt;LoginForm onSwitchToRegister={() =&gt; setMode('register')} /&gt;\n            &lt;/motion.div&gt;\n          ) : (\n            &lt;motion.div\n              key=\"register\"\n              initial={{ opacity: 0, x: 100 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -100 }}\n            &gt;\n              &lt;RegisterForm onSwitchToLogin={() =&gt; setMode('login')} /&gt;\n            &lt;/motion.div&gt;\n          )}\n        &lt;/AnimatePresence&gt;\n      &lt;/section&gt;\n\n      {/* Hero section */}\n      &lt;HeroSection /&gt;\n    &lt;/section&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/components/#loginformtsx","title":"LoginForm.tsx","text":"<pre><code>'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useState } from 'react'\nimport { Eye, EyeOff } from 'lucide-react'\n\nexport function LoginForm({ onSwitchToRegister }: LoginFormProps) {\n  const [showPassword, setShowPassword] = useState(false)\n\n  const form = useForm&lt;LoginFormData&gt;({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      emailOrUsername: '',\n      password: '',\n      rememberMe: false\n    }\n  })\n\n  const handleSubmit = async (data: LoginFormData) =&gt; {\n    // Autenticaci\u00f3n con server action\n    const result = await signin(data)\n    if (result.error) {\n      form.setError('root', { message: result.error })\n    }\n  }\n\n  return (\n    &lt;Form {...form}&gt;\n      &lt;form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-5\"&gt;\n        &lt;FormField\n          control={form.control}\n          name=\"emailOrUsername\"\n          render={({ field }) =&gt; (\n            &lt;FormItem&gt;\n              &lt;FormLabel&gt;Email or Username&lt;/FormLabel&gt;\n              &lt;FormControl&gt;\n                &lt;Input {...field} placeholder=\"Enter email or username\" /&gt;\n              &lt;/FormControl&gt;\n              &lt;FormMessage /&gt;\n            &lt;/FormItem&gt;\n          )}\n        /&gt;\n\n        &lt;FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) =&gt; (\n            &lt;FormItem&gt;\n              &lt;FormLabel&gt;Password&lt;/FormLabel&gt;\n              &lt;FormControl&gt;\n                &lt;div className=\"relative\"&gt;\n                  &lt;Input\n                    {...field}\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Enter password\"\n                  /&gt;\n                  &lt;Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0\"\n                    onClick={() =&gt; setShowPassword(!showPassword)}\n                  &gt;\n                    {showPassword ? &lt;EyeOff /&gt; : &lt;Eye /&gt;}\n                  &lt;/Button&gt;\n                &lt;/div&gt;\n              &lt;/FormControl&gt;\n              &lt;FormMessage /&gt;\n            &lt;/FormItem&gt;\n          )}\n        /&gt;\n\n        &lt;Button type=\"submit\" className=\"w-full\"&gt;\n          Sign In\n        &lt;/Button&gt;\n      &lt;/form&gt;\n    &lt;/Form&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/components/#componentes-del-dashboard","title":"\ud83d\udcca Componentes del Dashboard","text":""},{"location":"frontend/components/#metricscardtsx","title":"MetricsCard.tsx","text":"<pre><code>interface MetricsCardProps {\n  title: string\n  value: string | number\n  change?: number\n  icon: React.ReactNode\n  trend?: 'up' | 'down' | 'neutral'\n}\n\nexport function MetricsCard({ \n  title, \n  value, \n  change, \n  icon, \n  trend \n}: MetricsCardProps) {\n  return (\n    &lt;Card className=\"p-6\"&gt;\n      &lt;div className=\"flex items-center justify-between\"&gt;\n        &lt;div&gt;\n          &lt;p className=\"text-sm font-medium text-muted-foreground\"&gt;\n            {title}\n          &lt;/p&gt;\n          &lt;p className=\"text-2xl font-bold\"&gt;\n            {typeof value === 'number' ? value.toLocaleString() : value}\n          &lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div className=\"h-8 w-8 text-muted-foreground\"&gt;\n          {icon}\n        &lt;/div&gt;\n      &lt;/div&gt;\n\n      {change &amp;&amp; (\n        &lt;div className=\"mt-4 flex items-center text-sm\"&gt;\n          &lt;TrendingUp \n            className={cn(\n              \"mr-1 h-3 w-3\",\n              trend === 'up' &amp;&amp; \"text-green-600\",\n              trend === 'down' &amp;&amp; \"text-red-600\"\n            )} \n          /&gt;\n          &lt;span className={cn(\n            trend === 'up' &amp;&amp; \"text-green-600\",\n            trend === 'down' &amp;&amp; \"text-red-600\"\n          )}&gt;\n            {change &gt; 0 ? '+' : ''}{change}%\n          &lt;/span&gt;\n          &lt;span className=\"text-muted-foreground ml-1\"&gt;\n            from last month\n          &lt;/span&gt;\n        &lt;/div&gt;\n      )}\n    &lt;/Card&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/components/#jailstabletsx","title":"JailsTable.tsx","text":"<pre><code>'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\n\ninterface Jail {\n  name: string\n  status: 'active' | 'inactive'\n  banned_ips: string[]\n  total_failed: number\n  total_banned: number\n}\n\nexport function JailsTable() {\n  const [jails, setJails] = useState&lt;Jail[]&gt;([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() =&gt; {\n    fetchJails()\n  }, [])\n\n  const fetchJails = async () =&gt; {\n    try {\n      const response = await fetch('/api/jails')\n      const data = await response.json()\n      setJails(data)\n    } catch (error) {\n      console.error('Error fetching jails:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (loading) {\n    return &lt;div className=\"animate-pulse\"&gt;Loading jails...&lt;/div&gt;\n  }\n\n  return (\n    &lt;Card&gt;\n      &lt;CardHeader&gt;\n        &lt;CardTitle&gt;Fail2ban Jails&lt;/CardTitle&gt;\n      &lt;/CardHeader&gt;\n      &lt;CardContent&gt;\n        &lt;Table&gt;\n          &lt;TableHeader&gt;\n            &lt;TableRow&gt;\n              &lt;TableHead&gt;Jail Name&lt;/TableHead&gt;\n              &lt;TableHead&gt;Status&lt;/TableHead&gt;\n              &lt;TableHead&gt;Banned IPs&lt;/TableHead&gt;\n              &lt;TableHead&gt;Failed Attempts&lt;/TableHead&gt;\n              &lt;TableHead&gt;Actions&lt;/TableHead&gt;\n            &lt;/TableRow&gt;\n          &lt;/TableHeader&gt;\n          &lt;TableBody&gt;\n            {jails.map((jail) =&gt; (\n              &lt;TableRow key={jail.name}&gt;\n                &lt;TableCell className=\"font-medium\"&gt;{jail.name}&lt;/TableCell&gt;\n                &lt;TableCell&gt;\n                  &lt;Badge \n                    variant={jail.status === 'active' ? 'default' : 'secondary'}\n                  &gt;\n                    {jail.status}\n                  &lt;/Badge&gt;\n                &lt;/TableCell&gt;\n                &lt;TableCell&gt;\n                  &lt;Badge variant=\"outline\"&gt;\n                    {jail.banned_ips.length}\n                  &lt;/Badge&gt;\n                &lt;/TableCell&gt;\n                &lt;TableCell&gt;{jail.total_failed}&lt;/TableCell&gt;\n                &lt;TableCell&gt;\n                  &lt;Button variant=\"outline\" size=\"sm\"&gt;\n                    View Details\n                  &lt;/Button&gt;\n                &lt;/TableCell&gt;\n              &lt;/TableRow&gt;\n            ))}\n          &lt;/TableBody&gt;\n        &lt;/Table&gt;\n      &lt;/CardContent&gt;\n    &lt;/Card&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/components/#logsviewertsx","title":"LogsViewer.tsx","text":"<pre><code>'use client'\n\nimport { useEffect, useState } from 'react'\nimport { ScrollArea } from '@/components/ui/scroll-area'\n\ninterface LogEntry {\n  timestamp: string\n  level: 'INFO' | 'WARNING' | 'ERROR'\n  message: string\n  jail?: string\n  ip?: string\n}\n\nexport function LogsViewer() {\n  const [logs, setLogs] = useState&lt;LogEntry[]&gt;([])\n  const [connected, setConnected] = useState(false)\n\n  useEffect(() =&gt; {\n    // WebSocket connection for real-time logs\n    const ws = new WebSocket(process.env.NEXT_PUBLIC_WS_URL + '/logs')\n\n    ws.onopen = () =&gt; setConnected(true)\n    ws.onclose = () =&gt; setConnected(false)\n\n    ws.onmessage = (event) =&gt; {\n      const logEntry = JSON.parse(event.data)\n      setLogs(prev =&gt; [logEntry, ...prev.slice(0, 99)]) // Keep last 100 logs\n    }\n\n    return () =&gt; ws.close()\n  }, [])\n\n  return (\n    &lt;Card className=\"h-[600px]\"&gt;\n      &lt;CardHeader&gt;\n        &lt;div className=\"flex items-center justify-between\"&gt;\n          &lt;CardTitle&gt;Real-time Logs&lt;/CardTitle&gt;\n          &lt;Badge variant={connected ? 'default' : 'destructive'}&gt;\n            {connected ? 'Connected' : 'Disconnected'}\n          &lt;/Badge&gt;\n        &lt;/div&gt;\n      &lt;/CardHeader&gt;\n      &lt;CardContent&gt;\n        &lt;ScrollArea className=\"h-[500px]\"&gt;\n          &lt;div className=\"space-y-2\"&gt;\n            {logs.map((log, index) =&gt; (\n              &lt;div \n                key={index}\n                className=\"flex items-start gap-3 p-3 rounded-lg bg-muted/50\"\n              &gt;\n                &lt;Badge \n                  variant={\n                    log.level === 'ERROR' ? 'destructive' :\n                    log.level === 'WARNING' ? 'secondary' : 'default'\n                  }\n                  className=\"mt-1\"\n                &gt;\n                  {log.level}\n                &lt;/Badge&gt;\n                &lt;div className=\"flex-1 min-w-0\"&gt;\n                  &lt;p className=\"text-sm text-muted-foreground\"&gt;\n                    {new Date(log.timestamp).toLocaleString()}\n                  &lt;/p&gt;\n                  &lt;p className=\"text-sm break-words\"&gt;{log.message}&lt;/p&gt;\n                  {log.jail &amp;&amp; (\n                    &lt;Badge variant=\"outline\" className=\"mt-1\"&gt;\n                      {log.jail}\n                    &lt;/Badge&gt;\n                  )}\n                &lt;/div&gt;\n              &lt;/div&gt;\n            ))}\n          &lt;/div&gt;\n        &lt;/ScrollArea&gt;\n      &lt;/CardContent&gt;\n    &lt;/Card&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/components/#componentes-ui-base","title":"\ud83c\udfa8 Componentes UI Base","text":""},{"location":"frontend/components/#custom-input-component","title":"Custom Input Component","text":"<pre><code>// components/ui/input.tsx\nimport { forwardRef } from 'react'\nimport { cn } from '@/lib/utils'\n\nexport interface InputProps extends React.InputHTMLAttributes&lt;HTMLInputElement&gt; {}\n\nconst Input = forwardRef&lt;HTMLInputElement, InputProps&gt;(\n  ({ className, type, ...props }, ref) =&gt; {\n    return (\n      &lt;input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2\",\n          \"text-sm ring-offset-background file:border-0 file:bg-transparent\",\n          \"file:text-sm file:font-medium placeholder:text-muted-foreground\",\n          \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring\",\n          \"focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      /&gt;\n    )\n  }\n)\n\nInput.displayName = \"Input\"\nexport { Input }\n</code></pre> <p>Mejores Pr\u00e1cticas</p> <ul> <li>Usa TypeScript para todas las props</li> <li>Implementa proper error boundaries</li> <li>Usa forwardRef para componentes que necesitan refs</li> <li>Mant\u00e9n componentes peque\u00f1os y enfocados</li> </ul> <p>Performance</p> <ul> <li>Usa React.memo para componentes pesados</li> <li>Implementa virtualization para listas largas</li> <li>Usa Suspense para lazy loading</li> </ul> <p>Reutilizaci\u00f3n</p> <ul> <li>Crea un design system consistente</li> <li>Usa shadcn/ui como base</li> <li>Implementa variants con class-variance-authority</li> </ul>"},{"location":"frontend/deployment/","title":"\ud83d\udee0\ufe0f Desarrollo del Frontend","text":""},{"location":"frontend/deployment/#configuracion-del-entorno","title":"Configuraci\u00f3n del Entorno","text":""},{"location":"frontend/deployment/#prerrequisitos","title":"Prerrequisitos","text":"<pre><code># Node.js y pnpm\nnode --version  # &gt;= 18.0.0\npnpm --version  # &gt;= 8.0.0 (recomendado)\n\n# O usar npm/yarn\nnpm --version   # &gt;= 9.0.0\nyarn --version  # &gt;= 1.22.0\n</code></pre>"},{"location":"frontend/deployment/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code># Clonar repositorio\ngit clone https://github.com/FFigueroa17/secure-dash-project.git\ncd secure-dash-project/secure-dash-project\n\n# Instalar dependencias\npnpm install\n# o\nnpm install\n</code></pre>"},{"location":"frontend/deployment/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># Copiar archivo de ejemplo\ncp .env.example .env.local\n</code></pre> <pre><code># .env.local\nNEXTAUTH_URL=http://localhost:3000\nNEXTAUTH_SECRET=your-secret-key-here\nNEXT_PUBLIC_API_URL=http://localhost:8000\nNEXT_PUBLIC_WS_URL=ws://localhost:8000/ws\n</code></pre>"},{"location":"frontend/deployment/#comandos-de-desarrollo","title":"\ud83d\ude80 Comandos de Desarrollo","text":""},{"location":"frontend/deployment/#scripts-disponibles","title":"Scripts Disponibles","text":"<pre><code># Servidor de desarrollo\npnpm dev\n# Accesible en http://localhost:3000\n\n# Build de producci\u00f3n\npnpm build\n\n# Iniciar servidor de producci\u00f3n\npnpm start\n\n# Linting y formateo\npnpm lint\npnpm lint:fix\n\n# Type checking\npnpm type-check\n\n# Tests\npnpm test\npnpm test:watch\n</code></pre>"},{"location":"frontend/deployment/#estructura-de-desarrollo","title":"Estructura de Desarrollo","text":"<pre><code>src/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 (auth)/\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx              # P\u00e1gina de login/registro\n\u2502   \u251c\u2500\u2500 (dashboard)/\n\u2502   \u2502   \u251c\u2500\u2500 dashboard/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx          # Dashboard principal\n\u2502   \u2502   \u251c\u2500\u2500 jails/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx          # Gesti\u00f3n de jails\n\u2502   \u2502   \u2514\u2500\u2500 logs/\n\u2502   \u2502       \u2514\u2500\u2500 page.tsx          # Viewer de logs\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u2514\u2500\u2500 auth/                 # NextAuth endpoints\n\u2502   \u251c\u2500\u2500 layout.tsx                # Root layout\n\u2502   \u2514\u2500\u2500 globals.css               # Estilos globales\n\u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 ui/                       # shadcn/ui components\n\u2502   \u251c\u2500\u2500 forms/\n\u2502   \u2502   \u251c\u2500\u2500 login-form.tsx\n\u2502   \u2502   \u2514\u2500\u2500 register-form.tsx\n\u2502   \u2514\u2500\u2500 dashboard/\n\u2502       \u251c\u2500\u2500 metrics-card.tsx\n\u2502       \u251c\u2500\u2500 jails-table.tsx\n\u2502       \u2514\u2500\u2500 logs-viewer.tsx\n\u251c\u2500\u2500 lib/\n\u2502   \u251c\u2500\u2500 auth.ts                   # NextAuth configuraci\u00f3n\n\u2502   \u251c\u2500\u2500 utils.ts                  # Utilidades generales\n\u2502   \u2514\u2500\u2500 validations.ts            # Esquemas Zod\n\u2514\u2500\u2500 types/\n    \u251c\u2500\u2500 auth.ts                   # Tipos de autenticaci\u00f3n\n    \u2514\u2500\u2500 api.ts                    # Tipos de API\n</code></pre>"},{"location":"frontend/deployment/#configuracion-tecnica","title":"\ud83d\udd27 Configuraci\u00f3n T\u00e9cnica","text":""},{"location":"frontend/deployment/#nextjs-configuration","title":"Next.js Configuration","text":"<pre><code>// next.config.js\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    serverActions: true,\n    serverComponentsExternalPackages: ['bcryptjs']\n  },\n  images: {\n    domains: ['randomuser.me', 'images.unsplash.com']\n  },\n  env: {\n    NEXTAUTH_URL: process.env.NEXTAUTH_URL,\n    NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL\n  }\n}\n\nmodule.exports = nextConfig\n</code></pre>"},{"location":"frontend/deployment/#tailwind-configuration","title":"Tailwind Configuration","text":"<pre><code>// tailwind.config.js\nmodule.exports = {\n  darkMode: 'class',\n  content: [\n    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n  ],\n  theme: {\n    extend: {\n      colors: {\n        border: 'hsl(var(--border))',\n        background: 'hsl(var(--background))',\n        foreground: 'hsl(var(--foreground))',\n        primary: {\n          DEFAULT: 'hsl(var(--primary))',\n          foreground: 'hsl(var(--primary-foreground))',\n        },\n      },\n    },\n  },\n  plugins: [require('tailwindcss-animate')],\n}\n</code></pre>"},{"location":"frontend/deployment/#desarrollo-de-componentes","title":"\ud83c\udfa8 Desarrollo de Componentes","text":""},{"location":"frontend/deployment/#form-components-con-zod","title":"Form Components con Zod","text":"<pre><code>// components/forms/login-form.tsx\n'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm } from 'react-hook-form'\nimport { z } from 'zod'\n\nconst loginSchema = z.object({\n  emailOrUsername: z.string().min(1, 'Required'),\n  password: z.string().min(8, 'Minimum 8 characters'),\n  rememberMe: z.boolean().optional()\n})\n\ntype LoginFormData = z.infer&lt;typeof loginSchema&gt;\n\nexport function LoginForm({ onSubmit }: { onSubmit: (data: LoginFormData) =&gt; void }) {\n  const form = useForm&lt;LoginFormData&gt;({\n    resolver: zodResolver(loginSchema)\n  })\n\n  return (\n    &lt;Form {...form}&gt;\n      &lt;form onSubmit={form.handleSubmit(onSubmit)}&gt;\n        {/* Form fields */}\n      &lt;/form&gt;\n    &lt;/Form&gt;\n  )\n}\n</code></pre>"},{"location":"frontend/deployment/#api-integration","title":"API Integration","text":"<pre><code>// lib/api-client.ts\nclass ApiClient {\n  private baseUrl: string\n\n  constructor() {\n    this.baseUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000'\n  }\n\n  async getJails() {\n    const response = await fetch(`${this.baseUrl}/api/jails`)\n    if (!response.ok) throw new Error('Failed to fetch jails')\n    return response.json()\n  }\n\n  async getLogs(params?: { limit?: number; jail?: string }) {\n    const searchParams = new URLSearchParams(params as Record&lt;string, string&gt;)\n    const response = await fetch(`${this.baseUrl}/api/logs?${searchParams}`)\n    return response.json()\n  }\n}\n\nexport const apiClient = new ApiClient()\n</code></pre>"},{"location":"frontend/deployment/#server-actions","title":"Server Actions","text":"<pre><code>// app/actions/auth.ts\n'use server'\n\nimport { signIn, signOut } from '@/lib/auth'\nimport { loginSchema, registerSchema } from '@/lib/validations'\n\nexport async function signin(formData: FormData) {\n  const rawData = {\n    emailOrUsername: formData.get('emailOrUsername'),\n    password: formData.get('password'),\n    rememberMe: formData.get('rememberMe') === 'true'\n  }\n\n  const validatedData = loginSchema.parse(rawData)\n\n  const result = await signIn('credentials', {\n    ...validatedData,\n    redirect: false\n  })\n\n  return result\n}\n</code></pre>"},{"location":"frontend/deployment/#responsive-design","title":"\ud83d\udcf1 Responsive Design","text":""},{"location":"frontend/deployment/#breakpoints-tailwind","title":"Breakpoints Tailwind","text":"<pre><code>/* Breakpoints utilizados */\nsm: 640px   /* Tablet peque\u00f1a */\nmd: 768px   /* Tablet */\nlg: 1024px  /* Desktop peque\u00f1o */\nxl: 1280px  /* Desktop */\n2xl: 1536px /* Desktop grande */\n</code></pre>"},{"location":"frontend/deployment/#layout-responsivo","title":"Layout Responsivo","text":"<pre><code>// Layout adaptativo\n&lt;div className=\"min-h-screen flex flex-col lg:flex-row\"&gt;\n  {/* Auth form - mobile first */}\n  &lt;section className=\"flex-1 flex items-center justify-center p-4 sm:p-8\"&gt;\n    &lt;div className=\"w-full max-w-md\"&gt;\n      {/* Form content */}\n    &lt;/div&gt;\n  &lt;/section&gt;\n\n  {/* Hero section - hidden on mobile */}\n  &lt;section className=\"hidden lg:block flex-1 relative p-4\"&gt;\n    {/* Hero content */}\n  &lt;/section&gt;\n&lt;/div&gt;\n</code></pre> <p>Desarrollo Local</p> <ul> <li>Usa <code>pnpm dev</code> para hot reload autom\u00e1tico</li> <li>Configura VS Code con extensiones de Next.js y Tailwind</li> <li>Usa TypeScript strict mode para mejor type safety</li> </ul> <p>Consideraciones</p> <ul> <li>Siempre valida props con Zod schemas</li> <li>Implementa error boundaries para componentes cr\u00edticos</li> <li>Usa Suspense para loading states</li> </ul> <p>Herramientas Recomendadas</p> <ul> <li>VS Code con extensiones Next.js y Tailwind</li> <li>React DevTools para debugging</li> <li>Tailwind CSS IntelliSense para autocompletado</li> </ul>"},{"location":"frontend/features/","title":"\ud83c\udfa8 Caracter\u00edsticas del Frontend","text":""},{"location":"frontend/features/#dashboard-principal","title":"Dashboard Principal","text":""},{"location":"frontend/features/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":"<p>Funcionalidades</p> <ul> <li>\ud83d\udd10 Autenticaci\u00f3n Segura: Login y registro con validaci\u00f3n avanzada</li> <li>\ud83d\udcca Dashboard en Tiempo Real: M\u00e9tricas y gr\u00e1ficos actualizados autom\u00e1ticamente</li> <li>\ud83d\udee1\ufe0f Monitoreo Fail2ban: Vista completa de jails, IPs baneadas y logs</li> <li>\ud83d\udcf1 Responsive Design: Optimizado para desktop, tablet y m\u00f3vil</li> <li>\ud83c\udf19 Modo Oscuro: Tema dark nativo con soporte completo</li> <li>\u26a1 Performance: SSR con Next.js para carga r\u00e1pida</li> </ul>"},{"location":"frontend/features/#componentes-principales","title":"Componentes Principales","text":"<pre><code>graph TB\n    subgraph \"Authentication\"\n        AUTH[AuthPage]\n        LOGIN[LoginForm]\n        REGISTER[RegisterForm]\n    end\n\n    subgraph \"Dashboard App\"\n        LAYOUT[AppLayout]\n        SIDEBAR[Sidebar]\n        MAIN[MainContent]\n    end\n\n    subgraph \"Pages\"\n        DASHBOARD[Dashboard]\n        JAILS[JailsPage]\n        LOGS[LogsPage]\n        SETTINGS[SettingsPage]\n    end\n\n    AUTH --&gt; LOGIN\n    AUTH --&gt; REGISTER\n    LAYOUT --&gt; SIDEBAR\n    LAYOUT --&gt; MAIN\n    MAIN --&gt; DASHBOARD\n    MAIN --&gt; JAILS\n    MAIN --&gt; LOGS\n    MAIN --&gt; SETTINGS</code></pre>"},{"location":"frontend/features/#tecnologias-utilizadas","title":"\ud83d\udd27 Tecnolog\u00edas Utilizadas","text":""},{"location":"frontend/features/#stack-tecnologico","title":"Stack Tecnol\u00f3gico","text":"Componente Tecnolog\u00eda Prop\u00f3sito Framework Next.js 15 React con SSR/SSG UI Library Tailwind CSS + shadcn/ui Componentes modernos Forms React Hook Form + Zod Validaci\u00f3n y manejo de formularios Animation Framer Motion Transiciones suaves State React Query + Zustand Gesti\u00f3n de estado Auth NextAuth.js Autenticaci\u00f3n segura TypeScript TypeScript 5 Tipado est\u00e1tico"},{"location":"frontend/features/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>src/\n\u251c\u2500\u2500 app/                    # App Router de Next.js\n\u2502   \u251c\u2500\u2500 (auth)/            # Rutas de autenticaci\u00f3n\n\u2502   \u251c\u2500\u2500 (dashboard)/       # Rutas del dashboard\n\u2502   \u251c\u2500\u2500 api/               # API Routes\n\u2502   \u2514\u2500\u2500 globals.css        # Estilos globales\n\u251c\u2500\u2500 components/            # Componentes reutilizables\n\u2502   \u251c\u2500\u2500 ui/                # Componentes base (shadcn/ui)\n\u2502   \u251c\u2500\u2500 forms/             # Formularios espec\u00edficos\n\u2502   \u2514\u2500\u2500 layout/            # Componentes de layout\n\u251c\u2500\u2500 lib/                   # Utilidades y configuraci\u00f3n\n\u251c\u2500\u2500 types/                 # Definiciones de tipos\n\u2514\u2500\u2500 hooks/                 # Custom hooks\n</code></pre>"},{"location":"frontend/features/#sistema-de-autenticacion","title":"\ud83d\udd10 Sistema de Autenticaci\u00f3n","text":""},{"location":"frontend/features/#loginform-component","title":"LoginForm Component","text":"<ul> <li>Validaci\u00f3n robusta con Zod schemas</li> <li>Soporte dual para email o username</li> <li>Persistencia de sesi\u00f3n con \"Remember me\"</li> <li>Estados de loading y error handling</li> <li>Transiciones animadas entre formularios</li> </ul>"},{"location":"frontend/features/#registerform-component","title":"RegisterForm Component","text":"<ul> <li>Validaci\u00f3n en tiempo real de campos</li> <li>Confirmaci\u00f3n de contrase\u00f1a con matching</li> <li>T\u00e9rminos y condiciones obligatorios</li> <li>Feedback visual de errores</li> <li>Integraci\u00f3n con backend para registro</li> </ul>"},{"location":"frontend/features/#funcionalidades-del-dashboard","title":"\ud83d\udcca Funcionalidades del Dashboard","text":""},{"location":"frontend/features/#paginas-principales","title":"P\u00e1ginas Principales","text":"Dashboard OverviewJails ManagementLogs ViewerSettings Panel <ul> <li>M\u00e9tricas en tiempo real de seguridad</li> <li>Gr\u00e1ficos interactivos de tendencias</li> <li>Alertas visuales de eventos cr\u00edticos</li> <li>Estado general del sistema</li> </ul> <ul> <li>Lista completa de jails configurados</li> <li>Estado en tiempo real de cada jail</li> <li>IPs baneadas con detalles geogr\u00e1ficos</li> <li>Acciones r\u00e1pidas de ban/unban</li> </ul> <ul> <li>Stream en tiempo real de logs</li> <li>Filtros avanzados por jail, IP, fecha</li> <li>B\u00fasqueda instant\u00e1nea con highlighting</li> <li>Export de datos en m\u00faltiples formatos</li> </ul> <ul> <li>Configuraci\u00f3n de usuario y preferencias</li> <li>Gesti\u00f3n de notificaciones y alertas</li> <li>Configuraci\u00f3n de dashboard personalizable</li> </ul>"},{"location":"frontend/features/#diseno-y-ux","title":"\ud83c\udfa8 Dise\u00f1o y UX","text":""},{"location":"frontend/features/#caracteristicas-de-diseno","title":"Caracter\u00edsticas de Dise\u00f1o","text":"<ul> <li>Design System consistente con shadcn/ui</li> <li>Modo oscuro nativo con persistencia</li> <li>Animaciones suaves con Framer Motion</li> <li>Layout responsivo con Tailwind CSS</li> <li>Accesibilidad completa (a11y)</li> </ul>"},{"location":"frontend/features/#componentes-ui-clave","title":"Componentes UI Clave","text":"<pre><code>// Ejemplo de componente de m\u00e9tricas\nconst MetricsCard = ({ title, value, trend, icon }) =&gt; (\n  &lt;Card className=\"p-6\"&gt;\n    &lt;div className=\"flex items-center justify-between\"&gt;\n      &lt;div&gt;\n        &lt;p className=\"text-sm font-medium text-muted-foreground\"&gt;{title}&lt;/p&gt;\n        &lt;p className=\"text-2xl font-bold\"&gt;{value}&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div className=\"h-8 w-8 text-muted-foreground\"&gt;\n        {icon}\n      &lt;/div&gt;\n    &lt;/div&gt;\n    {trend &amp;&amp; (\n      &lt;div className=\"mt-4 flex items-center text-sm\"&gt;\n        &lt;TrendingUp className=\"mr-1 h-3 w-3\" /&gt;\n        &lt;span className=\"text-green-600\"&gt;+{trend}%&lt;/span&gt;\n        &lt;span className=\"text-muted-foreground ml-1\"&gt;from last month&lt;/span&gt;\n      &lt;/div&gt;\n    )}\n  &lt;/Card&gt;\n)\n</code></pre> <p>Navegaci\u00f3n</p> <ul> <li>Auth Pages: Login y registro con transiciones</li> <li>Dashboard: Vista principal con m\u00e9tricas</li> <li>Jails: Gesti\u00f3n detallada de fail2ban</li> <li>Logs: Monitoreo en tiempo real</li> <li>Settings: Configuraci\u00f3n personalizada</li> </ul>"},{"location":"security/best-practices/","title":"\ud83d\udd10 Mejores Pr\u00e1cticas de Seguridad","text":""},{"location":"security/best-practices/#configuracion-del-servidor","title":"Configuraci\u00f3n del Servidor","text":""},{"location":"security/best-practices/#ssh-security","title":"SSH Security","text":"<pre><code># Configuraci\u00f3n SSH segura\n# /etc/ssh/sshd_config\nPort 22\nProtocol 2\nPasswordAuthentication no\nPubkeyAuthentication yes\nPermitRootLogin no\nMaxAuthTries 3\nClientAliveInterval 300\nAllowUsers makuno\n</code></pre>"},{"location":"security/best-practices/#firewall-configuration","title":"Firewall Configuration","text":"<pre><code># Configuraci\u00f3n UFW restrictiva\nsudo ufw --force reset\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n\n# Solo puertos necesarios\nsudo ufw allow from TU_IP_ADMIN to any port 22\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\nsudo ufw enable\n</code></pre>"},{"location":"security/best-practices/#seguridad-de-contenedores","title":"Seguridad de Contenedores","text":""},{"location":"security/best-practices/#docker-security","title":"Docker Security","text":"<pre><code># docker-compose.yaml - Configuraci\u00f3n segura\nservices:\n  api:\n    # No privilegios de root\n    user: \"1000:1000\"\n\n    # Read-only filesystem\n    read_only: true\n\n    # L\u00edmites de recursos\n    deploy:\n      resources:\n        limits:\n          memory: 512M\n          cpus: '0.5'\n\n    # Security options\n    security_opt:\n      - no-new-privileges:true\n\n    # Capabilities m\u00ednimas\n    cap_drop:\n      - ALL\n</code></pre>"},{"location":"security/best-practices/#volumenes-seguros","title":"Vol\u00famenes Seguros","text":"<pre><code>volumes:\n  # Read-only mounts cuando sea posible\n  - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n  - /var/run/fail2ban/fail2ban.sock:/var/run/fail2ban/fail2ban.sock:ro\n</code></pre>"},{"location":"security/best-practices/#monitoreo-y-auditoria","title":"Monitoreo y Auditor\u00eda","text":""},{"location":"security/best-practices/#script-de-auditoria-diaria","title":"Script de Auditor\u00eda Diaria","text":"<pre><code>#!/bin/bash\n# daily-security-audit.sh\n\necho \"=== AUDITOR\u00cdA DE SEGURIDAD DIARIA ===\"\n\n# 1. Verificar servicios cr\u00edticos\nfor service in ssh fail2ban caddy docker; do\n    if systemctl is-active --quiet $service; then\n        echo \"\u2705 $service: ACTIVO\"\n    else\n        echo \"\u274c $service: INACTIVO\"\n    fi\ndone\n\n# 2. Verificar intentos SSH fallidos\necho \"\ud83d\udd0d Intentos SSH fallidos (\u00faltimas 24h):\"\ngrep \"Failed password\" /var/log/auth.log | grep \"$(date '+%b %d')\" | wc -l\n\n# 3. Verificar IPs baneadas\necho \"\ud83d\udee1\ufe0f IPs baneadas actualmente:\"\nsudo fail2ban-client status sshd | grep \"Currently banned\"\n\n# 4. Verificar certificado SSL\necho \"\ud83d\udd12 Estado certificado SSL:\"\ndays_until_expiry=$(openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -checkend 604800)\nif [ $? -eq 0 ]; then\n    echo \"\u2705 Certificado v\u00e1lido (&gt;7 d\u00edas)\"\nelse\n    echo \"\u26a0\ufe0f Certificado expira pronto\"\nfi\n\n# 5. Verificar actualizaciones de seguridad\necho \"\ud83d\udce6 Actualizaciones de seguridad disponibles:\"\napt list --upgradable 2&gt;/dev/null | grep -i security | wc -l\n</code></pre>"},{"location":"security/best-practices/#alertas-automaticas","title":"Alertas Autom\u00e1ticas","text":"<pre><code># Configurar en crontab: 0 6 * * * /path/to/security-alerts.sh\n#!/bin/bash\n# security-alerts.sh\n\n# Verificar eventos cr\u00edticos\nCRITICAL_EVENTS=$(grep -E \"(Ban|CRITICAL|ERROR)\" /var/log/fail2ban.log | grep \"$(date '+%Y-%m-%d')\" | wc -l)\n\nif [ $CRITICAL_EVENTS -gt 5 ]; then\n    echo \"ALERTA: $CRITICAL_EVENTS eventos cr\u00edticos detectados\" | mail -s \"Alerta de Seguridad\" admin@tudominio.com\nfi\n</code></pre>"},{"location":"security/best-practices/#checklist-de-seguridad","title":"Checklist de Seguridad","text":""},{"location":"security/best-practices/#configuracion-inicial","title":"Configuraci\u00f3n Inicial","text":"<ul> <li>[ ] SSH configurado solo con claves</li> <li>[ ] Firewall configurado (ufw + Cloud Firewall)</li> <li>[ ] Fail2ban instalado y configurado</li> <li>[ ] Usuario no-root creado</li> <li>[ ] Actualizaciones del sistema aplicadas</li> </ul>"},{"location":"security/best-practices/#configuracion-web","title":"Configuraci\u00f3n Web","text":"<ul> <li>[ ] Certificado SSL v\u00e1lido</li> <li>[ ] Security headers configurados</li> <li>[ ] Rate limiting habilitado</li> <li>[ ] Puerto 8000 no expuesto p\u00fablicamente</li> </ul>"},{"location":"security/best-practices/#monitoreo","title":"Monitoreo","text":"<ul> <li>[ ] Logs centralizados en Loki</li> <li>[ ] Alertas configuradas</li> <li>[ ] Backup de configuraciones</li> <li>[ ] Scripts de auditor\u00eda programados</li> </ul> <p>Nunca Hacer</p> <ul> <li>Exponer puerto 8000 directamente</li> <li>Usar contrase\u00f1as para SSH</li> <li>Ejecutar contenedores como root</li> <li>Ignorar alertas de seguridad</li> </ul> <p>Mantenimiento Regular</p> <ul> <li>Revisar logs semanalmente</li> <li>Actualizar sistema mensualmente</li> <li>Auditar configuraci\u00f3n trimestralmente</li> <li>Backup de configuraciones antes de cambios</li> </ul>"},{"location":"security/fail2ban/","title":"\ud83d\udee1\ufe0f Configuraci\u00f3n de Fail2ban","text":""},{"location":"security/fail2ban/#configuracion-principal","title":"Configuraci\u00f3n Principal","text":""},{"location":"security/fail2ban/#archivo-jaillocal","title":"Archivo jail.local","text":"<pre><code># /etc/fail2ban/jail.local\n[DEFAULT]\n# IPs que nunca ser\u00e1n baneadas\nignoreip = 127.0.0.1/8 ::1 TU_IP_ADMIN\n\n# Configuraci\u00f3n de baneos escalonados\nbantime = 3600          # 1 hora inicial\nbantime.increment = true\nbantime.factor = 2      # Duplicar tiempo cada reincidencia\nbantime.multipliers = 2 4 8 16 32 64\nbantime.maxtime = 86400 # M\u00e1ximo 24 horas\n\n# Ventana de tiempo para contar fallos\nfindtime = 600          # 10 minutos\n\n# N\u00famero m\u00e1ximo de intentos\nmaxretry = 5\n\n# Configuraci\u00f3n de notificaciones\ndestemail = admin@tudominio.com\nsendername = Fail2ban-Alert\nmta = sendmail\naction = %(action_mwl)s\n\n[sshd]\nenabled = true\nport = ssh\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 86400\nfindtime = 600\n\n[caddy]\nenabled = true\nport = http,https\nfilter = caddy\nlogpath = /var/log/caddy/access.log\nmaxretry = 10\nbantime = 3600\nfindtime = 600\n</code></pre>"},{"location":"security/fail2ban/#filtros-personalizados","title":"Filtros Personalizados","text":""},{"location":"security/fail2ban/#filtro-para-caddy","title":"Filtro para Caddy","text":"<pre><code># /etc/fail2ban/filter.d/caddy.conf\n[Definition]\nfailregex = ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"status\":(?:401|403|404|429).*$\n            ^.*&lt;HOST&gt;.*\"GET \\/\\.env.*$\n            ^.*&lt;HOST&gt;.*\"GET \\/wp-admin.*$\n            ^.*&lt;HOST&gt;.*\"POST \\/.*\\.php.*$\n\nignoreregex =\n\n[Init]\ndatepattern = ^\"ts\":\"%%Y-%%m-%%dT%%H:%%M:%%S\\.%%fZ\"\n</code></pre>"},{"location":"security/fail2ban/#comandos-utiles","title":"Comandos \u00datiles","text":""},{"location":"security/fail2ban/#gestion-de-jails","title":"Gesti\u00f3n de Jails","text":"<pre><code># Ver estado general\nsudo fail2ban-client status\n\n# Ver estado espec\u00edfico de jail\nsudo fail2ban-client status sshd\n\n# Banear IP manualmente\nsudo fail2ban-client set sshd banip 192.168.1.100\n\n# Desbanear IP\nsudo fail2ban-client set sshd unbanip 192.168.1.100\n\n# Recargar configuraci\u00f3n\nsudo fail2ban-client reload\n</code></pre>"},{"location":"security/fail2ban/#monitoreo","title":"Monitoreo","text":"<pre><code># Ver logs de fail2ban\nsudo tail -f /var/log/fail2ban.log\n\n# IPs baneadas actualmente\nsudo fail2ban-client banned\n\n# Estad\u00edsticas por jail\nsudo fail2ban-client status sshd | grep \"Currently banned\"\n</code></pre> <p>Importante</p> <ul> <li>Cambiar <code>TU_IP_ADMIN</code> por tu IP real</li> <li>Verificar filtros antes de activar</li> <li>Mantener logs de respaldo</li> </ul>"},{"location":"security/overview/","title":"\ud83d\udd12 Seguridad del Sistema","text":""},{"location":"security/overview/#modelo-de-seguridad","title":"Modelo de Seguridad","text":""},{"location":"security/overview/#principios-de-diseno","title":"Principios de Dise\u00f1o","text":"<p>Arquitectura de Seguridad</p> <ul> <li>\ud83d\udee1\ufe0f Defensa en Profundidad: M\u00faltiples capas de protecci\u00f3n</li> <li>\ud83d\udd10 Principio de Menor Privilegio: Acceso m\u00ednimo necesario</li> <li>\ud83d\udeab Fail-Safe Defaults: Configuraci\u00f3n segura por defecto</li> <li>\ud83d\udd0d Monitoreo Continuo: Detecci\u00f3n proactiva de amenazas</li> <li>\ud83d\udd04 Segregaci\u00f3n de Red: Aislamiento de componentes cr\u00edticos</li> </ul>"},{"location":"security/overview/#capas-de-seguridad","title":"Capas de Seguridad","text":"<pre><code>graph TB\n    subgraph \"Internet\"\n        ATTACKER[\ud83d\udd34 Atacante]\n    end\n\n    subgraph \"Capa 1: Cloud Firewall\"\n        CF[\u2601\ufe0f DigitalOcean Firewall&lt;br/&gt;22, 80, 443]\n    end\n\n    subgraph \"Capa 2: Host Security\"\n        UFW[\ud83d\udd25 UFW Firewall]\n        SSH[\ud83d\udd11 SSH Hardened]\n        F2B[\ud83d\udee1\ufe0f Fail2ban IPS]\n    end\n\n    subgraph \"Capa 3: Web Security\"\n        CADDY[\ud83d\udd12 Caddy SSL/TLS&lt;br/&gt;Security Headers]\n        RATE[\u23f1\ufe0f Rate Limiting]\n    end\n\n    subgraph \"Capa 4: Application\"\n        API[\u2699\ufe0f FastAPI&lt;br/&gt;Input Validation]\n        AUTH[\ud83c\udfab Authentication]\n    end\n\n    subgraph \"Capa 5: Container\"\n        DOCKER[\ud83d\udc33 Docker Isolation]\n        VOLUMES[\ud83d\udcbe Read-only Mounts]\n    end\n\n    ATTACKER --&gt; CF\n    CF --&gt; UFW\n    UFW --&gt; SSH\n    SSH --&gt; F2B\n    F2B --&gt; CADDY\n    CADDY --&gt; RATE\n    RATE --&gt; API\n    API --&gt; AUTH\n    AUTH --&gt; DOCKER\n    DOCKER --&gt; VOLUMES</code></pre>"},{"location":"security/overview/#vectores-de-ataque-y-mitigaciones","title":"\ud83c\udfaf Vectores de Ataque y Mitigaciones","text":""},{"location":"security/overview/#ataques-comunes","title":"Ataques Comunes","text":"Fuerza Bruta SSHWeb Application AttacksDoS/DDoS <p>Mitigaci\u00f3n: - SSH key-only authentication - Fail2ban con baneos autom\u00e1ticos - Rate limiting en Cloud Firewall</p> <p>Mitigaci\u00f3n: - Security headers HTTP - Input validation en API - Rate limiting por IP</p> <p>Mitigaci\u00f3n: - DigitalOcean DDoS protection - Rate limiting en m\u00faltiples capas - Resource limits en contenedores</p>"},{"location":"security/overview/#matriz-de-riesgos","title":"Matriz de Riesgos","text":"Amenaza Probabilidad Impacto Riesgo Mitigaci\u00f3n SSH Brute Force Alta Alto \ud83d\udd34 Cr\u00edtico Fail2ban + SSH hardening Web Scraping Media Bajo \ud83d\udfe1 Medio Rate limiting Container Escape Baja Alto \ud83d\udfe1 Medio Docker security + monitoring SSL/TLS Attacks Baja Medio \ud83d\udfe2 Bajo TLS 1.3 + HSTS"},{"location":"security/overview/#configuracion-de-seguridad","title":"\ud83d\udd10 Configuraci\u00f3n de Seguridad","text":""},{"location":"security/overview/#ssltls","title":"SSL/TLS","text":"<pre><code># Configuraci\u00f3n SSL segura\n{\n    email admin@tudominio.com\n\n    # Configuraci\u00f3n TLS\n    tls {\n        protocols tls1.2 tls1.3\n        ciphers TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256 TLS_AES_128_GCM_SHA256\n    }\n}\n</code></pre>"},{"location":"security/overview/#security-headers","title":"Security Headers","text":"<pre><code>header {\n    # HSTS - Forzar HTTPS\n    Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n\n    # Prevenir clickjacking\n    X-Frame-Options \"DENY\"\n\n    # Prevenir MIME sniffing\n    X-Content-Type-Options \"nosniff\"\n\n    # XSS Protection\n    X-XSS-Protection \"1; mode=block\"\n\n    # CSP\n    Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'\"\n\n    # Referrer Policy\n    Referrer-Policy \"strict-origin-when-cross-origin\"\n\n    # Permissions Policy\n    Permissions-Policy \"camera=(), microphone=(), geolocation=()\"\n}\n</code></pre>"},{"location":"security/overview/#deteccion-de-intrusiones","title":"\ud83d\udea8 Detecci\u00f3n de Intrusiones","text":""},{"location":"security/overview/#fail2ban-configuracion","title":"Fail2ban Configuraci\u00f3n","text":"<pre><code># Configuraci\u00f3n optimizada para detecci\u00f3n\n[DEFAULT]\n# IPs a ignorar (tu IP de administraci\u00f3n)\nignoreip = 127.0.0.1/8 ::1 TU_IP_ADMIN\n\n# Configuraci\u00f3n de baneos escalonados\nbantime = 3600\nbantime.increment = true\nbantime.factor = 2\nbantime.maxtime = 86400\n\n[sshd]\nenabled = true\nmaxretry = 3\nfindtime = 600\nbantime = 86400\n</code></pre>"},{"location":"security/overview/#monitoreo-de-logs","title":"Monitoreo de Logs","text":"<pre><code># Script de alertas de seguridad\n#!/bin/bash\n# security-alerts.sh\n\n# Verificar intentos SSH fallidos\nSSH_ATTEMPTS=$(grep \"Failed password\" /var/log/auth.log | wc -l)\nif [ $SSH_ATTEMPTS -gt 10 ]; then\n    echo \"ALERTA: $SSH_ATTEMPTS intentos SSH fallidos detectados\"\nfi\n\n# Verificar nuevos baneos\nNEW_BANS=$(grep \"Ban \" /var/log/fail2ban.log | grep \"$(date '+%Y-%m-%d')\" | wc -l)\nif [ $NEW_BANS -gt 0 ]; then\n    echo \"INFO: $NEW_BANS nuevas IPs baneadas hoy\"\nfi\n</code></pre> <p>Configuraciones Cr\u00edticas</p> <ul> <li>Cambiar IPs por defecto en todas las configuraciones</li> <li>Mantener actualizaciones de seguridad al d\u00eda</li> <li>Monitorear logs regularmente</li> <li>Backup de configuraciones de seguridad</li> </ul> <p>Mejores Pr\u00e1cticas</p> <ul> <li>Usar autenticaci\u00f3n por claves SSH \u00fanicamente</li> <li>Implementar rate limiting en todas las capas</li> <li>Monitorear m\u00e9tricas de seguridad continuamente</li> <li>Mantener logs centralizados y seguros</li> </ul>"},{"location":"security/ssl-tls/","title":"\ud83d\udd12 Configuraci\u00f3n SSL/TLS","text":""},{"location":"security/ssl-tls/#configuracion-caddy-ssl","title":"Configuraci\u00f3n Caddy SSL","text":""},{"location":"security/ssl-tls/#configuracion-automatica","title":"Configuraci\u00f3n Autom\u00e1tica","text":"<pre><code># /etc/caddy/Caddyfile\n{\n    # Email para Let's Encrypt\n    email admin@tudominio.com\n\n    # Configuraci\u00f3n TLS avanzada\n    tls {\n        protocols tls1.2 tls1.3\n        ciphers TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256\n    }\n\n    # Configuraci\u00f3n ACME\n    acme_ca https://acme-v02.api.letsencrypt.org/directory\n}\n\nalertasfail2ban.xmakuno.com {\n    reverse_proxy localhost:8000\n\n    # Security headers\n    header {\n        Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n        X-Frame-Options \"DENY\"\n        X-Content-Type-Options \"nosniff\"\n        X-XSS-Protection \"1; mode=block\"\n    }\n}\n</code></pre>"},{"location":"security/ssl-tls/#verificacion-ssl","title":"Verificaci\u00f3n SSL","text":""},{"location":"security/ssl-tls/#comandos-de-verificacion","title":"Comandos de Verificaci\u00f3n","text":"<pre><code># Verificar certificado\nopenssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443\n\n# Verificar fechas de expiraci\u00f3n\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates\n\n# Test de SSL Labs (desde web)\n# https://www.ssllabs.com/ssltest/\n\n# Verificar headers de seguridad\ncurl -I https://alertasfail2ban.xmakuno.com\n</code></pre>"},{"location":"security/ssl-tls/#renovacion-automatica","title":"Renovaci\u00f3n Autom\u00e1tica","text":"<pre><code># Caddy maneja renovaci\u00f3n autom\u00e1tica\n# Verificar logs de renovaci\u00f3n\nsudo journalctl -u caddy | grep -i \"certificate\"\n\n# Forzar renovaci\u00f3n si es necesario\nsudo caddy reload --config /etc/caddy/Caddyfile\n</code></pre> <p>Configuraci\u00f3n \u00d3ptima</p> <ul> <li>TLS 1.2 y 1.3 \u00fanicamente</li> <li>HSTS habilitado con preload</li> <li>Renovaci\u00f3n autom\u00e1tica configurada</li> <li>Grade A+ en SSL Labs</li> </ul>"},{"location":"servicios/api/","title":"\u2699\ufe0f FastAPI Backend","text":""},{"location":"servicios/api/#introduccion","title":"Introducci\u00f3n","text":"<p>FastAPI es el n\u00facleo backend del sistema que proporciona la API REST, WebSockets para tiempo real, y la interfaz web. Act\u00faa como el orquestador central que conecta todos los servicios y expone la funcionalidad a trav\u00e9s de endpoints HTTP.</p>"},{"location":"servicios/api/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/api/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de FastAPI</p> <ul> <li>\ud83c\udf10 API REST Completa: Endpoints para gesti\u00f3n de jails, logs y estad\u00edsticas</li> <li>\u26a1 WebSockets: Streaming de logs en tiempo real</li> <li>\ud83d\udcda Documentaci\u00f3n Autom\u00e1tica: Swagger UI y ReDoc generados autom\u00e1ticamente</li> <li>\ud83d\udd17 Integraci\u00f3n Multi-servicio: Conecta Fail2ban, Loki y servicios externos</li> <li>\ud83c\udfa8 Interfaz Web: Dashboard completo servido desde el mismo backend</li> <li>\ud83d\udee1\ufe0f Validaci\u00f3n de Datos: Validaci\u00f3n autom\u00e1tica con Pydantic</li> <li>\ud83d\udcca M\u00e9tricas y Monitoreo: Endpoints de health check y m\u00e9tricas</li> </ul>"},{"location":"servicios/api/#arquitectura-de-la-api","title":"Arquitectura de la API","text":"<pre><code>graph TB\n    subgraph \"Cliente\"\n        WEB[\ud83c\udf10 Dashboard Web]\n        API_CLIENT[\ud83d\udcf1 API Clients]\n        CURL[\ud83d\udcbb CLI/cURL]\n    end\n\n    subgraph \"FastAPI Application\"\n        ROUTER[\ud83d\udd00 Router Principal]\n\n        subgraph \"Controllers\"\n            LOGS_CTRL[\ud83d\udcdd Logs Controller]\n            JAILS_CTRL[\ud83c\udfe2 Jails Controller]\n            STATS_CTRL[\ud83d\udcca Stats Controller]\n            WS_CTRL[\u26a1 WebSocket Controller]\n        end\n\n        subgraph \"Services\"\n            LOKI_SRV[\ud83d\uddc4\ufe0f Loki Service]\n            F2B_SRV[\ud83d\udee1\ufe0f Fail2ban Service]\n            WS_SRV[\ud83d\udce1 WebSocket Service]\n        end\n\n        subgraph \"Middleware\"\n            CORS[\ud83d\udd10 CORS]\n            AUTH[\ud83d\udd11 Authentication]\n            LOGGING[\ud83d\udcca Request Logging]\n            RATE_LIMIT[\u23f1\ufe0f Rate Limiting]\n        end\n    end\n\n    subgraph \"External Services\"\n        LOKI[\ud83d\uddc4\ufe0f Loki Database]\n        F2B[\ud83d\udee1\ufe0f Fail2ban Socket]\n        FS[\ud83d\udcc1 File System]\n    end\n\n    WEB --&gt; ROUTER\n    API_CLIENT --&gt; ROUTER\n    CURL --&gt; ROUTER\n\n    ROUTER --&gt; CORS\n    CORS --&gt; AUTH\n    AUTH --&gt; RATE_LIMIT\n    RATE_LIMIT --&gt; LOGGING\n\n    LOGGING --&gt; LOGS_CTRL\n    LOGGING --&gt; JAILS_CTRL\n    LOGGING --&gt; STATS_CTRL\n    LOGGING --&gt; WS_CTRL\n\n    LOGS_CTRL --&gt; LOKI_SRV\n    JAILS_CTRL --&gt; F2B_SRV\n    STATS_CTRL --&gt; LOKI_SRV\n    STATS_CTRL --&gt; F2B_SRV\n    WS_CTRL --&gt; WS_SRV\n\n    LOKI_SRV --&gt; LOKI\n    F2B_SRV --&gt; F2B\n    WS_SRV --&gt; LOKI</code></pre>"},{"location":"servicios/api/#estructura-del-proyecto","title":"\ud83d\udcc1 Estructura del Proyecto","text":""},{"location":"servicios/api/#organizacion-de-archivos","title":"Organizaci\u00f3n de Archivos","text":"<pre><code>api/\n\u251c\u2500\u2500 main.py                     # Aplicaci\u00f3n principal FastAPI\n\u251c\u2500\u2500 Dockerfile                  # Configuraci\u00f3n Docker\n\u251c\u2500\u2500 requirements.txt            # Dependencias Python\n\u251c\u2500\u2500 .env                       # Variables de entorno\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 controllers/               # Endpoints REST organizados\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 logs_controller.py     # Endpoints de logs\n\u2502   \u251c\u2500\u2500 jails_controller.py    # Endpoints de jails\n\u2502   \u251c\u2500\u2500 stats_controller.py    # Endpoints de estad\u00edsticas\n\u2502   \u251c\u2500\u2500 websocket_controller.py # WebSocket endpoints\n\u2502   \u2514\u2500\u2500 health_controller.py   # Health checks\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 services/                  # L\u00f3gica de negocio\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 loki_service.py        # Integraci\u00f3n con Loki\n\u2502   \u251c\u2500\u2500 fail2ban_service.py    # Integraci\u00f3n con Fail2ban\n\u2502   \u251c\u2500\u2500 websocket_service.py   # Gesti\u00f3n de WebSockets\n\u2502   \u2514\u2500\u2500 cache_service.py       # Cache y optimizaci\u00f3n\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 data/                      # Modelos de datos\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 log_models.py          # Modelos para logs\n\u2502   \u251c\u2500\u2500 jail_models.py         # Modelos para jails\n\u2502   \u251c\u2500\u2500 stats_models.py        # Modelos para estad\u00edsticas\n\u2502   \u2514\u2500\u2500 response_models.py     # Modelos de respuesta\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 configuration/             # Configuraci\u00f3n de la app\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 settings.py            # Configuraci\u00f3n principal\n\u2502   \u251c\u2500\u2500 database.py            # Configuraci\u00f3n de BD (futuro)\n\u2502   \u2514\u2500\u2500 middleware.py          # Middleware personalizado\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 utils/                     # Utilidades comunes\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 logger.py              # Configuraci\u00f3n de logging\n\u2502   \u251c\u2500\u2500 validators.py          # Validadores personalizados\n\u2502   \u2514\u2500\u2500 helpers.py             # Funciones auxiliares\n\u251c\u2500\u2500 \n\u251c\u2500\u2500 static/                    # Archivos est\u00e1ticos\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u2502   \u251c\u2500\u2500 main.css\n\u2502   \u2502   \u2514\u2500\u2500 dashboard.css\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2502   \u251c\u2500\u2500 main.js\n\u2502   \u2502   \u251c\u2500\u2500 dashboard.js\n\u2502   \u2502   \u2514\u2500\u2500 websocket.js\n\u2502   \u2514\u2500\u2500 img/\n\u2502       \u2514\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 \n\u2514\u2500\u2500 templates/                 # Templates HTML\n    \u251c\u2500\u2500 base.html              # Template base\n    \u251c\u2500\u2500 dashboard.html         # Dashboard principal\n    \u251c\u2500\u2500 logs.html              # Vista de logs\n    \u2514\u2500\u2500 jails.html             # Vista de jails\n</code></pre>"},{"location":"servicios/api/#configuracion","title":"\u2699\ufe0f Configuraci\u00f3n","text":""},{"location":"servicios/api/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># configuration/settings.py\nfrom pydantic_settings import BaseSettings\nfrom typing import Optional\nimport os\n\nclass Settings(BaseSettings):\n    # Configuraci\u00f3n de la aplicaci\u00f3n\n    app_name: str = \"Fail2ban Dashboard API\"\n    app_version: str = \"1.0.0\"\n    debug: bool = False\n\n    # Configuraci\u00f3n del servidor\n    host: str = \"0.0.0.0\"\n    port: int = 8000\n    reload: bool = False\n\n    # Configuraci\u00f3n de Loki\n    loki_url: str = \"http://loki:3100\"\n    loki_query_url: str = \"http://loki:3100/loki/api/v1/query_range\"\n    loki_ws_url: str = \"ws://loki:3100/loki/api/v1/tail\"\n    loki_timeout: int = 30\n\n    # Configuraci\u00f3n de Fail2ban\n    fail2ban_socket_path: str = \"/var/run/fail2ban/fail2ban.sock\"\n    fail2ban_log_path: str = \"/var/log/fail2ban.log\"\n    fail2ban_timeout: int = 10\n\n    # Configuraci\u00f3n de logging\n    log_level: str = \"INFO\"\n    log_format: str = \"json\"\n    log_file: Optional[str] = None\n\n    # Configuraci\u00f3n de CORS\n    cors_origins: list = [\"*\"]\n    cors_credentials: bool = True\n    cors_methods: list = [\"*\"]\n    cors_headers: list = [\"*\"]\n\n    # Configuraci\u00f3n de rate limiting\n    rate_limit_requests: int = 100\n    rate_limit_window: int = 60  # segundos\n\n    # Configuraci\u00f3n de cache\n    cache_ttl: int = 300  # 5 minutos\n    cache_max_size: int = 1000\n\n    # Configuraci\u00f3n de dominio\n    domain_name: str = \"alertasfail2ban.xmakuno.com\"\n    api_base_url: str = \"https://alertasfail2ban.xmakuno.com\"\n\n    # Configuraci\u00f3n de seguridad\n    secret_key: str = \"change-this-in-production\"\n    access_token_expire_minutes: int = 30\n\n    class Config:\n        env_file = \".env\"\n        case_sensitive = False\n\n# Instancia global de configuraci\u00f3n\nsettings = Settings()\n</code></pre>"},{"location":"servicios/api/#aplicacion-principal","title":"Aplicaci\u00f3n Principal","text":"<pre><code># main.py\nfrom fastapi import FastAPI, Request\nfrom fastapi.staticfiles import StaticFiles\nfrom fastapi.templating import Jinja2Templates\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom fastapi.middleware.gzip import GZipMiddleware\nimport uvicorn\nimport logging\n\nfrom configuration.settings import settings\nfrom configuration.middleware import LoggingMiddleware, RateLimitMiddleware\nfrom controllers import (\n    logs_controller,\n    jails_controller, \n    stats_controller,\n    websocket_controller,\n    health_controller\n)\nfrom utils.logger import setup_logging\n\n# Configurar logging\nsetup_logging()\nlogger = logging.getLogger(__name__)\n\n# Crear aplicaci\u00f3n FastAPI\napp = FastAPI(\n    title=settings.app_name,\n    version=settings.app_version,\n    description=\"API para monitoreo y gesti\u00f3n de Fail2ban\",\n    docs_url=\"/docs\" if settings.debug else None,\n    redoc_url=\"/redoc\" if settings.debug else None,\n    openapi_url=\"/openapi.json\" if settings.debug else None,\n)\n\n# Configurar middleware\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=settings.cors_origins,\n    allow_credentials=settings.cors_credentials,\n    allow_methods=settings.cors_methods,\n    allow_headers=settings.cors_headers,\n)\n\napp.add_middleware(GZipMiddleware, minimum_size=1000)\napp.add_middleware(LoggingMiddleware)\napp.add_middleware(RateLimitMiddleware)\n\n# Montar archivos est\u00e1ticos\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n\n# Configurar templates\ntemplates = Jinja2Templates(directory=\"templates\")\n\n# Incluir routers\napp.include_router(health_controller.router)\napp.include_router(logs_controller.router)\napp.include_router(jails_controller.router)\napp.include_router(stats_controller.router)\napp.include_router(websocket_controller.router)\n\n# Ruta principal - Dashboard\n@app.get(\"/\")\nasync def dashboard(request: Request):\n    \"\"\"P\u00e1gina principal del dashboard\"\"\"\n    return templates.TemplateResponse(\"dashboard.html\", {\n        \"request\": request,\n        \"title\": \"Fail2ban Dashboard\",\n        \"api_base_url\": settings.api_base_url\n    })\n\n# Ruta de informaci\u00f3n de la API\n@app.get(\"/info\")\nasync def api_info():\n    \"\"\"Informaci\u00f3n general de la API\"\"\"\n    return {\n        \"name\": settings.app_name,\n        \"version\": settings.app_version,\n        \"description\": \"API REST para monitoreo de seguridad con Fail2ban\",\n        \"endpoints\": {\n            \"health\": \"/health\",\n            \"logs\": \"/api/logs\",\n            \"jails\": \"/api/jails\", \n            \"stats\": \"/api/stats\",\n            \"websocket\": \"/ws\",\n            \"documentation\": \"/docs\" if settings.debug else \"disabled\"\n        }\n    }\n\n# Manejador de eventos de inicio\n@app.on_event(\"startup\")\nasync def startup_event():\n    \"\"\"Inicializaci\u00f3n de la aplicaci\u00f3n\"\"\"\n    logger.info(f\"Iniciando {settings.app_name} v{settings.app_version}\")\n    logger.info(f\"Configuraci\u00f3n: Debug={settings.debug}, Host={settings.host}:{settings.port}\")\n\n    # Verificar conectividad con servicios externos\n    from services.loki_service import LokiService\n    from services.fail2ban_service import Fail2banService\n\n    loki_service = LokiService()\n    fail2ban_service = Fail2banService()\n\n    # Test de conectividad\n    try:\n        await loki_service.health_check()\n        logger.info(\"\u2705 Conexi\u00f3n con Loki establecida\")\n    except Exception as e:\n        logger.warning(f\"\u26a0\ufe0f No se pudo conectar con Loki: {e}\")\n\n    try:\n        fail2ban_service.get_status()\n        logger.info(\"\u2705 Conexi\u00f3n con Fail2ban establecida\")\n    except Exception as e:\n        logger.warning(f\"\u26a0\ufe0f No se pudo conectar con Fail2ban: {e}\")\n\n# Manejador de eventos de cierre\n@app.on_event(\"shutdown\")\nasync def shutdown_event():\n    \"\"\"Limpieza al cerrar la aplicaci\u00f3n\"\"\"\n    logger.info(f\"Cerrando {settings.app_name}\")\n\nif __name__ == \"__main__\":\n    uvicorn.run(\n        \"main:app\",\n        host=settings.host,\n        port=settings.port,\n        reload=settings.reload,\n        log_level=settings.log_level.lower(),\n        access_log=True,\n        proxy_headers=True,\n        forwarded_allow_ips=\"*\"\n    )\n</code></pre>"},{"location":"servicios/api/#endpoints-de-la-api","title":"\ud83d\udce1 Endpoints de la API","text":""},{"location":"servicios/api/#controlador-de-logs","title":"Controlador de Logs","text":"<pre><code># controllers/logs_controller.py\nfrom fastapi import APIRouter, HTTPException, Query, Depends\nfrom typing import Optional, List\nfrom datetime import datetime, timedelta\nimport logging\n\nfrom services.loki_service import LokiService\nfrom data.log_models import LogEntry, LogQuery, LogResponse\nfrom utils.validators import validate_time_range, validate_log_level\n\nrouter = APIRouter(prefix=\"/api/logs\", tags=[\"logs\"])\nlogger = logging.getLogger(__name__)\n\ndef get_loki_service() -&gt; LokiService:\n    return LokiService()\n\n@router.get(\"/\", response_model=LogResponse)\nasync def get_logs(\n    start_time: Optional[str] = Query(None, description=\"Fecha inicio (ISO format)\"),\n    end_time: Optional[str] = Query(None, description=\"Fecha fin (ISO format)\"),\n    jail: Optional[str] = Query(None, description=\"Filtrar por jail espec\u00edfico\"),\n    level: Optional[str] = Query(None, description=\"Nivel de log (INFO, WARNING, ERROR)\"),\n    limit: int = Query(100, ge=1, le=1000, description=\"N\u00famero m\u00e1ximo de resultados\"),\n    search: Optional[str] = Query(None, description=\"Buscar texto en logs\"),\n    loki_service: LokiService = Depends(get_loki_service)\n) -&gt; LogResponse:\n    \"\"\"\n    Obtener logs de Fail2ban con filtros opcionales\n\n    - **start_time**: Fecha de inicio en formato ISO (ej: 2024-01-20T10:00:00Z)\n    - **end_time**: Fecha de fin en formato ISO\n    - **jail**: Filtrar por jail espec\u00edfico (sshd, caddy, etc.)\n    - **level**: Nivel de log (INFO, WARNING, ERROR, DEBUG)\n    - **limit**: N\u00famero m\u00e1ximo de resultados (1-1000)\n    - **search**: Buscar texto espec\u00edfico en los logs\n    \"\"\"\n    try:\n        # Validar y establecer tiempos por defecto\n        if not end_time:\n            end_time = datetime.utcnow()\n        else:\n            end_time = datetime.fromisoformat(end_time.replace('Z', '+00:00'))\n\n        if not start_time:\n            start_time = end_time - timedelta(hours=24)  # \u00daltimo d\u00eda por defecto\n        else:\n            start_time = datetime.fromisoformat(start_time.replace('Z', '+00:00'))\n\n        # Validar rango de tiempo\n        validate_time_range(start_time, end_time)\n\n        # Validar nivel de log\n        if level:\n            validate_log_level(level)\n\n        # Crear query para Loki\n        query_params = LogQuery(\n            start_time=start_time,\n            end_time=end_time,\n            jail=jail,\n            level=level,\n            limit=limit,\n            search=search\n        )\n\n        # Ejecutar consulta\n        logs = await loki_service.query_logs(query_params)\n\n        return LogResponse(\n            logs=logs,\n            total=len(logs),\n            start_time=start_time,\n            end_time=end_time,\n            filters={\n                \"jail\": jail,\n                \"level\": level,\n                \"search\": search\n            }\n        )\n\n    except ValueError as e:\n        raise HTTPException(status_code=400, detail=f\"Error en par\u00e1metros: {str(e)}\")\n    except Exception as e:\n        logger.error(f\"Error obteniendo logs: {str(e)}\")\n        raise HTTPException(status_code=500, detail=\"Error interno del servidor\")\n\n@router.get(\"/recent\", response_model=List[LogEntry])\nasync def get_recent_logs(\n    minutes: int = Query(60, ge=1, le=1440, description=\"Minutos hacia atr\u00e1s\"),\n    jail: Optional[str] = Query(None, description=\"Filtrar por jail\"),\n    loki_service: LokiService = Depends(get_loki_service)\n) -&gt; List[LogEntry]:\n    \"\"\"\n    Obtener logs recientes de los \u00faltimos N minutos\n    \"\"\"\n    try:\n        end_time = datetime.utcnow()\n        start_time = end_time - timedelta(minutes=minutes)\n\n        query_params = LogQuery(\n            start_time=start_time,\n            end_time=end_time,\n            jail=jail,\n            limit=500\n        )\n\n        logs = await loki_service.query_logs(query_params)\n        return logs\n\n    except Exception as e:\n        logger.error(f\"Error obteniendo logs recientes: {str(e)}\")\n        raise HTTPException(status_code=500, detail=\"Error interno del servidor\")\n\n@router.get(\"/stats\")\nasync def get_log_stats(\n    hours: int = Query(24, ge=1, le=168, description=\"Horas hacia atr\u00e1s para estad\u00edsticas\"),\n    loki_service: LokiService = Depends(get_loki_service)\n):\n    \"\"\"\n    Obtener estad\u00edsticas de logs por per\u00edodo de tiempo\n    \"\"\"\n    try:\n        end_time = datetime.utcnow()\n        start_time = end_time - timedelta(hours=hours)\n\n        stats = await loki_service.get_log_stats(start_time, end_time)\n        return stats\n\n    except Exception as e:\n        logger.error(f\"Error obteniendo estad\u00edsticas: {str(e)}\")\n        raise HTTPException(status_code=500, detail=\"Error interno del servidor\")\n</code></pre>"},{"location":"servicios/api/#controlador-de-websockets","title":"Controlador de WebSockets","text":"<pre><code># controllers/websocket_controller.py\nfrom fastapi import APIRouter, WebSocket, WebSocketDisconnect, Depends\nfrom typing import Optional\nimport json\nimport logging\nimport asyncio\n\nfrom services.websocket_service import WebSocketService, ConnectionManager\nfrom services.loki_service import LokiService\n\nrouter = APIRouter(tags=[\"websocket\"])\nlogger = logging.getLogger(__name__)\n\n# Gestor global de conexiones WebSocket\nmanager = ConnectionManager()\n\ndef get_websocket_service() -&gt; WebSocketService:\n    return WebSocketService()\n\n@router.websocket(\"/ws/logs\")\nasync def websocket_logs(\n    websocket: WebSocket,\n    jail: Optional[str] = None,\n    level: Optional[str] = None,\n    ws_service: WebSocketService = Depends(get_websocket_service)\n):\n    \"\"\"\n    WebSocket para streaming de logs en tiempo real\n\n    Query parameters:\n    - jail: Filtrar por jail espec\u00edfico\n    - level: Filtrar por nivel de log\n    \"\"\"\n    await manager.connect(websocket)\n    logger.info(f\"Nueva conexi\u00f3n WebSocket establecida. Filtros: jail={jail}, level={level}\")\n\n    try:\n        # Configurar filtros\n        filters = {}\n        if jail:\n            filters['jail'] = jail\n        if level:\n            filters['level'] = level\n\n        # Iniciar streaming de logs\n        await ws_service.stream_logs(websocket, filters)\n\n    except WebSocketDisconnect:\n        logger.info(\"Conexi\u00f3n WebSocket cerrada por el cliente\")\n    except Exception as e:\n        logger.error(f\"Error en WebSocket: {str(e)}\")\n        await websocket.close(code=1011, reason=\"Error interno del servidor\")\n    finally:\n        manager.disconnect(websocket)\n\n@router.websocket(\"/ws/stats\")\nasync def websocket_stats(websocket: WebSocket):\n    \"\"\"\n    WebSocket para estad\u00edsticas en tiempo real\n    \"\"\"\n    await manager.connect(websocket)\n    logger.info(\"Nueva conexi\u00f3n WebSocket para estad\u00edsticas\")\n\n    try:\n        while True:\n            # Enviar estad\u00edsticas cada 30 segundos\n            from services.fail2ban_service import Fail2banService\n            from services.loki_service import LokiService\n\n            fail2ban_service = Fail2banService()\n            loki_service = LokiService()\n\n            stats = {\n                \"timestamp\": datetime.utcnow().isoformat(),\n                \"fail2ban\": fail2ban_service.get_general_stats(),\n                \"system\": await loki_service.get_system_stats()\n            }\n\n            await websocket.send_text(json.dumps(stats))\n            await asyncio.sleep(30)\n\n    except WebSocketDisconnect:\n        logger.info(\"Conexi\u00f3n WebSocket de estad\u00edsticas cerrada\")\n    except Exception as e:\n        logger.error(f\"Error en WebSocket stats: {str(e)}\")\n    finally:\n        manager.disconnect(websocket)\n\n@router.get(\"/ws/status\")\nasync def websocket_status():\n    \"\"\"\n    Estado de las conexiones WebSocket activas\n    \"\"\"\n    return {\n        \"active_connections\": len(manager.active_connections),\n        \"connections\": [\n            {\n                \"id\": id(conn),\n                \"client\": f\"{conn.client.host}:{conn.client.port}\" if conn.client else \"unknown\"\n            } \n            for conn in manager.active_connections\n        ]\n    }\n</code></pre>"},{"location":"servicios/api/#servicios","title":"\ud83d\udd27 Servicios","text":""},{"location":"servicios/api/#servicio-de-loki","title":"Servicio de Loki","text":"<pre><code># services/loki_service.py\nimport aiohttp\nimport asyncio\nimport json\nfrom datetime import datetime\nfrom typing import List, Optional, Dict, Any\nimport logging\n\nfrom configuration.settings import settings\nfrom data.log_models import LogEntry, LogQuery\nfrom utils.helpers import format_loki_time\n\nlogger = logging.getLogger(__name__)\n\nclass LokiService:\n    def __init__(self):\n        self.base_url = settings.loki_url\n        self.query_url = f\"{self.base_url}/loki/api/v1/query_range\"\n        self.labels_url = f\"{self.base_url}/loki/api/v1/labels\"\n        self.timeout = aiohttp.ClientTimeout(total=settings.loki_timeout)\n\n    async def health_check(self) -&gt; bool:\n        \"\"\"Verificar conectividad con Loki\"\"\"\n        try:\n            async with aiohttp.ClientSession(timeout=self.timeout) as session:\n                async with session.get(f\"{self.base_url}/ready\") as response:\n                    return response.status == 200\n        except Exception as e:\n            logger.error(f\"Health check failed: {e}\")\n            return False\n\n    async def query_logs(self, query_params: LogQuery) -&gt; List[LogEntry]:\n        \"\"\"Consultar logs en Loki con par\u00e1metros espec\u00edficos\"\"\"\n        try:\n            # Construir query LogQL\n            logql_query = self._build_logql_query(query_params)\n\n            # Par\u00e1metros para la API de Loki\n            params = {\n                'query': logql_query,\n                'start': format_loki_time(query_params.start_time),\n                'end': format_loki_time(query_params.end_time),\n                'limit': query_params.limit,\n                'direction': 'backward'  # M\u00e1s recientes primero\n            }\n\n            async with aiohttp.ClientSession(timeout=self.timeout) as session:\n                async with session.get(self.query_url, params=params) as response:\n                    if response.status != 200:\n                        error_text = await response.text()\n                        raise Exception(f\"Loki API error: {response.status} - {error_text}\")\n\n                    data = await response.json()\n                    return self._parse_loki_response(data)\n\n        except Exception as e:\n            logger.error(f\"Error querying Loki: {e}\")\n            raise\n\n    def _build_logql_query(self, params: LogQuery) -&gt; str:\n        \"\"\"Construir query LogQL basado en par\u00e1metros\"\"\"\n        # Query base para logs de fail2ban\n        base_query = '{job=\"fail2ban\"}'\n\n        filters = []\n\n        # Filtro por jail\n        if params.jail:\n            filters.append(f'jail=\"{params.jail}\"')\n\n        # Filtro por nivel\n        if params.level:\n            filters.append(f'level=\"{params.level.upper()}\"')\n\n        # Agregar filtros a la query\n        if filters:\n            filter_str = ', '.join(filters)\n            query = f'{{{base_query[1:-1]}, {filter_str}}}'\n        else:\n            query = base_query\n\n        # Filtro por texto de b\u00fasqueda\n        if params.search:\n            query += f' |~ \"(?i){params.search}\"'  # Case insensitive search\n\n        return query\n\n    def _parse_loki_response(self, data: Dict[str, Any]) -&gt; List[LogEntry]:\n        \"\"\"Parsear respuesta de Loki a LogEntry objects\"\"\"\n        logs = []\n\n        try:\n            if 'data' not in data or 'result' not in data['data']:\n                return logs\n\n            for stream in data['data']['result']:\n                stream_labels = stream.get('stream', {})\n\n                for entry in stream.get('values', []):\n                    timestamp_ns = int(entry[0])\n                    log_line = entry[1]\n\n                    # Convertir timestamp de nanosegundos a datetime\n                    timestamp = datetime.fromtimestamp(timestamp_ns / 1_000_000_000)\n\n                    # Parsear log line si es JSON\n                    try:\n                        log_data = json.loads(log_line)\n                        message = log_data.get('message', log_line)\n                    except:\n                        message = log_line\n                        log_data = {}\n\n                    log_entry = LogEntry(\n                        timestamp=timestamp,\n                        level=stream_labels.get('level', 'INFO'),\n                        jail=stream_labels.get('jail', ''),\n                        component=stream_labels.get('component', 'fail2ban'),\n                        message=message,\n                        raw_log=log_line,\n                        labels=stream_labels\n                    )\n\n                    logs.append(log_entry)\n\n            # Ordenar por timestamp (m\u00e1s reciente primero)\n            logs.sort(key=lambda x: x.timestamp, reverse=True)\n\n        except Exception as e:\n            logger.error(f\"Error parsing Loki response: {e}\")\n            raise\n\n        return logs\n\n    async def get_log_stats(self, start_time: datetime, end_time: datetime) -&gt; Dict[str, Any]:\n        \"\"\"Obtener estad\u00edsticas de logs por per\u00edodo\"\"\"\n        try:\n            stats = {}\n\n            # Query para contar logs por nivel\n            level_query = 'sum by (level) (count_over_time({job=\"fail2ban\"}[1h]))'\n\n            # Query para contar logs por jail\n            jail_query = 'sum by (jail) (count_over_time({job=\"fail2ban\"}[1h]))'\n\n            async with aiohttp.ClientSession(timeout=self.timeout) as session:\n                # Estad\u00edsticas por nivel\n                params = {\n                    'query': level_query,\n                    'start': format_loki_time(start_time),\n                    'end': format_loki_time(end_time),\n                    'step': '3600'  # 1 hora\n                }\n\n                async with session.get(self.query_url, params=params) as response:\n                    if response.status == 200:\n                        data = await response.json()\n                        stats['by_level'] = self._parse_stats_response(data)\n\n                # Estad\u00edsticas por jail\n                params['query'] = jail_query\n                async with session.get(self.query_url, params=params) as response:\n                    if response.status == 200:\n                        data = await response.json()\n                        stats['by_jail'] = self._parse_stats_response(data)\n\n            return stats\n\n        except Exception as e:\n            logger.error(f\"Error getting log stats: {e}\")\n            return {}\n\n    def _parse_stats_response(self, data: Dict[str, Any]) -&gt; Dict[str, int]:\n        \"\"\"Parsear respuesta de estad\u00edsticas\"\"\"\n        stats = {}\n\n        try:\n            for result in data.get('data', {}).get('result', []):\n                metric = result.get('metric', {})\n                values = result.get('values', [])\n\n                # Obtener el label (level o jail)\n                label = metric.get('level') or metric.get('jail', 'unknown')\n\n                # Sumar todos los valores\n                total = sum(float(value[1]) for value in values)\n                stats[label] = int(total)\n\n        except Exception as e:\n            logger.error(f\"Error parsing stats response: {e}\")\n\n        return stats\n\n    async def get_system_stats(self) -&gt; Dict[str, Any]:\n        \"\"\"Obtener estad\u00edsticas generales del sistema\"\"\"\n        try:\n            async with aiohttp.ClientSession(timeout=self.timeout) as session:\n                async with session.get(f\"{self.base_url}/metrics\") as response:\n                    if response.status == 200:\n                        metrics_text = await response.text()\n                        return self._parse_prometheus_metrics(metrics_text)\n            return {}\n        except Exception as e:\n            logger.error(f\"Error getting system stats: {e}\")\n            return {}\n\n    def _parse_prometheus_metrics(self, metrics_text: str) -&gt; Dict[str, Any]:\n        \"\"\"Parsear m\u00e9tricas de Prometheus de Loki\"\"\"\n        stats = {}\n        try:\n            for line in metrics_text.split('\\n'):\n                if line.startswith('loki_ingester_streams_total'):\n                    stats['total_streams'] = float(line.split()[-1])\n                elif line.startswith('loki_distributor_lines_received_total'):\n                    stats['lines_received'] = float(line.split()[-1])\n        except Exception as e:\n            logger.error(f\"Error parsing metrics: {e}\")\n\n        return stats\n</code></pre>"},{"location":"servicios/api/#configuracion-docker","title":"\ud83d\udc33 Configuraci\u00f3n Docker","text":""},{"location":"servicios/api/#dockerfile","title":"Dockerfile","text":"<pre><code># Dockerfile\nFROM python:3.11-slim\n\n# Metadatos\nLABEL maintainer=\"tu_email@example.com\"\nLABEL description=\"FastAPI backend for Fail2ban Dashboard\"\n\n# Variables de entorno\nENV PYTHONUNBUFFERED=1\nENV PYTHONDONTWRITEBYTECODE=1\nENV DEBIAN_FRONTEND=noninteractive\n\n# Crear usuario no-root\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\n\n# Instalar dependencias del sistema\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    fail2ban \\\n    curl \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Crear directorio de la aplicaci\u00f3n\nWORKDIR /app\n\n# Copiar requirements primero para aprovechar cache de Docker\nCOPY requirements.txt .\n\n# Instalar dependencias Python\nRUN pip install --no-cache-dir --upgrade pip &amp;&amp; \\\n    pip install --no-cache-dir -r requirements.txt\n\n# Copiar c\u00f3digo de la aplicaci\u00f3n\nCOPY . .\n\n# Crear directorio para logs\nRUN mkdir -p /app/logs &amp;&amp; chown -R appuser:appuser /app\n\n# Cambiar a usuario no-root\nUSER appuser\n\n# Exponer puerto\nEXPOSE 8000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8000/health || exit 1\n\n# Comando por defecto\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\", \"--proxy-headers\", \"--forwarded-allow-ips\", \"*\"]\n</code></pre>"},{"location":"servicios/api/#dependencias","title":"Dependencias","text":"<pre><code># requirements.txt\nfastapi==0.104.1\nuvicorn[standard]==0.24.0\npydantic==2.5.0\npydantic-settings==2.1.0\naiohttp==3.9.1\njinja2==3.1.2\npython-multipart==0.0.6\npython-jose[cryptography]==3.3.0\npasslib[bcrypt]==1.7.4\nwebsockets==12.0\nprometheus-client==0.19.0\nstructlog==23.2.0\nrich==13.7.0\ncachetools==5.3.2\n</code></pre> <p>Optimizaciones de Performance</p> <ul> <li>Cache de respuestas para consultas frecuentes</li> <li>Conexiones persistentes a Loki con connection pooling</li> <li>Rate limiting para prevenir abuse</li> <li>Compresi\u00f3n GZIP para respuestas grandes</li> <li>Paginaci\u00f3n en endpoints que retornan muchos datos</li> </ul> <p>Consideraciones de Seguridad</p> <ul> <li>Validaci\u00f3n estricta de todos los par\u00e1metros de entrada</li> <li>Rate limiting en endpoints p\u00fablicos</li> <li>Headers de seguridad configurados en middleware</li> <li>Logging de accesos para auditor\u00eda</li> <li>Timeout configurado para prevenir ataques de lenta conexi\u00f3n</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Explora la documentaci\u00f3n de Loki para entender c\u00f3mo la API consulta y procesa los logs almacenados.</p>"},{"location":"servicios/caddy/","title":"\ud83d\udd12 Caddy Web Server","text":""},{"location":"servicios/caddy/#introduccion","title":"Introducci\u00f3n","text":"<p>Caddy es el servidor web y proxy inverso que act\u00faa como puerta de entrada al sistema. Maneja autom\u00e1ticamente los certificados SSL, enruta el tr\u00e1fico HTTPS y proporciona una capa adicional de seguridad.</p>"},{"location":"servicios/caddy/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/caddy/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de Caddy</p> <ul> <li>\ud83d\udd12 HTTPS Autom\u00e1tico: Obtenci\u00f3n y renovaci\u00f3n autom\u00e1tica de certificados SSL con Let's Encrypt</li> <li>\ud83d\udd04 Proxy Inverso: Enrutamiento de tr\u00e1fico hacia la API FastAPI</li> <li>\ud83d\udee1\ufe0f Headers de Seguridad: Configuraci\u00f3n autom\u00e1tica de headers HTTP seguros</li> <li>\ud83d\udcca Logging Avanzado: Logs estructurados en formato JSON</li> <li>\u26a1 High Performance: Servidor web moderno y eficiente</li> </ul>"},{"location":"servicios/caddy/#arquitectura-de-caddy","title":"Arquitectura de Caddy","text":"<pre><code>graph TB\n    subgraph \"Internet\"\n        USER[\ud83d\udc64 Usuario]\n        LE[\ud83d\udd12 Let's Encrypt]\n    end\n\n    subgraph \"Caddy Server\"\n        CADDY[\ud83d\udd12 Caddy Process]\n        CERT[\ud83d\udcdc Certificate Manager]\n        PROXY[\ud83d\udd04 Reverse Proxy]\n        LOG[\ud83d\udcca Access Logs]\n    end\n\n    subgraph \"Backend\"\n        API[\u2699\ufe0f FastAPI :8000]\n    end\n\n    USER --&gt;|HTTPS Request| CADDY\n    CADDY &lt;--&gt;|Certificate Validation| LE\n    CERT --&gt;|Auto Renewal| LE\n    CADDY --&gt; PROXY\n    PROXY --&gt;|localhost:8000| API\n    CADDY --&gt; LOG\n    API --&gt;|Response| PROXY\n    PROXY --&gt;|HTTPS Response| USER</code></pre>"},{"location":"servicios/caddy/#configuracion","title":"\u2699\ufe0f Configuraci\u00f3n","text":""},{"location":"servicios/caddy/#archivo-caddyfile-principal","title":"Archivo Caddyfile Principal","text":"<pre><code># /etc/caddy/Caddyfile\n{\n    # Configuraci\u00f3n global\n    email tu_email@example.com\n\n    # Configuraci\u00f3n de logs globales\n    log {\n        level INFO\n        format json\n    }\n\n    # Configuraci\u00f3n de certificados\n    acme_ca https://acme-v02.api.letsencrypt.org/directory\n\n    # Configuraci\u00f3n de almacenamiento\n    storage file_system {\n        root /var/lib/caddy\n    }\n}\n\n# Configuraci\u00f3n principal del sitio\nalertasfail2ban.xmakuno.com {\n    # Proxy inverso hacia FastAPI\n    reverse_proxy localhost:8000 {\n        # Headers para proxy\n        header_up Host {host}\n        header_up X-Real-IP {remote_host}\n        header_up X-Forwarded-For {remote_host}\n        header_up X-Forwarded-Proto {scheme}\n        header_up X-Forwarded-Host {host}\n        header_up X-Forwarded-Port {server_port}\n\n        # Health check del backend\n        health_uri /health\n        health_interval 30s\n        health_timeout 5s\n\n        # Configuraci\u00f3n de timeouts\n        transport http {\n            dial_timeout 10s\n            response_header_timeout 30s\n        }\n    }\n\n    # Headers de seguridad\n    header {\n        # HSTS - HTTP Strict Transport Security\n        Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n\n        # Prevenir clickjacking\n        X-Frame-Options \"DENY\"\n\n        # Prevenir MIME type sniffing\n        X-Content-Type-Options \"nosniff\"\n\n        # XSS Protection\n        X-XSS-Protection \"1; mode=block\"\n\n        # Referrer Policy\n        Referrer-Policy \"strict-origin-when-cross-origin\"\n\n        # Content Security Policy\n        Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:; frame-ancestors 'none';\"\n\n        # Permissions Policy\n        Permissions-Policy \"camera=(), microphone=(), geolocation=(), payment=()\"\n\n        # Server header (ocultar informaci\u00f3n)\n        -Server\n        -X-Powered-By\n    }\n\n    # Rate limiting\n    rate_limit {\n        zone dynamic {\n            key {remote_host}\n            events 100\n            window 1m\n        }\n\n        zone api {\n            key {remote_host}\n            events 30\n            window 1m\n            match {\n                path /api/*\n            }\n        }\n    }\n\n    # Logging de acceso\n    log {\n        output file /var/log/caddy/access.log {\n            roll_size 100mb\n            roll_keep 10\n            roll_keep_for 720h  # 30 d\u00edas\n        }\n        format json {\n            time_format \"2006-01-02T15:04:05.000Z07:00\"\n            message_key \"msg\"\n            level_key \"level\"\n            time_key \"ts\"\n        }\n        include http.request.host http.request.method http.request.uri\n        include http.request.headers.User-Agent\n        include http.response.status http.response.size\n        include http.response.duration\n    }\n\n    # Manejo de errores personalizado\n    handle_errors {\n        @5xx expression {http.error.status_code} &gt;= 500\n        @4xx expression {http.error.status_code} &gt;= 400 &amp;&amp; {http.error.status_code} &lt; 500\n        @404 expression {http.error.status_code} == 404\n\n        respond @5xx `\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n        &lt;head&gt;&lt;title&gt;Error del Servidor&lt;/title&gt;&lt;/head&gt;\n        &lt;body style=\"font-family: Arial, sans-serif; text-align: center; padding: 50px;\"&gt;\n            &lt;h1&gt;Error Interno del Servidor&lt;/h1&gt;\n            &lt;p&gt;El servicio est\u00e1 temporalmente no disponible. Por favor intenta m\u00e1s tarde.&lt;/p&gt;\n            &lt;p&gt;&lt;small&gt;Error: {http.error.status_code}&lt;/small&gt;&lt;/p&gt;\n        &lt;/body&gt;\n        &lt;/html&gt;\n        ` 500 {\n            header Content-Type \"text/html; charset=utf-8\"\n        }\n\n        respond @404 `\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n        &lt;head&gt;&lt;title&gt;P\u00e1gina No Encontrada&lt;/title&gt;&lt;/head&gt;\n        &lt;body style=\"font-family: Arial, sans-serif; text-align: center; padding: 50px;\"&gt;\n            &lt;h1&gt;404 - P\u00e1gina No Encontrada&lt;/h1&gt;\n            &lt;p&gt;La p\u00e1gina que buscas no existe.&lt;/p&gt;\n            &lt;p&gt;&lt;a href=\"/\"&gt;Volver al inicio&lt;/a&gt;&lt;/p&gt;\n        &lt;/body&gt;\n        &lt;/html&gt;\n        ` 404 {\n            header Content-Type \"text/html; charset=utf-8\"\n        }\n\n        respond @4xx `\n        &lt;!DOCTYPE html&gt;\n        &lt;html&gt;\n        &lt;head&gt;&lt;title&gt;Error de Cliente&lt;/title&gt;&lt;/head&gt;\n        &lt;body style=\"font-family: Arial, sans-serif; text-align: center; padding: 50px;\"&gt;\n            &lt;h1&gt;Error en la Solicitud&lt;/h1&gt;\n            &lt;p&gt;Tu solicitud no pudo ser procesada.&lt;/p&gt;\n            &lt;p&gt;&lt;small&gt;Error: {http.error.status_code}&lt;/small&gt;&lt;/p&gt;\n        &lt;/body&gt;\n        &lt;/html&gt;\n        ` {http.error.status_code} {\n            header Content-Type \"text/html; charset=utf-8\"\n        }\n    }\n\n    # Compresi\u00f3n\n    encode {\n        gzip 6\n        zstd\n        minimum_length 1024\n        match {\n            header Content-Type text/*\n            header Content-Type application/json*\n            header Content-Type application/javascript*\n            header Content-Type application/xhtml+xml*\n            header Content-Type application/atom+xml*\n            header Content-Type image/svg+xml*\n        }\n    }\n}\n\n# Redirecci\u00f3n de www a dominio principal\nwww.alertasfail2ban.xmakuno.com {\n    redir https://alertasfail2ban.xmakuno.com{uri} permanent\n}\n\n# Configuraci\u00f3n para desarrollo local (opcional)\nlocalhost:8080 {\n    reverse_proxy localhost:8000\n    tls internal\n}\n</code></pre>"},{"location":"servicios/caddy/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># /etc/default/caddy\n# Variables de entorno para Caddy\n\n# Usuario y grupo\nCADDY_USER=caddy\nCADDY_GROUP=caddy\n\n# Directorio de configuraci\u00f3n\nCADDY_CONFIG_DIR=/etc/caddy\n\n# Directorio de datos\nCADDY_DATA_DIR=/var/lib/caddy\n\n# Archivo de log de errores\nCADDY_ERROR_LOG=/var/log/caddy/error.log\n\n# Configuraciones adicionales\nCADDY_ADMIN_LISTEN=localhost:2019\nCADDY_HTTP_PORT=80\nCADDY_HTTPS_PORT=443\n\n# Let's Encrypt configuraci\u00f3n\nACME_EMAIL=tu_email@example.com\nACME_CA_SERVER=https://acme-v02.api.letsencrypt.org/directory\n</code></pre>"},{"location":"servicios/caddy/#instalacion-y-configuracion","title":"\ud83d\ude80 Instalaci\u00f3n y Configuraci\u00f3n","text":""},{"location":"servicios/caddy/#instalacion-en-ubuntu-2204","title":"Instalaci\u00f3n en Ubuntu 22.04","text":"<pre><code># Instalar dependencias\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\n\n# Agregar clave GPG de Caddy\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\n\n# Agregar repositorio\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\n\n# Actualizar repositorios e instalar\nsudo apt update\nsudo apt install caddy\n\n# Verificar instalaci\u00f3n\ncaddy version\n</code></pre>"},{"location":"servicios/caddy/#configuracion-inicial","title":"Configuraci\u00f3n Inicial","text":"<pre><code># Crear directorios necesarios\nsudo mkdir -p /etc/caddy\nsudo mkdir -p /var/log/caddy\nsudo mkdir -p /var/lib/caddy\n\n# Configurar permisos\nsudo chown -R caddy:caddy /var/log/caddy\nsudo chown -R caddy:caddy /var/lib/caddy\nsudo chmod 755 /etc/caddy\n\n# Crear Caddyfile inicial\nsudo nano /etc/caddy/Caddyfile\n\n# Validar configuraci\u00f3n\nsudo caddy validate --config /etc/caddy/Caddyfile\n\n# Habilitar y iniciar servicio\nsudo systemctl enable caddy\nsudo systemctl start caddy\nsudo systemctl status caddy\n</code></pre>"},{"location":"servicios/caddy/#configuracion-de-systemd","title":"Configuraci\u00f3n de Systemd","text":"<pre><code># /etc/systemd/system/caddy.service\n[Unit]\nDescription=Caddy\nDocumentation=https://caddyserver.com/docs/\nAfter=network.target network-online.target\nRequires=network-online.target\n\n[Service]\nType=notify\nUser=caddy\nGroup=caddy\nExecStart=/usr/bin/caddy run --environ --config /etc/caddy/Caddyfile\nExecReload=/usr/bin/caddy reload --config /etc/caddy/Caddyfile --force\nTimeoutStopSec=5s\nLimitNOFILE=1048576\nLimitNPROC=1048576\nPrivateTmp=true\nProtectSystem=full\nAmbientCapabilities=CAP_NET_BIND_SERVICE\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"servicios/caddy/#gestion-de-certificados-ssl","title":"\ud83d\udd10 Gesti\u00f3n de Certificados SSL","text":""},{"location":"servicios/caddy/#configuracion-automatica","title":"Configuraci\u00f3n Autom\u00e1tica","text":"<p>Let's Encrypt Autom\u00e1tico</p> <p>Caddy maneja autom\u00e1ticamente:</p> <ul> <li>Obtenci\u00f3n inicial de certificados SSL/TLS</li> <li>Validaci\u00f3n de dominio via HTTP-01 challenge</li> <li>Renovaci\u00f3n autom\u00e1tica antes del vencimiento (30 d\u00edas antes)</li> <li>Configuraci\u00f3n HTTPS autom\u00e1tica con redirecci\u00f3n HTTP \u2192 HTTPS</li> </ul>"},{"location":"servicios/caddy/#comandos-de-gestion","title":"Comandos de Gesti\u00f3n","text":"<pre><code># Listar certificados actuales\nsudo caddy list-certificates\n\n# Verificar estado de certificado espec\u00edfico\nsudo caddy list-certificates --format json | jq '.[] | select(.names[] | contains(\"alertasfail2ban.xmakuno.com\"))'\n\n# Forzar renovaci\u00f3n de certificado\nsudo systemctl stop caddy\nsudo rm -rf /var/lib/caddy/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/\nsudo systemctl start caddy\n\n# Verificar logs de renovaci\u00f3n\nsudo journalctl -u caddy -f --since \"1 hour ago\"\n</code></pre>"},{"location":"servicios/caddy/#verificacion-manual-de-ssl","title":"Verificaci\u00f3n Manual de SSL","text":"<pre><code># Verificar certificado desde l\u00ednea de comandos\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -text\n\n# Verificar fechas de validez\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates\n\n# Verificar cadena de certificados\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 -showcerts 2&gt;/dev/null\n</code></pre>"},{"location":"servicios/caddy/#logging-y-monitoreo","title":"\ud83d\udcca Logging y Monitoreo","text":""},{"location":"servicios/caddy/#configuracion-de-logs","title":"Configuraci\u00f3n de Logs","text":"<pre><code># Estructura de logs\n/var/log/caddy/\n\u251c\u2500\u2500 access.log          # Logs de acceso en formato JSON\n\u251c\u2500\u2500 access.log.1        # Rotaci\u00f3n autom\u00e1tica\n\u251c\u2500\u2500 access.log.2.gz     # Compresi\u00f3n autom\u00e1tica\n\u2514\u2500\u2500 error.log           # Logs de errores del sistema\n</code></pre>"},{"location":"servicios/caddy/#analisis-de-logs","title":"An\u00e1lisis de Logs","text":"Logs de AccesoLogs de Errores <pre><code># Ver logs en tiempo real\nsudo tail -f /var/log/caddy/access.log | jq\n\n# Filtrar por c\u00f3digos de estado\njq 'select(.resp_status &gt;= 400)' /var/log/caddy/access.log\n\n# Top IPs por n\u00famero de requests\njq -r '.request.remote_ip' /var/log/caddy/access.log | sort | uniq -c | sort -nr | head -10\n\n# An\u00e1lisis de User-Agents\njq -r '.request.headers[\"User-Agent\"][0]' /var/log/caddy/access.log | sort | uniq -c | sort -nr\n\n# Requests por hora\njq -r '.ts[:13]' /var/log/caddy/access.log | sort | uniq -c\n</code></pre> <pre><code># Ver errores recientes\nsudo journalctl -u caddy --since \"1 hour ago\" --priority err\n\n# Seguir logs en tiempo real\nsudo journalctl -u caddy -f\n\n# Filtrar por tipos de mensaje\nsudo journalctl -u caddy | grep -i \"certificate\"\nsudo journalctl -u caddy | grep -i \"error\"\n</code></pre>"},{"location":"servicios/caddy/#metricas-y-estadisticas","title":"M\u00e9tricas y Estad\u00edsticas","text":"<pre><code>#!/bin/bash\n# caddy-stats.sh - Script para estad\u00edsticas de Caddy\n\necho \"=== ESTAD\u00cdSTICAS DE CADDY ===\"\necho \"Fecha: $(date)\"\necho \"================================\"\n\n# Estado del servicio\necho \"\ud83d\udcca Estado del servicio:\"\nsudo systemctl status caddy --no-pager -l\n\n# Estad\u00edsticas de acceso (\u00faltimas 24h)\necho -e \"\\n\ud83d\udcc8 Estad\u00edsticas de acceso (24h):\"\nif [ -f /var/log/caddy/access.log ]; then\n    echo \"Total requests: $(wc -l &lt; /var/log/caddy/access.log)\"\n    echo \"Requests \u00fanicos por IP:\"\n    jq -r '.request.remote_ip' /var/log/caddy/access.log 2&gt;/dev/null | sort | uniq -c | sort -nr | head -5 || echo \"Error procesando logs\"\n    echo \"Status codes:\"\n    jq -r '.resp_status' /var/log/caddy/access.log 2&gt;/dev/null | sort | uniq -c | sort -nr || echo \"Error procesando logs\"\nfi\n\n# Informaci\u00f3n de certificados\necho -e \"\\n\ud83d\udd12 Certificados SSL:\"\nsudo caddy list-certificates 2&gt;/dev/null | head -20 || echo \"Error obteniendo certificados\"\n\n# Uso de memoria y CPU\necho -e \"\\n\ud83d\udcbb Recursos del proceso:\"\nps aux | grep caddy | grep -v grep\n\necho -e \"\\n================================\"\n</code></pre>"},{"location":"servicios/caddy/#configuracion-de-seguridad","title":"\ud83d\udee1\ufe0f Configuraci\u00f3n de Seguridad","text":""},{"location":"servicios/caddy/#headers-de-seguridad-explicados","title":"Headers de Seguridad Explicados","text":"<p>Headers de Seguridad Implementados</p> HSTS (HTTP Strict Transport Security)Clickjacking ProtectionMIME Type SniffingXSS ProtectionContent Security Policy <p><pre><code>Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n</code></pre> - Fuerza conexiones HTTPS por 1 a\u00f1o - Incluye subdominios - Elegible para HSTS preload list</p> <p><pre><code>X-Frame-Options \"DENY\"\n</code></pre> - Previene embebido en iframes - Protege contra ataques de clickjacking</p> <p><pre><code>X-Content-Type-Options \"nosniff\"\n</code></pre> - Previene interpretaci\u00f3n incorrecta de archivos - Reduce riesgo de XSS</p> <p><pre><code>X-XSS-Protection \"1; mode=block\"\n</code></pre> - Activa filtro XSS del navegador - Bloquea p\u00e1ginas con XSS detectado</p> <p><pre><code>Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'...\"\n</code></pre> - Controla recursos que puede cargar la p\u00e1gina - Previene XSS y injection attacks</p>"},{"location":"servicios/caddy/#rate-limiting","title":"Rate Limiting","text":"<pre><code># Configuraci\u00f3n avanzada de rate limiting\nrate_limit {\n    # L\u00edmite general por IP\n    zone general {\n        key {remote_host}\n        events 100\n        window 1m\n    }\n\n    # L\u00edmite espec\u00edfico para API\n    zone api {\n        key {remote_host}\n        events 30\n        window 1m\n        match {\n            path /api/*\n        }\n    }\n\n    # L\u00edmite para autenticaci\u00f3n\n    zone auth {\n        key {remote_host}\n        events 5\n        window 5m\n        match {\n            path /auth/*\n            method POST\n        }\n    }\n\n    # L\u00edmite por User-Agent (bots)\n    zone bots {\n        key {request.header.user-agent}\n        events 10\n        window 1m\n        match {\n            header User-Agent *bot*\n        }\n    }\n}\n</code></pre>"},{"location":"servicios/caddy/#configuracion-anti-ddos","title":"Configuraci\u00f3n Anti-DDoS","text":"<pre><code># Protecci\u00f3n adicional contra DDoS\nalertasfail2ban.xmakuno.com {\n    # ... configuraci\u00f3n base ...\n\n    # L\u00edmites de conexi\u00f3n\n    limits {\n        max_request_body_size 10MB\n        max_request_header_size 1MB\n    }\n\n    # Timeouts agresivos\n    timeouts {\n        read_timeout 30s\n        read_header_timeout 10s\n        write_timeout 30s\n        idle_timeout 120s\n    }\n\n    # Filtros geogr\u00e1ficos (opcional)\n    @blocked_countries {\n        remote_ip 1.2.3.0/24 5.6.7.0/24  # Rangos IP espec\u00edficos\n    }\n    respond @blocked_countries \"Access denied\" 403\n\n    # Bloqueo de User-Agents maliciosos\n    @malicious_agents {\n        header User-Agent *sqlmap*\n        header User-Agent *nikto*\n        header User-Agent *nmap*\n        header User-Agent *scanner*\n    }\n    respond @malicious_agents \"Forbidden\" 403\n}\n</code></pre>"},{"location":"servicios/caddy/#optimizacion-de-performance","title":"\u26a1 Optimizaci\u00f3n de Performance","text":""},{"location":"servicios/caddy/#configuracion-de-cache","title":"Configuraci\u00f3n de Cach\u00e9","text":"<pre><code># Headers de cach\u00e9 para recursos est\u00e1ticos\n@static {\n    path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2\n}\n\nheader @static {\n    Cache-Control \"public, max-age=31536000, immutable\"\n    ETag {file.hash}\n}\n\n# Headers de cach\u00e9 para API responses\n@api {\n    path /api/*\n}\n\nheader @api {\n    Cache-Control \"no-cache, no-store, must-revalidate\"\n    Pragma \"no-cache\"\n    Expires \"0\"\n}\n</code></pre>"},{"location":"servicios/caddy/#configuracion-de-compresion","title":"Configuraci\u00f3n de Compresi\u00f3n","text":"<pre><code># Compresi\u00f3n optimizada\nencode {\n    # Algoritmos de compresi\u00f3n (orden de preferencia)\n    zstd\n    gzip 6\n\n    # Tama\u00f1o m\u00ednimo para comprimir\n    minimum_length 1024\n\n    # Tipos MIME a comprimir\n    match {\n        header Content-Type text/*\n        header Content-Type application/json*\n        header Content-Type application/javascript*\n        header Content-Type application/xml*\n        header Content-Type application/xhtml+xml*\n        header Content-Type application/atom+xml*\n        header Content-Type application/rss+xml*\n        header Content-Type image/svg+xml*\n    }\n}\n</code></pre>"},{"location":"servicios/caddy/#optimizacion-de-conexiones","title":"Optimizaci\u00f3n de Conexiones","text":"<pre><code># Configuraci\u00f3n de transporte HTTP optimizada\nservers {\n    protocols h1 h2 h3\n\n    # HTTP/2 settings\n    h2c on\n\n    # HTTP/3 settings (experimental)\n    experimental_http3\n\n    # Configuraci\u00f3n de timeouts\n    timeouts {\n        read_timeout 30s\n        read_header_timeout 10s\n        write_timeout 30s\n        idle_timeout 120s\n    }\n\n    # L\u00edmites de conexi\u00f3n\n    max_header_size 1MB\n    max_request_body_size 10MB\n}\n</code></pre>"},{"location":"servicios/caddy/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"servicios/caddy/#problemas-comunes","title":"Problemas Comunes","text":"Certificado SSL No Se ObtieneError 502 Bad GatewayRate Limiting Muy Agresivo <pre><code># Verificar conectividad a Let's Encrypt\ncurl -I https://acme-v02.api.letsencrypt.org/directory\n\n# Verificar DNS\ndig alertasfail2ban.xmakuno.com\n\n# Verificar puerto 80 abierto\nsudo netstat -tlnp | grep :80\n\n# Logs espec\u00edficos de certificados\nsudo journalctl -u caddy | grep -i certificate\n\n# Probar validaci\u00f3n manual\nsudo caddy validate --config /etc/caddy/Caddyfile\n</code></pre> <pre><code># Verificar que backend est\u00e9 corriendo\ncurl http://localhost:8000/health\n\n# Verificar configuraci\u00f3n de proxy\nsudo caddy validate --config /etc/caddy/Caddyfile\n\n# Logs de errores de proxy\nsudo journalctl -u caddy | grep -i \"proxy\\|upstream\\|backend\"\n\n# Probar conectividad directa\ntelnet localhost 8000\n</code></pre> <pre><code># Verificar configuraci\u00f3n actual\ncurl -I https://alertasfail2ban.xmakuno.com/\n\n# Ajustar l\u00edmites en Caddyfile\n# Aumentar events o window en rate_limit\n\n# Recargar configuraci\u00f3n\nsudo systemctl reload caddy\n\n# Verificar logs de rate limiting\nsudo grep -i \"rate limit\" /var/log/caddy/access.log\n</code></pre>"},{"location":"servicios/caddy/#comandos-de-diagnostico","title":"Comandos de Diagn\u00f3stico","text":"<pre><code>#!/bin/bash\n# caddy-diagnostics.sh\n\necho \"=== DIAGN\u00d3STICO DE CADDY ===\"\n\n# 1. Estado del servicio\necho \"\ud83d\udcca Estado del servicio:\"\nsudo systemctl status caddy --no-pager\n\n# 2. Validaci\u00f3n de configuraci\u00f3n\necho -e \"\\n\u2705 Validaci\u00f3n de configuraci\u00f3n:\"\nsudo caddy validate --config /etc/caddy/Caddyfile\n\n# 3. Puertos en uso\necho -e \"\\n\ud83c\udf10 Puertos en uso:\"\nsudo netstat -tlnp | grep -E \":(80|443|2019)\"\n\n# 4. Certificados\necho -e \"\\n\ud83d\udd12 Certificados:\"\nsudo caddy list-certificates | head -10\n\n# 5. \u00daltimos errores\necho -e \"\\n\u274c \u00daltimos errores:\"\nsudo journalctl -u caddy --since \"1 hour ago\" --priority err --no-pager\n\n# 6. Test de conectividad\necho -e \"\\n\ud83d\udd0c Test de conectividad:\"\nif curl -s -I http://localhost:80 &gt;/dev/null; then\n    echo \"\u2705 Puerto 80: OK\"\nelse\n    echo \"\u274c Puerto 80: FAIL\"\nfi\n\nif curl -s -I https://localhost:443 &gt;/dev/null 2&gt;&amp;1; then\n    echo \"\u2705 Puerto 443: OK\"\nelse\n    echo \"\u274c Puerto 443: FAIL\"\nfi\n\n# 7. Uso de recursos\necho -e \"\\n\ud83d\udcbb Uso de recursos:\"\nps aux | grep caddy | grep -v grep\n\necho -e \"\\n=== FIN DIAGN\u00d3STICO ===\"\n</code></pre> <p>Mejores Pr\u00e1cticas</p> <ol> <li>Siempre valida la configuraci\u00f3n antes de recargar</li> <li>Monitorea logs regularmente para detectar problemas</li> <li>Mant\u00e9n backups de configuraciones que funcionan</li> <li>Prueba certificados peri\u00f3dicamente</li> <li>Actualiza Caddy regularmente para parches de seguridad</li> </ol> <p>Pr\u00f3ximo Paso</p> <p>Revisa la documentaci\u00f3n de Fail2ban para entender c\u00f3mo se integra con Caddy para proporcionar seguridad adicional.</p>"},{"location":"servicios/docker/","title":"\ud83d\udc33 Docker y Orquestaci\u00f3n","text":""},{"location":"servicios/docker/#introduccion","title":"Introducci\u00f3n","text":"<p>Docker proporciona la plataforma de containerizaci\u00f3n que permite ejecutar todos los servicios del sistema de manera aislada, portable y escalable. El sistema utiliza Docker Compose para orquestar m\u00faltiples contenedores.</p>"},{"location":"servicios/docker/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/docker/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de Docker</p> <ul> <li>\ud83d\udd12 Aislamiento: Cada servicio ejecuta en su propio contenedor</li> <li>\ud83d\udce6 Portabilidad: Mismo comportamiento en desarrollo y producci\u00f3n</li> <li>\u26a1 Escalabilidad: F\u00e1cil escalamiento horizontal de servicios</li> <li>\ud83d\udd04 Orquestaci\u00f3n: Gesti\u00f3n coordinada con Docker Compose</li> <li>\ud83d\udcbe Persistencia: Vol\u00famenes para datos cr\u00edticos</li> <li>\ud83c\udf10 Networking: Red interna segura entre contenedores</li> </ul>"},{"location":"servicios/docker/#arquitectura-docker","title":"Arquitectura Docker","text":"<pre><code>graph TB\n    subgraph \"Docker Host\"\n        subgraph \"Docker Network: fail2ban_network\"\n            API[\u2699\ufe0f API Container&lt;br/&gt;Port: 8000]\n            LOKI[\ud83d\uddc4\ufe0f Loki Container&lt;br/&gt;Port: 3100]\n            PROMTAIL[\ud83d\udcdc Promtail Container&lt;br/&gt;Port: 9080]\n        end\n\n        subgraph \"Volumes\"\n            LOKI_DATA[\ud83d\udcbe loki_data]\n            PROMTAIL_POS[\ud83d\udccd promtail_positions]\n        end\n\n        subgraph \"Host Mounts\"\n            FAIL2BAN_LOG[\ud83d\udcdd /var/log/fail2ban.log]\n            FAIL2BAN_SOCK[\ud83d\udd0c /var/run/fail2ban/fail2ban.sock]\n        end\n    end\n\n    API --&gt; LOKI\n    PROMTAIL --&gt; LOKI\n    LOKI --&gt; LOKI_DATA\n    PROMTAIL --&gt; PROMTAIL_POS\n    API --&gt; FAIL2BAN_SOCK\n    PROMTAIL --&gt; FAIL2BAN_LOG</code></pre>"},{"location":"servicios/docker/#configuracion-docker-compose","title":"\u2699\ufe0f Configuraci\u00f3n Docker Compose","text":""},{"location":"servicios/docker/#archivo-principal","title":"Archivo Principal","text":"<pre><code># docker-compose.yaml\nversion: '3.8'\n\nservices:\n  # API FastAPI\n  api:\n    build: \n      context: ./api\n      dockerfile: Dockerfile\n    container_name: fail2ban-api\n    restart: unless-stopped\n    ports:\n      - \"127.0.0.1:8000:8000\"  # Solo localhost\n    volumes:\n      - /var/run/fail2ban/fail2ban.sock:/var/run/fail2ban/fail2ban.sock\n      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n    environment:\n      - LOKI_QUERY_URL=http://loki:3100/loki/api/v1/query_range\n      - LOKI_WS_URL=ws://loki:3100/loki/api/v1/tail\n      - FAIL2BAN_SOCKET_PATH=/var/run/fail2ban/fail2ban.sock\n    depends_on:\n      - loki\n    networks:\n      - fail2ban_network\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  # Loki Log Storage\n  loki:\n    image: grafana/loki:latest\n    container_name: fail2ban-loki\n    restart: unless-stopped\n    ports:\n      - \"127.0.0.1:3100:3100\"  # Solo red Docker\n    volumes:\n      - ./loki/config.yaml:/etc/loki/local-config.yaml:ro\n      - loki_data:/loki\n    command: -config.file=/etc/loki/local-config.yaml\n    networks:\n      - fail2ban_network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  # Promtail Log Collector\n  promtail:\n    image: grafana/promtail:latest\n    container_name: fail2ban-promtail\n    restart: unless-stopped\n    volumes:\n      - ./promtail/promtail.yaml:/etc/promtail/config.yml:ro\n      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n      - promtail_positions:/tmp/positions\n    command: -config.file=/etc/promtail/config.yml\n    depends_on:\n      - loki\n    networks:\n      - fail2ban_network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n# Vol\u00famenes persistentes\nvolumes:\n  loki_data:\n    driver: local\n  promtail_positions:\n    driver: local\n\n# Red interna\nnetworks:\n  fail2ban_network:\n    driver: bridge\n    internal: false\n</code></pre>"},{"location":"servicios/docker/#comandos-utiles","title":"\ud83d\udd27 Comandos \u00datiles","text":""},{"location":"servicios/docker/#gestion-de-servicios","title":"Gesti\u00f3n de Servicios","text":"<pre><code># Iniciar todos los servicios\ndocker compose up -d\n\n# Ver estado de servicios\ndocker compose ps\n\n# Ver logs en tiempo real\ndocker compose logs -f\n\n# Reiniciar un servicio espec\u00edfico\ndocker compose restart api\n\n# Detener todos los servicios\ndocker compose down\n\n# Rebuild y restart\ndocker compose up -d --build --force-recreate\n</code></pre>"},{"location":"servicios/docker/#monitoreo-y-debugging","title":"Monitoreo y Debugging","text":"<pre><code># Estad\u00edsticas de recursos\ndocker stats\n\n# Inspeccionar contenedor\ndocker inspect fail2ban-api\n\n# Ejecutar comando en contenedor\ndocker exec -it fail2ban-api bash\n\n# Ver vol\u00famenes\ndocker volume ls\ndocker volume inspect aca-fail2ban-dashboard_loki_data\n</code></pre>"},{"location":"servicios/docker/#gestion-de-recursos","title":"\ud83d\udcca Gesti\u00f3n de Recursos","text":""},{"location":"servicios/docker/#limites-de-recursos","title":"L\u00edmites de Recursos","text":"<pre><code># Configuraci\u00f3n con l\u00edmites de recursos\nservices:\n  api:\n    deploy:\n      resources:\n        limits:\n          memory: 512M\n          cpus: '0.5'\n        reservations:\n          memory: 256M\n          cpus: '0.25'\n\n  loki:\n    deploy:\n      resources:\n        limits:\n          memory: 1G\n          cpus: '1.0'\n        reservations:\n          memory: 512M\n          cpus: '0.5'\n\n  promtail:\n    deploy:\n      resources:\n        limits:\n          memory: 128M\n          cpus: '0.2'\n        reservations:\n          memory: 64M\n          cpus: '0.1'\n</code></pre>"},{"location":"servicios/docker/#seguridad-y-networking","title":"\ud83d\udd12 Seguridad y Networking","text":""},{"location":"servicios/docker/#configuracion-de-red","title":"Configuraci\u00f3n de Red","text":"<pre><code># Red personalizada con configuraci\u00f3n avanzada\nnetworks:\n  fail2ban_network:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: \"false\"\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.20.0.0/16\n          gateway: 172.20.0.1\n</code></pre>"},{"location":"servicios/docker/#variables-de-entorno-seguras","title":"Variables de Entorno Seguras","text":"<pre><code># .env - Variables de entorno\nCOMPOSE_PROJECT_NAME=aca-fail2ban-dashboard\nLOKI_RETENTION_PERIOD=744h\nAPI_LOG_LEVEL=INFO\nPROMTAIL_LOG_LEVEL=info\n\n# Configuraci\u00f3n de red\nDOCKER_NETWORK_SUBNET=172.20.0.0/16\n</code></pre> <p>Mejores Pr\u00e1cticas Docker</p> <ul> <li>Usa .dockerignore para excluir archivos innecesarios</li> <li>Multi-stage builds para im\u00e1genes m\u00e1s peque\u00f1as</li> <li>Health checks para todos los servicios cr\u00edticos</li> <li>L\u00edmites de recursos para prevenir consumo excesivo</li> <li>Vol\u00famenes named para persistencia de datos</li> </ul> <p>Consideraciones de Seguridad</p> <ul> <li>Solo exp\u00f3n puertos necesarios al host</li> <li>Usa redes internas para comunicaci\u00f3n entre contenedores</li> <li>Monta vol\u00famenes como read-only cuando sea posible</li> <li>Mant\u00e9n im\u00e1genes actualizadas regularmente</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Revisa la documentaci\u00f3n de troubleshooting para resolver problemas comunes con Docker.</p>"},{"location":"servicios/fail2ban/","title":"\ud83d\udee1\ufe0f Fail2ban Security System","text":""},{"location":"servicios/fail2ban/#introduccion","title":"Introducci\u00f3n","text":"<p>Fail2ban es el sistema de prevenci\u00f3n de intrusiones (IPS) que monitorea logs del sistema en tiempo real y aplica baneos autom\u00e1ticos a IPs que muestran comportamiento malicioso. Es el coraz\u00f3n de la seguridad del sistema.</p>"},{"location":"servicios/fail2ban/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/fail2ban/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de Fail2ban</p> <ul> <li>\ud83d\udd0d Monitoreo en Tiempo Real: An\u00e1lisis continuo de logs del sistema</li> <li>\ud83d\udeab Baneos Autom\u00e1ticos: Aplicaci\u00f3n autom\u00e1tica de reglas de firewall</li> <li>\ud83c\udfe2 M\u00faltiples Jails: Protecci\u00f3n para diferentes servicios (SSH, HTTP, etc.)</li> <li>\u23f1\ufe0f Baneos Temporales: Configuraci\u00f3n flexible de tiempos de baneo</li> <li>\ud83d\udd17 Integraci\u00f3n iptables: Aplicaci\u00f3n directa de reglas de firewall</li> <li>\ud83d\udcca Logging Detallado: Registro completo de actividad maliciosa</li> </ul>"},{"location":"servicios/fail2ban/#arquitectura-de-fail2ban","title":"Arquitectura de Fail2ban","text":"<pre><code>graph TB\n    subgraph \"Sistema de Archivos\"\n        AUTH_LOG[\ud83d\udcdd /var/log/auth.log]\n        NGINX_LOG[\ud83d\udcdd /var/log/nginx/error.log]\n        CADDY_LOG[\ud83d\udcdd /var/log/caddy/access.log]\n        FAIL2BAN_LOG[\ud83d\udcdd /var/log/fail2ban.log]\n    end\n\n    subgraph \"Fail2ban Core\"\n        MONITOR[\ud83d\udc41\ufe0f Log Monitor]\n        FILTER[\ud83d\udd0d Filter Engine]\n        ACTION[\u26a1 Action Engine]\n        JAIL[\ud83c\udfe2 Jail Manager]\n    end\n\n    subgraph \"Acciones\"\n        IPTABLES[\ud83d\udd25 iptables Rules]\n        EMAIL[\ud83d\udce7 Email Alerts]\n        WEBHOOK[\ud83d\udd17 Webhooks]\n    end\n\n    subgraph \"Interfaces\"\n        CLIENT[\ud83d\udcbb fail2ban-client]\n        SOCKET[\ud83d\udd0c Unix Socket]\n        API_CONNECTION[\u2699\ufe0f FastAPI Connection]\n    end\n\n    AUTH_LOG --&gt; MONITOR\n    NGINX_LOG --&gt; MONITOR\n    CADDY_LOG --&gt; MONITOR\n\n    MONITOR --&gt; FILTER\n    FILTER --&gt; JAIL\n    JAIL --&gt; ACTION\n\n    ACTION --&gt; IPTABLES\n    ACTION --&gt; EMAIL\n    ACTION --&gt; WEBHOOK\n    ACTION --&gt; FAIL2BAN_LOG\n\n    CLIENT --&gt; SOCKET\n    API_CONNECTION --&gt; SOCKET\n    SOCKET --&gt; JAIL</code></pre>"},{"location":"servicios/fail2ban/#configuracion","title":"\u2699\ufe0f Configuraci\u00f3n","text":""},{"location":"servicios/fail2ban/#estructura-de-configuracion","title":"Estructura de Configuraci\u00f3n","text":"<pre><code>/etc/fail2ban/\n\u251c\u2500\u2500 fail2ban.conf          # Configuraci\u00f3n principal (NO MODIFICAR)\n\u251c\u2500\u2500 fail2ban.local         # Override de configuraci\u00f3n principal\n\u251c\u2500\u2500 jail.conf              # Configuraci\u00f3n de jails (NO MODIFICAR)\n\u251c\u2500\u2500 jail.local             # Override de jails personalizadas\n\u251c\u2500\u2500 jail.d/                # Configuraciones espec\u00edficas por servicio\n\u2502   \u251c\u2500\u2500 defaults-debian.conf\n\u2502   \u251c\u2500\u2500 sshd.local\n\u2502   \u2514\u2500\u2500 caddy.local\n\u251c\u2500\u2500 filter.d/              # Filtros para detectar patrones\n\u2502   \u251c\u2500\u2500 sshd.conf\n\u2502   \u251c\u2500\u2500 nginx-http-auth.conf\n\u2502   \u2514\u2500\u2500 caddy.conf\n\u251c\u2500\u2500 action.d/              # Acciones a ejecutar\n\u2502   \u251c\u2500\u2500 iptables-multiport.conf\n\u2502   \u251c\u2500\u2500 sendmail.conf\n\u2502   \u2514\u2500\u2500 webhook.conf\n\u2514\u2500\u2500 fail2ban.d/            # Configuraciones adicionales\n</code></pre>"},{"location":"servicios/fail2ban/#configuracion-principal","title":"Configuraci\u00f3n Principal","text":"<pre><code># /etc/fail2ban/jail.local\n[DEFAULT]\n# IPs que nunca ser\u00e1n baneadas (IMPORTANTE: Agregar tu IP)\nignoreip = 127.0.0.1/8 ::1 TU_IP_PUBLICA_AQUI\n\n# Tiempo de banneo por defecto (segundos)\nbantime = 3600          # 1 hora\n\n# Incremento de tiempo para baneos repetidos\nbantime.increment = true\nbantime.factor = 2\nbantime.multipliers = 2 4 8 16 32 64\nbantime.maxtime = 86400  # M\u00e1ximo 24 horas\n\n# Ventana de tiempo para contar intentos fallidos (segundos)\nfindtime = 600          # 10 minutos\n\n# N\u00famero m\u00e1ximo de intentos fallidos antes del baneo\nmaxretry = 5\n\n# Configuraci\u00f3n de backend\nbackend = auto\nusedns = warn\n\n# Configuraci\u00f3n de logging\nlogtarget = /var/log/fail2ban.log\nloglevel = INFO\nsyslogsocket = auto\n\n# Configuraci\u00f3n de email (opcional)\ndestemail = admin@tudominio.com\nsendername = Fail2ban-Alert\nmta = sendmail\n\n# Acci\u00f3n por defecto\naction = %(action_mwl)s  # Ban + email con logs\n\n# Configuraci\u00f3n de base de datos\ndbfile = /var/lib/fail2ban/fail2ban.sqlite3\ndbpurgeage = 86400      # Purgar registros m\u00e1s antiguos de 1 d\u00eda\n\n#\n# CONFIGURACI\u00d3N DE JAILS ESPEC\u00cdFICOS\n#\n\n# Protecci\u00f3n SSH\n[sshd]\nenabled = true\nport = ssh\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 86400         # 24 horas para SSH\nfindtime = 600          # 10 minutos\naction = %(action_mwl)s\n\n# Protecci\u00f3n para Caddy\n[caddy]\nenabled = true\nport = http,https\nfilter = caddy\nlogpath = /var/log/caddy/access.log\nmaxretry = 10\nbantime = 3600          # 1 hora\nfindtime = 600          # 10 minutos\n\n# Protecci\u00f3n para fuerza bruta HTTP\n[http-get-dos]\nenabled = true\nport = http,https\nfilter = http-get-dos\nlogpath = /var/log/caddy/access.log\nmaxretry = 300\nfindtime = 300          # 5 minutos\nbantime = 600           # 10 minutos ban\n\n# Protecci\u00f3n para escaneo de puertos\n[portscan]\nenabled = true\nfilter = portscan\nlogpath = /var/log/syslog\nmaxretry = 6\nfindtime = 600\nbantime = 86400         # 24 horas\n\n# Protecci\u00f3n para intentos de exploit\n[apache-badbots]\nenabled = true\nport = http,https\nfilter = apache-badbots\nlogpath = /var/log/caddy/access.log\nmaxretry = 2\nbantime = 172800        # 48 horas\n\n# Protecci\u00f3n para overflow de requests\n[apache-overflows]\nenabled = true\nport = http,https\nfilter = apache-overflows\nlogpath = /var/log/caddy/access.log\nmaxretry = 2\nbantime = 172800        # 48 horas\n</code></pre>"},{"location":"servicios/fail2ban/#filtros-personalizados","title":"Filtros Personalizados","text":"Filtro para CaddyFiltro para DoS HTTPFiltro para Exploits <pre><code># /etc/fail2ban/filter.d/caddy.conf\n[Definition]\n\n# Patr\u00f3n para detectar requests maliciosos en logs de Caddy\nfailregex = ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"status\":(?:400|401|403|404|405|408|409|410|412|413|414|417|429|500|502|503|504).*$\n            ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"user_agent\":\".*(?:sqlmap|nikto|nmap|scanner|bot).*\".*$\n            ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"uri\":\".*(?:\\.php|\\.asp|\\.jsp|admin|wp-admin|phpmyadmin).*\".*$\n\n# Patr\u00f3n para ignorar (IPs locales, health checks, etc.)\nignoreregex = ^.*\"remote_ip\":\"(?:127\\.0\\.0\\.1|::1)\".*$\n              ^.*\"user_agent\":\".*(?:HealthCheck|Monitoring|Pingdom).*\".*$\n\n# Configuraci\u00f3n del filtro\ndatepattern = \"ts\":\"%%Y-%%m-%%dT%%H:%%M:%%S\"\n</code></pre> <pre><code># /etc/fail2ban/filter.d/http-get-dos.conf\n[Definition]\n\n# Detectar muchos requests GET en poco tiempo\nfailregex = ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"method\":\"GET\".*$\n\n# Ignorar requests leg\u00edtimos\nignoreregex = ^.*\"user_agent\":\".*(?:GoogleBot|BingBot|SlackBot).*\".*$\n              ^.*\"uri\":\".*(?:\\.css|\\.js|\\.png|\\.jpg|\\.ico|\\.svg).*$\n\ndatepattern = \"ts\":\"%%Y-%%m-%%dT%%H:%%M:%%S\"\n</code></pre> <pre><code># /etc/fail2ban/filter.d/apache-overflows.conf\n[Definition]\n\n# Detectar intentos de overflow y exploits\nfailregex = ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"uri\":\".*(?:select|union|insert|drop|delete|script|alert|eval).*\".*$\n            ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"uri\":\".*(?:\\.\\./|\\.\\.\\|%2e%2e).*\".*$\n            ^.*\"remote_ip\":\"&lt;HOST&gt;\".*\"uri\":\".*(?:exec|system|shell_exec|passthru).*\".*$\n\ndatepattern = \"ts\":\"%%Y-%%m-%%dT%%H:%%M:%%S\"\n</code></pre>"},{"location":"servicios/fail2ban/#acciones-personalizadas","title":"Acciones Personalizadas","text":"Acci\u00f3n con WebhookAcci\u00f3n con Notificaci\u00f3n Slack <pre><code># /etc/fail2ban/action.d/webhook.conf\n[Definition]\n\n# Comando para ejecutar al banear\nactionstart = curl -X POST &lt;webhook_url&gt; \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\"action\":\"start\",\"jail\":\"&lt;name&gt;\",\"time\":\"&lt;time&gt;\"}'\n\nactionstop = curl -X POST &lt;webhook_url&gt; \\\n             -H \"Content-Type: application/json\" \\\n             -d '{\"action\":\"stop\",\"jail\":\"&lt;name&gt;\",\"time\":\"&lt;time&gt;\"}'\n\nactionban = curl -X POST &lt;webhook_url&gt; \\\n            -H \"Content-Type: application/json\" \\\n            -d '{\"action\":\"ban\",\"jail\":\"&lt;name&gt;\",\"ip\":\"&lt;ip&gt;\",\"time\":\"&lt;time&gt;\",\"failures\":\"&lt;failures&gt;\"}'\n\nactionunban = curl -X POST &lt;webhook_url&gt; \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\"action\":\"unban\",\"jail\":\"&lt;name&gt;\",\"ip\":\"&lt;ip&gt;\",\"time\":\"&lt;time&gt;\"}'\n\n[Init]\nwebhook_url = https://alertasfail2ban.xmakuno.com/api/webhooks/fail2ban\n</code></pre> <pre><code># /etc/fail2ban/action.d/slack.conf\n[Definition]\n\nactionban = curl -X POST &lt;slack_webhook_url&gt; \\\n            -H \"Content-Type: application/json\" \\\n            -d '{\"text\":\"\ud83d\udea8 *Fail2ban Alert*\\n*IP Baneada:* `&lt;ip&gt;`\\n*Jail:* `&lt;name&gt;`\\n*Servidor:* `&lt;fq-hostname&gt;`\\n*Tiempo:* `&lt;time&gt;`\\n*Intentos fallidos:* `&lt;failures&gt;`\"}'\n\nactionunban = curl -X POST &lt;slack_webhook_url&gt; \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\"text\":\"\u2705 *Fail2ban*\\n*IP Desbaneada:* `&lt;ip&gt;`\\n*Jail:* `&lt;name&gt;`\\n*Servidor:* `&lt;fq-hostname&gt;`\\n*Tiempo:* `&lt;time&gt;`\"}'\n\n[Init]\nslack_webhook_url = https://hooks.slack.com/services/TU_WEBHOOK_AQUI\n</code></pre>"},{"location":"servicios/fail2ban/#instalacion-y-configuracion","title":"\ud83d\ude80 Instalaci\u00f3n y Configuraci\u00f3n","text":""},{"location":"servicios/fail2ban/#instalacion-en-ubuntu-2204","title":"Instalaci\u00f3n en Ubuntu 22.04","text":"<pre><code># Instalar Fail2ban\nsudo apt update\nsudo apt install fail2ban\n\n# Instalar dependencias adicionales\nsudo apt install iptables-persistent\n\n# Verificar instalaci\u00f3n\nfail2ban-client --version\nsudo systemctl status fail2ban\n</code></pre>"},{"location":"servicios/fail2ban/#configuracion-inicial","title":"Configuraci\u00f3n Inicial","text":"<pre><code># Crear configuraci\u00f3n personalizada\nsudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\n\n# Editar configuraci\u00f3n principal\nsudo nano /etc/fail2ban/jail.local\n\n# Validar configuraci\u00f3n\nsudo fail2ban-client -t\n\n# Reiniciar servicio\nsudo systemctl restart fail2ban\n\n# Habilitar al arranque\nsudo systemctl enable fail2ban\n\n# Verificar jails activos\nsudo fail2ban-client status\n</code></pre>"},{"location":"servicios/fail2ban/#configuracion-de-integracion-con-iptables","title":"Configuraci\u00f3n de Integraci\u00f3n con iptables","text":"<pre><code># Verificar que iptables est\u00e9 disponible\nsudo iptables -L\n\n# Crear cadenas personalizadas para Fail2ban\nsudo iptables -N f2b-sshd\nsudo iptables -A f2b-sshd -j RETURN\nsudo iptables -I INPUT -p tcp --dport ssh -j f2b-sshd\n\n# Guardar reglas para persistencia\nsudo iptables-save &gt; /etc/iptables/rules.v4\n\n# Verificar integraci\u00f3n\nsudo fail2ban-client set sshd addignoreip 127.0.0.1\nsudo fail2ban-client get sshd ignoreip\n</code></pre>"},{"location":"servicios/fail2ban/#monitoreo-y-gestion","title":"\ud83d\udcca Monitoreo y Gesti\u00f3n","text":""},{"location":"servicios/fail2ban/#comandos-de-gestion-basicos","title":"Comandos de Gesti\u00f3n B\u00e1sicos","text":"<pre><code># Estado general\nsudo fail2ban-client status\n\n# Estado de jail espec\u00edfico\nsudo fail2ban-client status sshd\n\n# Listar IPs baneadas\nsudo fail2ban-client get sshd banip\n\n# Banear IP manualmente\nsudo fail2ban-client set sshd banip 192.168.1.100\n\n# Desbanear IP\nsudo fail2ban-client set sshd unbanip 192.168.1.100\n\n# Recargar configuraci\u00f3n\nsudo fail2ban-client reload\n\n# Recargar jail espec\u00edfico\nsudo fail2ban-client reload sshd\n</code></pre>"},{"location":"servicios/fail2ban/#comandos-de-informacion-avanzados","title":"Comandos de Informaci\u00f3n Avanzados","text":"<pre><code># Ver configuraci\u00f3n actual de jail\nsudo fail2ban-client get sshd logpath\nsudo fail2ban-client get sshd maxretry\nsudo fail2ban-client get sshd bantime\nsudo fail2ban-client get sshd findtime\n\n# Ver filtros aplicados\nsudo fail2ban-client get sshd filter\n\n# Ver acciones configuradas\nsudo fail2ban-client get sshd action\n\n# Estad\u00edsticas detalladas\nsudo fail2ban-client get sshd stats\n\n# Ver logs en tiempo real\nsudo tail -f /var/log/fail2ban.log\n</code></pre>"},{"location":"servicios/fail2ban/#scripts-de-monitoreo","title":"Scripts de Monitoreo","text":"Script de Estado GeneralScript de An\u00e1lisis de Logs <pre><code>#!/bin/bash\n# fail2ban-status.sh\n\necho \"=== ESTADO DE FAIL2BAN ===\"\necho \"Fecha: $(date)\"\necho \"==========================\"\n\n# Estado del servicio\necho \"\ud83d\udcca Estado del servicio:\"\nsudo systemctl status fail2ban --no-pager -l\n\n# Jails activos\necho -e \"\\n\ud83c\udfe2 Jails activos:\"\nsudo fail2ban-client status\n\n# Estad\u00edsticas por jail\necho -e \"\\n\ud83d\udcc8 Estad\u00edsticas detalladas:\"\nfor jail in $(sudo fail2ban-client status | grep \"Jail list:\" | cut -d: -f2 | tr ',' '\\n' | xargs); do\n    echo \"  === $jail ===\"\n    sudo fail2ban-client status $jail\n    echo \"\"\ndone\n\n# IPs baneadas recientemente\necho \"\ud83d\udeab IPs baneadas recientemente:\"\nsudo grep \"Ban \" /var/log/fail2ban.log | tail -10\n\necho \"==========================\"\n</code></pre> <pre><code>#!/bin/bash\n# fail2ban-analysis.sh\n\nLOG_FILE=\"/var/log/fail2ban.log\"\n\necho \"=== AN\u00c1LISIS DE LOGS FAIL2BAN ===\"\necho \"Per\u00edodo: \u00daltimas 24 horas\"\necho \"=================================\"\n\n# Top IPs baneadas\necho \"\ud83d\udd34 Top 10 IPs baneadas:\"\ngrep \"Ban \" $LOG_FILE | grep \"$(date '+%Y-%m-%d')\" | awk '{print $NF}' | sort | uniq -c | sort -nr | head -10\n\n# Distribuci\u00f3n por jails\necho -e \"\\n\ud83c\udfe2 Baneos por jail:\"\ngrep \"Ban \" $LOG_FILE | grep \"$(date '+%Y-%m-%d')\" | grep -o '\\[.*\\]' | sort | uniq -c | sort -nr\n\n# Actividad por horas\necho -e \"\\n\u23f0 Actividad por horas (hoy):\"\ngrep \"Ban \" $LOG_FILE | grep \"$(date '+%Y-%m-%d')\" | cut -d' ' -f1-2 | cut -d':' -f1-2 | sort | uniq -c\n\n# Pa\u00edses m\u00e1s activos (requiere geoip)\nif command -v geoiplookup &gt;/dev/null 2&gt;&amp;1; then\n    echo -e \"\\n\ud83c\udf0d Top pa\u00edses atacantes:\"\n    grep \"Ban \" $LOG_FILE | grep \"$(date '+%Y-%m-%d')\" | awk '{print $NF}' | sort | uniq | head -20 | while read ip; do\n        country=$(geoiplookup $ip | cut -d: -f2 | cut -d, -f1)\n        echo \"$country\"\n    done | sort | uniq -c | sort -nr | head -10\nfi\n\necho \"=================================\"\n</code></pre>"},{"location":"servicios/fail2ban/#integracion-con-fastapi","title":"\ud83d\udd0d Integraci\u00f3n con FastAPI","text":""},{"location":"servicios/fail2ban/#comunicacion-via-socket-unix","title":"Comunicaci\u00f3n via Socket Unix","text":"<p>La API FastAPI se comunica con Fail2ban a trav\u00e9s del socket Unix:</p> <pre><code># services/fail2ban_service.py\nimport socket\nimport json\nimport subprocess\nfrom pathlib import Path\n\nclass Fail2banService:\n    def __init__(self):\n        self.socket_path = \"/var/run/fail2ban/fail2ban.sock\"\n\n    def _execute_command(self, command: list) -&gt; str:\n        \"\"\"Ejecutar comando fail2ban-client\"\"\"\n        try:\n            result = subprocess.run(\n                [\"fail2ban-client\"] + command,\n                capture_output=True,\n                text=True,\n                timeout=30\n            )\n            if result.returncode != 0:\n                raise Exception(f\"Error: {result.stderr}\")\n            return result.stdout.strip()\n        except subprocess.TimeoutExpired:\n            raise Exception(\"Timeout ejecutando comando fail2ban\")\n        except Exception as e:\n            raise Exception(f\"Error ejecutando comando: {str(e)}\")\n\n    def get_status(self) -&gt; dict:\n        \"\"\"Obtener estado general de fail2ban\"\"\"\n        try:\n            output = self._execute_command([\"status\"])\n            return {\"status\": \"active\", \"output\": output}\n        except Exception as e:\n            return {\"status\": \"error\", \"error\": str(e)}\n\n    def get_jails(self) -&gt; list:\n        \"\"\"Obtener lista de jails activos\"\"\"\n        try:\n            output = self._execute_command([\"status\"])\n            jail_line = [line for line in output.split('\\n') if 'Jail list:' in line][0]\n            jails_str = jail_line.split(':', 1)[1].strip()\n            return [jail.strip() for jail in jails_str.split(',') if jail.strip()]\n        except Exception as e:\n            return []\n\n    def get_jail_status(self, jail: str) -&gt; dict:\n        \"\"\"Obtener estado de jail espec\u00edfico\"\"\"\n        try:\n            output = self._execute_command([\"status\", jail])\n\n            # Parsear output\n            lines = output.split('\\n')\n            status = {}\n\n            for line in lines:\n                if 'Currently failed:' in line:\n                    status['currently_failed'] = int(line.split(':')[1].strip())\n                elif 'Total failed:' in line:\n                    status['total_failed'] = int(line.split(':')[1].strip())\n                elif 'Currently banned:' in line:\n                    status['currently_banned'] = int(line.split(':')[1].strip())\n                elif 'Total banned:' in line:\n                    status['total_banned'] = int(line.split(':')[1].strip())\n                elif 'Banned IP list:' in line:\n                    banned_ips = line.split(':', 1)[1].strip()\n                    status['banned_ips'] = [ip.strip() for ip in banned_ips.split() if ip.strip()]\n\n            return status\n        except Exception as e:\n            return {\"error\": str(e)}\n\n    def ban_ip(self, jail: str, ip: str) -&gt; dict:\n        \"\"\"Banear IP en jail espec\u00edfico\"\"\"\n        try:\n            self._execute_command([\"set\", jail, \"banip\", ip])\n            return {\"success\": True, \"message\": f\"IP {ip} baneada en {jail}\"}\n        except Exception as e:\n            return {\"success\": False, \"error\": str(e)}\n\n    def unban_ip(self, jail: str, ip: str) -&gt; dict:\n        \"\"\"Desbanear IP en jail espec\u00edfico\"\"\"\n        try:\n            self._execute_command([\"set\", jail, \"unbanip\", ip])\n            return {\"success\": True, \"message\": f\"IP {ip} desbaneada en {jail}\"}\n        except Exception as e:\n            return {\"success\": False, \"error\": str(e)}\n</code></pre>"},{"location":"servicios/fail2ban/#endpoints-de-la-api","title":"Endpoints de la API","text":"<pre><code># controllers/jails_controller.py\nfrom fastapi import APIRouter, HTTPException\nfrom services.fail2ban_service import Fail2banService\n\nrouter = APIRouter(prefix=\"/api/jails\", tags=[\"jails\"])\nfail2ban_service = Fail2banService()\n\n@router.get(\"/\")\nasync def get_jails():\n    \"\"\"Obtener lista de jails con sus estados\"\"\"\n    try:\n        jails = fail2ban_service.get_jails()\n        result = []\n\n        for jail in jails:\n            status = fail2ban_service.get_jail_status(jail)\n            result.append({\n                \"name\": jail,\n                \"status\": \"active\",\n                **status\n            })\n\n        return result\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\n@router.get(\"/{jail}\")\nasync def get_jail_status(jail: str):\n    \"\"\"Obtener estado de jail espec\u00edfico\"\"\"\n    try:\n        status = fail2ban_service.get_jail_status(jail)\n        if \"error\" in status:\n            raise HTTPException(status_code=404, detail=status[\"error\"])\n        return status\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\n@router.post(\"/{jail}/ban\")\nasync def ban_ip(jail: str, ip: str):\n    \"\"\"Banear IP en jail espec\u00edfico\"\"\"\n    try:\n        result = fail2ban_service.ban_ip(jail, ip)\n        if not result[\"success\"]:\n            raise HTTPException(status_code=400, detail=result[\"error\"])\n        return result\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\n@router.post(\"/{jail}/unban\")\nasync def unban_ip(jail: str, ip: str):\n    \"\"\"Desbanear IP en jail espec\u00edfico\"\"\"\n    try:\n        result = fail2ban_service.unban_ip(jail, ip)\n        if not result[\"success\"]:\n            raise HTTPException(status_code=400, detail=result[\"error\"])\n        return result\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n</code></pre>"},{"location":"servicios/fail2ban/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"servicios/fail2ban/#problemas-comunes","title":"Problemas Comunes","text":"Fail2ban No Banea IPsIPs Leg\u00edtimas BaneadasRendimiento Lento <pre><code># 1. Verificar que el servicio est\u00e9 activo\nsudo systemctl status fail2ban\n\n# 2. Verificar configuraci\u00f3n\nsudo fail2ban-client -t\n\n# 3. Verificar logs\nsudo tail -f /var/log/fail2ban.log\n\n# 4. Probar filtro manualmente\nsudo fail2ban-regex /var/log/auth.log /etc/fail2ban/filter.d/sshd.conf\n\n# 5. Verificar que los logs existan y tengan contenido\nls -la /var/log/auth.log\nsudo tail /var/log/auth.log\n\n# 6. Verificar configuraci\u00f3n de jail\nsudo fail2ban-client get sshd logpath\nsudo fail2ban-client get sshd filter\n</code></pre> <pre><code># 1. Desbanear inmediatamente\nsudo fail2ban-client set sshd unbanip IP_LEGITIMA\n\n# 2. Agregar a ignoreip\nsudo nano /etc/fail2ban/jail.local\n# Agregar IP a la l\u00ednea ignoreip\n\n# 3. Recargar configuraci\u00f3n\nsudo fail2ban-client reload\n\n# 4. Verificar que se aplic\u00f3\nsudo fail2ban-client get sshd ignoreip\n</code></pre> <pre><code># 1. Verificar uso de CPU/memoria\ntop -p $(pgrep fail2ban-server)\n\n# 2. Optimizar configuraci\u00f3n\n# Reducir polling de logs\nsudo nano /etc/fail2ban/jail.local\n# Agregar: backend = polling\n\n# 3. Limpiar base de datos\nsudo fail2ban-client stop\nsudo rm /var/lib/fail2ban/fail2ban.sqlite3\nsudo systemctl start fail2ban\n\n# 4. Verificar logs grandes\ndu -sh /var/log/auth.log /var/log/caddy/access.log\n</code></pre>"},{"location":"servicios/fail2ban/#scripts-de-diagnostico","title":"Scripts de Diagn\u00f3stico","text":"<pre><code>#!/bin/bash\n# fail2ban-diagnostics.sh\n\necho \"=== DIAGN\u00d3STICO COMPLETO DE FAIL2BAN ===\"\n\n# 1. Estado del servicio\necho \"\ud83d\udcca Estado del servicio:\"\nsudo systemctl status fail2ban --no-pager\n\n# 2. Validaci\u00f3n de configuraci\u00f3n\necho -e \"\\n\u2705 Validaci\u00f3n de configuraci\u00f3n:\"\nsudo fail2ban-client -t\n\n# 3. Jails activos\necho -e \"\\n\ud83c\udfe2 Jails activos:\"\nsudo fail2ban-client status\n\n# 4. Verificar archivos de log\necho -e \"\\n\ud83d\udcdd Archivos de log:\"\nfor log in /var/log/auth.log /var/log/caddy/access.log /var/log/fail2ban.log; do\n    if [ -f \"$log\" ]; then\n        echo \"\u2705 $log: $(wc -l &lt; $log) l\u00edneas\"\n    else\n        echo \"\u274c $log: NO EXISTE\"\n    fi\ndone\n\n# 5. Verificar iptables\necho -e \"\\n\ud83d\udd25 Reglas iptables de Fail2ban:\"\nsudo iptables -L | grep -A 10 -B 2 f2b\n\n# 6. \u00daltimas actividades\necho -e \"\\n\ud83d\udea8 \u00daltimas actividades (\u00faltimas 10):\"\nsudo tail -10 /var/log/fail2ban.log\n\n# 7. Test de filtros\necho -e \"\\n\ud83d\udd0d Test de filtros principales:\"\nif [ -f /var/log/auth.log ]; then\n    echo \"Testando filtro sshd:\"\n    sudo fail2ban-regex /var/log/auth.log /etc/fail2ban/filter.d/sshd.conf | tail -5\nfi\n\necho -e \"\\n=== FIN DIAGN\u00d3STICO ===\"\n</code></pre> <p>Consideraciones de Seguridad</p> <ol> <li>Siempre incluye tu IP en <code>ignoreip</code> para evitar auto-baneos</li> <li>Monitorea logs regularmente para detectar problemas</li> <li>Mant\u00e9n backups de configuraciones funcionales</li> <li>Prueba filtros antes de ponerlos en producci\u00f3n</li> <li>Configura alertas para baneos de IPs cr\u00edticas</li> </ol> <p>Mejores Pr\u00e1cticas</p> <ul> <li>Usa bantime incremental para atacantes persistentes</li> <li>Configura diferentes niveles de protecci\u00f3n por servicio</li> <li>Implementa alertas por email/webhook para eventos cr\u00edticos</li> <li>Analiza logs regularmente para ajustar filtros</li> <li>Documenta todas las IPs en whitelist con justificaci\u00f3n</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Revisa la documentaci\u00f3n de Docker para entender c\u00f3mo los contenedores interact\u00faan con Fail2ban y el sistema de logs.</p>"},{"location":"servicios/loki/","title":"\ud83d\uddc4\ufe0f Loki Log Aggregation","text":""},{"location":"servicios/loki/#introduccion","title":"Introducci\u00f3n","text":"<p>Loki es el sistema de agregaci\u00f3n de logs que almacena, indexa y permite consultar todos los logs del sistema de manera eficiente. Dise\u00f1ado por Grafana Labs, Loki est\u00e1 optimizado para manejar grandes vol\u00famenes de logs con un enfoque en la indexaci\u00f3n por etiquetas.</p>"},{"location":"servicios/loki/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/loki/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de Loki</p> <ul> <li>\ud83d\udcca Almacenamiento Distribuido: Escalable para grandes vol\u00famenes de logs</li> <li>\ud83c\udff7\ufe0f Indexaci\u00f3n por Etiquetas: B\u00fasquedas r\u00e1pidas usando labels en lugar de full-text</li> <li>\ud83d\udddc\ufe0f Compresi\u00f3n Eficiente: Optimizaci\u00f3n de almacenamiento con m\u00faltiples algoritmos</li> <li>\u23f1\ufe0f Retenci\u00f3n Configurable: Gesti\u00f3n autom\u00e1tica del ciclo de vida de logs</li> <li>\ud83d\udd0d LogQL: Lenguaje de consulta poderoso similar a PromQL</li> <li>\ud83d\udce1 API REST Completa: Endpoints para ingesta, consulta y gesti\u00f3n</li> </ul>"},{"location":"servicios/loki/#arquitectura-de-loki","title":"Arquitectura de Loki","text":"<pre><code>graph TB\n    subgraph \"Ingesta de Datos\"\n        PROMTAIL[\ud83d\udcdc Promtail Agent]\n        FLUENT[\ud83c\udf0a Fluentd]\n        VECTOR[\u26a1 Vector]\n        SYSLOG[\ud83d\udcdd Syslog]\n    end\n\n    subgraph \"Loki Core\"\n        DISTRIBUTOR[\ud83d\udce4 Distributor]\n        INGESTER[\ud83d\udce5 Ingester]\n        QUERIER[\ud83d\udd0d Querier]\n        QUERY_FRONTEND[\ud83c\udfad Query Frontend]\n    end\n\n    subgraph \"Storage Layer\"\n        INDEX[\ud83d\udcc7 Index Store]\n        CHUNKS[\ud83d\udce6 Chunk Store]\n\n        subgraph \"BoltDB Shipper\"\n            ACTIVE_INDEX[\ud83d\udcc1 Active Index]\n            CACHED_INDEX[\ud83d\uddc3\ufe0f Cached Index]\n        end\n\n        subgraph \"Filesystem\"\n            CHUNK_FILES[\ud83d\udcc4 Chunk Files]\n            INDEX_FILES[\ud83d\udccb Index Files]\n        end\n    end\n\n    subgraph \"APIs &amp; Clients\"\n        HTTP_API[\ud83c\udf10 HTTP API]\n        WEBSOCKET[\u26a1 WebSocket]\n        GRAFANA[\ud83d\udcca Grafana]\n        FASTAPI[\u2699\ufe0f FastAPI Client]\n    end\n\n    PROMTAIL --&gt; DISTRIBUTOR\n    FLUENT --&gt; DISTRIBUTOR\n    VECTOR --&gt; DISTRIBUTOR\n    SYSLOG --&gt; DISTRIBUTOR\n\n    DISTRIBUTOR --&gt; INGESTER\n    INGESTER --&gt; INDEX\n    INGESTER --&gt; CHUNKS\n\n    INDEX --&gt; ACTIVE_INDEX\n    INDEX --&gt; CACHED_INDEX\n    CHUNKS --&gt; CHUNK_FILES\n\n    QUERY_FRONTEND --&gt; QUERIER\n    QUERIER --&gt; INDEX\n    QUERIER --&gt; CHUNKS\n\n    HTTP_API --&gt; QUERY_FRONTEND\n    WEBSOCKET --&gt; QUERIER\n    GRAFANA --&gt; HTTP_API\n    FASTAPI --&gt; HTTP_API</code></pre>"},{"location":"servicios/loki/#configuracion","title":"\u2699\ufe0f Configuraci\u00f3n","text":""},{"location":"servicios/loki/#archivo-de-configuracion-principal","title":"Archivo de Configuraci\u00f3n Principal","text":"<pre><code># loki/config.yaml\nauth_enabled: false\n\nserver:\n  http_listen_port: 3100\n  grpc_listen_port: 9096\n  grpc_server_max_recv_msg_size: 104857600  # 100MB\n  grpc_server_max_send_msg_size: 104857600  # 100MB\n  http_server_read_timeout: 30s\n  http_server_write_timeout: 30s\n\ncommon:\n  path_prefix: /loki\n  storage:\n    filesystem:\n      chunks_directory: /loki/chunks\n      rules_directory: /loki/rules\n  replication_factor: 1\n  ring:\n    kvstore:\n      store: inmemory\n\n# Configuraci\u00f3n de esquema de datos\nschema_config:\n  configs:\n    - from: 2020-10-24\n      store: boltdb-shipper\n      object_store: filesystem\n      schema: v11\n      index:\n        prefix: index_\n        period: 24h\n\n# Configuraci\u00f3n de almacenamiento\nstorage_config:\n  boltdb_shipper:\n    active_index_directory: /loki/boltdb-shipper-active\n    cache_location: /loki/boltdb-shipper-cache\n    cache_ttl: 24h\n    shared_store: filesystem\n  filesystem:\n    directory: /loki/chunks\n\n# L\u00edmites y configuraci\u00f3n de performance\nlimits_config:\n  # L\u00edmites de ingesta\n  ingestion_rate_mb: 4              # 4MB/s por tenant\n  ingestion_burst_size_mb: 6        # Burst de 6MB\n  max_streams_per_user: 10000       # M\u00e1ximo streams por usuario\n  max_line_size: 256000             # M\u00e1ximo tama\u00f1o de l\u00ednea (256KB)\n\n  # L\u00edmites de consulta\n  max_query_parallelism: 32         # Consultas paralelas\n  max_query_time: \"5m\"              # Timeout de consultas\n  max_query_length: \"12000h\"        # M\u00e1ximo rango de tiempo (500 d\u00edas)\n  max_query_series: 500             # M\u00e1ximo series por consulta\n\n  # L\u00edmites de retenci\u00f3n\n  retention_period: \"744h\"          # 31 d\u00edas de retenci\u00f3n\n\n  # L\u00edmites de streams\n  max_streams_matchers_per_query: 1000\n  max_concurrent_tail_requests: 10\n\n  # Configuraci\u00f3n de chunks\n  max_chunk_age: \"1h\"               # Edad m\u00e1xima de chunk antes de flush\n  chunk_idle_period: \"30m\"          # Per\u00edodo de inactividad antes de flush\n  chunk_block_size: 262144          # Tama\u00f1o de bloque (256KB)\n  chunk_target_size: 1572864        # Tama\u00f1o objetivo de chunk (1.5MB)\n  chunk_retain_period: \"15m\"        # Tiempo de retenci\u00f3n en memoria\n\n# Configuraci\u00f3n del ciclo de vida de tablas\ntable_manager:\n  retention_deletes_enabled: true\n  retention_period: \"744h\"          # 31 d\u00edas\n\n# Configuraci\u00f3n de compresi\u00f3n\nchunk_store_config:\n  max_look_back_period: \"744h\"      # M\u00e1ximo per\u00edodo hacia atr\u00e1s\n\n# Configuraci\u00f3n de consultas\nquery_range:\n  results_cache:\n    cache:\n      embedded_cache:\n        enabled: true\n        max_size_mb: 100\n        ttl: 1h\n  cache_results: true\n  max_retries: 5\n  parallelise_shardable_queries: true\n  split_queries_by_interval: 30m\n\n# Configuraci\u00f3n de frontend\nfrontend:\n  max_outstanding_per_tenant: 256\n  compress_responses: true\n\n# Configuraci\u00f3n de logging\nlog_level: info\nlog_format: json\n\n# Configuraci\u00f3n de m\u00e9tricas\nanalytics:\n  reporting_enabled: false\n\n# Configuraci\u00f3n de runtime\nruntime_config:\n  file: /etc/loki/runtime.yaml\n</code></pre>"},{"location":"servicios/loki/#configuracion-de-runtime","title":"Configuraci\u00f3n de Runtime","text":"<pre><code># loki/runtime.yaml\n# Configuraci\u00f3n que puede ser recargada sin reiniciar Loki\n\n# Configuraci\u00f3n por tenant (en caso de multi-tenancy)\noverrides:\n  \"fake\":  # tenant por defecto cuando auth_enabled=false\n    ingestion_rate_mb: 8\n    max_streams_per_user: 20000\n    max_line_size: 512000\n\n# Configuraci\u00f3n global de l\u00edmites\nglobal:\n  # Configuraci\u00f3n de retenci\u00f3n din\u00e1mica\n  retention_period: \"744h\"\n\n  # Configuraci\u00f3n de compresi\u00f3n\n  chunk_encoding: \"gzip\"\n\n  # Configuraci\u00f3n de performance\n  query_timeout: \"300s\"\n  ingestion_timeout: \"60s\"\n</code></pre>"},{"location":"servicios/loki/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code># docker-compose.yaml (secci\u00f3n de Loki)\nversion: '3.8'\n\nservices:\n  loki:\n    image: grafana/loki:latest\n    container_name: fail2ban-loki\n    restart: unless-stopped\n    ports:\n      - \"3100:3100\"\n    volumes:\n      - ./loki/config.yaml:/etc/loki/local-config.yaml:ro\n      - ./loki/runtime.yaml:/etc/loki/runtime.yaml:ro\n      - loki_data:/loki\n    command: -config.file=/etc/loki/local-config.yaml\n    environment:\n      - JAEGER_AGENT_HOST=\n      - JAEGER_ENDPOINT=\n      - JAEGER_SAMPLER_TYPE=\n      - JAEGER_SAMPLER_PARAM=\n    networks:\n      - fail2ban_network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n      start_period: 30s\n    deploy:\n      resources:\n        limits:\n          memory: 512M\n          cpus: '0.5'\n        reservations:\n          memory: 256M\n          cpus: '0.25'\n\nvolumes:\n  loki_data:\n    driver: local\n    driver_opts:\n      type: none\n      o: bind\n      device: /var/lib/docker/volumes/loki_data\n\nnetworks:\n  fail2ban_network:\n    driver: bridge\n</code></pre>"},{"location":"servicios/loki/#api-y-endpoints","title":"\ud83d\udce1 API y Endpoints","text":""},{"location":"servicios/loki/#endpoints-principales","title":"Endpoints Principales","text":"Endpoint M\u00e9todo Descripci\u00f3n Uso en el Sistema <code>/ready</code> GET Health check Verificar disponibilidad <code>/metrics</code> GET M\u00e9tricas Prometheus Monitoreo del sistema <code>/loki/api/v1/push</code> POST Ingesta de logs Promtail env\u00eda logs <code>/loki/api/v1/query</code> GET Consulta instant\u00e1nea B\u00fasquedas espec\u00edficas <code>/loki/api/v1/query_range</code> GET Consulta con rango Dashboard y API <code>/loki/api/v1/tail</code> GET/WS Streaming en tiempo real WebSockets del dashboard <code>/loki/api/v1/labels</code> GET Lista de etiquetas Autocompletado en UI <code>/loki/api/v1/label/{name}/values</code> GET Valores de etiqueta Filtros din\u00e1micos"},{"location":"servicios/loki/#ejemplos-de-consultas-logql","title":"Ejemplos de Consultas LogQL","text":"Consultas B\u00e1sicasFiltros de TextoAgregaciones y M\u00e9tricasConsultas Avanzadas <pre><code># Todos los logs de fail2ban\n{job=\"fail2ban\"}\n\n# Logs del jail SSH solamente\n{job=\"fail2ban\", jail=\"sshd\"}\n\n# Logs de nivel ERROR\n{job=\"fail2ban\", level=\"ERROR\"}\n\n# Logs de los \u00faltimos 5 minutos\n{job=\"fail2ban\"}[5m]\n</code></pre> <pre><code># Logs que contienen \"Ban\"\n{job=\"fail2ban\"} |= \"Ban\"\n\n# Logs que NO contienen \"INFO\"\n{job=\"fail2ban\"} != \"INFO\"\n\n# B\u00fasqueda con regex (case insensitive)\n{job=\"fail2ban\"} |~ \"(?i)ban.*ip\"\n\n# M\u00faltiples filtros\n{job=\"fail2ban\", jail=\"sshd\"} |= \"Ban\" |~ \"192\\.168\\.\"\n</code></pre> <pre><code># Conteo de logs por minuto\ncount_over_time({job=\"fail2ban\"}[1m])\n\n# Rate de logs por segundo\nrate({job=\"fail2ban\"}[5m])\n\n# Suma por jail\nsum by (jail) (count_over_time({job=\"fail2ban\"}[1h]))\n\n# Top IPs baneadas\ntopk(10, \n  sum by (banned_ip) (\n    count_over_time({job=\"fail2ban\"} |= \"Ban\" | json | line_format \"{{.banned_ip}}\"[1h])\n  )\n)\n</code></pre> <pre><code># Logs estructurados con parsing JSON\n{job=\"fail2ban\"} | json | level=\"ERROR\"\n\n# Extracci\u00f3n de campos con regex\n{job=\"fail2ban\"} \n| regex \"Ban (?P&lt;ip&gt;[0-9.]+)\" \n| line_format \"IP baneada: {{.ip}}\"\n\n# Filtros por tiempo y condiciones\n{job=\"fail2ban\", jail=\"sshd\"} \n| json \n| timestamp &gt; \"2024-01-01T00:00:00Z\" \n| failures &gt; 5\n\n# Combinaci\u00f3n de m\u00faltiples streams\n({job=\"fail2ban\", jail=\"sshd\"} or {job=\"fail2ban\", jail=\"caddy\"}) \n|= \"Ban\"\n</code></pre>"},{"location":"servicios/loki/#integracion-con-el-sistema","title":"\ud83d\udd0d Integraci\u00f3n con el Sistema","text":""},{"location":"servicios/loki/#flujo-de-datos","title":"Flujo de Datos","text":"<pre><code>sequenceDiagram\n    participant F as Fail2ban\n    participant FS as File System\n    participant P as Promtail\n    participant L as Loki\n    participant API as FastAPI\n    participant UI as Dashboard\n\n    Note over F,UI: Pipeline completo de logs\n\n    F-&gt;&gt;FS: Escribe logs\n    Note right of FS: /var/log/fail2ban.log\n\n    P-&gt;&gt;FS: Lee logs continuamente\n    P-&gt;&gt;P: Procesa con pipeline stages\n    P-&gt;&gt;L: Env\u00eda logs v\u00eda HTTP API\n    Note right of L: POST /loki/api/v1/push\n\n    L-&gt;&gt;L: Indexa por etiquetas\n    L-&gt;&gt;L: Almacena chunks comprimidos\n\n    UI-&gt;&gt;API: Solicita logs del dashboard\n    API-&gt;&gt;L: Query con LogQL\n    Note right of L: GET /loki/api/v1/query_range\n    L-&gt;&gt;API: Retorna logs estructurados\n    API-&gt;&gt;UI: Respuesta JSON\n\n    UI-&gt;&gt;API: Establece WebSocket\n    API-&gt;&gt;L: Tail logs en tiempo real\n    Note right of L: WebSocket /loki/api/v1/tail\n    L-&gt;&gt;API: Stream de logs nuevos\n    API-&gt;&gt;UI: Forward via WebSocket</code></pre>"},{"location":"servicios/loki/#configuracion-de-labels-y-parsing","title":"Configuraci\u00f3n de Labels y Parsing","text":"<p>Los logs de Fail2ban son procesados por Promtail y enviados a Loki con las siguientes etiquetas:</p> <pre><code># Estructura de labels en Loki\n{\n  \"job\": \"fail2ban\",                    # Identificador del trabajo\n  \"component\": \"fail2ban.server\",      # Componente que gener\u00f3 el log\n  \"level\": \"INFO|WARNING|ERROR\",       # Nivel de log\n  \"jail\": \"sshd|caddy|nginx\",          # Jail espec\u00edfico (si aplica)\n  \"host\": \"hostname\",                  # Hostname del servidor\n  \"source\": \"/var/log/fail2ban.log\"    # Archivo fuente\n}\n</code></pre>"},{"location":"servicios/loki/#optimizacion-de-queries","title":"Optimizaci\u00f3n de Queries","text":"<pre><code># Ejemplos de consultas optimizadas desde FastAPI\nclass LokiOptimizedQueries:\n\n    @staticmethod\n    def get_recent_bans(hours: int = 24) -&gt; str:\n        \"\"\"Query optimizada para baneos recientes\"\"\"\n        return f'''\n        {{job=\"fail2ban\"}} \n        |= \"Ban \" \n        | regex \"Ban (?P&lt;ip&gt;[0-9.]+)\" \n        | line_format \"{{{{.timestamp}}}} {{{{.ip}}}}\"\n        '''\n\n    @staticmethod\n    def get_jail_stats(jail: str = None) -&gt; str:\n        \"\"\"Estad\u00edsticas por jail\"\"\"\n        jail_filter = f', jail=\"{jail}\"' if jail else ''\n        return f'''\n        sum by (jail) (\n          count_over_time({{job=\"fail2ban\"{jail_filter}}}[1h])\n        )\n        '''\n\n    @staticmethod\n    def get_top_attackers(limit: int = 10) -&gt; str:\n        \"\"\"Top IPs atacantes\"\"\"\n        return f'''\n        topk({limit}, \n          sum by (ip) (\n            count_over_time(\n              {{job=\"fail2ban\"}} \n              |= \"Ban \" \n              | regex \"Ban (?P&lt;ip&gt;[0-9.]+)\"[24h]\n            )\n          )\n        )\n        '''\n\n    @staticmethod\n    def get_error_rate() -&gt; str:\n        \"\"\"Rate de errores\"\"\"\n        return '''\n        rate(\n          {job=\"fail2ban\", level=\"ERROR\"}[5m]\n        )\n        '''\n</code></pre>"},{"location":"servicios/loki/#monitoreo-y-metricas","title":"\ud83d\udcca Monitoreo y M\u00e9tricas","text":""},{"location":"servicios/loki/#metricas-clave-de-loki","title":"M\u00e9tricas Clave de Loki","text":"<pre><code># M\u00e9tricas importantes a monitorear\ncurl http://localhost:3100/metrics | grep -E \"(loki_ingester|loki_distributor)\"\n\n# Streams activos\nloki_ingester_streams_total\n\n# Lines received\nloki_distributor_lines_received_total\n\n# Bytes received\nloki_distributor_bytes_received_total\n\n# Query duration\nloki_logql_querystats_duration_seconds\n\n# Chunk utilization\nloki_ingester_chunk_utilization\n\n# Index size\nloki_chunk_store_index_entries_per_chunk\n</code></pre>"},{"location":"servicios/loki/#script-de-monitoreo","title":"Script de Monitoreo","text":"<pre><code>#!/bin/bash\n# loki-monitor.sh\n\necho \"=== ESTADO DE LOKI ===\"\necho \"Fecha: $(date)\"\necho \"======================\"\n\n# 1. Health check\necho \"\ud83d\udd0d Health Check:\"\nif curl -s http://localhost:3100/ready | grep -q \"ready\"; then\n    echo \"\u2705 Loki est\u00e1 funcionando\"\nelse\n    echo \"\u274c Loki no responde\"\nfi\n\n# 2. Estad\u00edsticas b\u00e1sicas\necho -e \"\\n\ud83d\udcca Estad\u00edsticas:\"\ncurl -s http://localhost:3100/metrics | grep -E \"(loki_ingester_streams_total|loki_distributor_lines_received_total)\" | while read line; do\n    metric=$(echo $line | cut -d' ' -f1)\n    value=$(echo $line | cut -d' ' -f2)\n    echo \"  $metric: $value\"\ndone\n\n# 3. Uso de almacenamiento\necho -e \"\\n\ud83d\udcbe Almacenamiento:\"\nif [ -d \"/var/lib/docker/volumes/aca-fail2ban-dashboard_loki_data\" ]; then\n    du -sh /var/lib/docker/volumes/aca-fail2ban-dashboard_loki_data/_data\nelse\n    echo \"Directorio de datos no encontrado\"\nfi\n\n# 4. Test de query b\u00e1sica\necho -e \"\\n\ud83d\udd0d Test de Query:\"\nquery_result=$(curl -s \"http://localhost:3100/loki/api/v1/query?query={job=\\\"fail2ban\\\"}&amp;limit=1\")\nif echo $query_result | grep -q '\"status\":\"success\"'; then\n    echo \"\u2705 Queries funcionando correctamente\"\nelse\n    echo \"\u274c Error en queries\"\nfi\n\n# 5. Logs recientes de contenedor\necho -e \"\\n\ud83d\udcdd Logs del Contenedor (\u00faltimas 5 l\u00edneas):\"\ndocker logs fail2ban-loki --tail 5 2&gt;/dev/null || echo \"No se pudieron obtener logs\"\n\necho \"======================\"\n</code></pre>"},{"location":"servicios/loki/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"servicios/loki/#problemas-comunes","title":"Problemas Comunes","text":"Loki No Recibe LogsQueries LentasAlmacenamiento Lleno <pre><code># 1. Verificar que Loki est\u00e9 corriendo\ndocker ps | grep loki\ncurl http://localhost:3100/ready\n\n# 2. Verificar logs de Loki\ndocker logs fail2ban-loki\n\n# 3. Verificar conectividad desde Promtail\ndocker exec fail2ban-promtail curl http://loki:3100/ready\n\n# 4. Test manual de push\ncurl -X POST http://localhost:3100/loki/api/v1/push \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"streams\": [\n      {\n        \"stream\": {\"job\": \"test\"},\n        \"values\": [[\"'$(date +%s%N)'\", \"test log message\"]]\n      }\n    ]\n  }'\n</code></pre> <pre><code># 1. Verificar uso de recursos\ndocker stats fail2ban-loki\n\n# 2. Verificar m\u00e9tricas de query\ncurl -s http://localhost:3100/metrics | grep query_duration\n\n# 3. Optimizar configuraci\u00f3n\n# Editar loki/config.yaml\nlimits_config:\n  max_query_parallelism: 16  # Reducir si hay problemas de memoria\n  max_query_time: \"2m\"       # Timeout m\u00e1s corto\n\n# 4. Verificar tama\u00f1o de datos\ndu -sh /var/lib/docker/volumes/aca-fail2ban-dashboard_loki_data/_data\n</code></pre> <pre><code># 1. Verificar retenci\u00f3n\ngrep retention_period loki/config.yaml\n\n# 2. Forzar limpieza manual\ndocker exec fail2ban-loki rm -rf /loki/boltdb-shipper-cache/*\n\n# 3. Reducir per\u00edodo de retenci\u00f3n\n# Editar loki/config.yaml\nlimits_config:\n  retention_period: \"168h\"  # 7 d\u00edas en lugar de 31\n\n# 4. Verificar compresi\u00f3n\ncurl -s http://localhost:3100/metrics | grep chunk_compression\n</code></pre>"},{"location":"servicios/loki/#optimizacion-de-performance","title":"Optimizaci\u00f3n de Performance","text":"<pre><code># Configuraci\u00f3n optimizada para mejor performance\n# loki/config-optimized.yaml\n\nlimits_config:\n  # Reducir ingesta para mayor estabilidad\n  ingestion_rate_mb: 2\n  ingestion_burst_size_mb: 3\n\n  # Optimizar chunks para mejor compresi\u00f3n\n  max_chunk_age: \"2h\"\n  chunk_idle_period: \"1h\"\n  chunk_block_size: 131072    # 128KB\n  chunk_target_size: 1048576  # 1MB\n\n  # Optimizar queries\n  max_query_parallelism: 16\n  max_query_time: \"2m\"\n\n  # Retenci\u00f3n m\u00e1s agresiva\n  retention_period: \"168h\"    # 7 d\u00edas\n\n# Cache m\u00e1s agresivo\nquery_range:\n  results_cache:\n    cache:\n      embedded_cache:\n        enabled: true\n        max_size_mb: 200\n        ttl: 2h\n\n# Compresi\u00f3n mejorada\nchunk_store_config:\n  chunk_cache_config:\n    embedded_cache:\n      enabled: true\n      max_size_mb: 100\n      ttl: 1h\n</code></pre> <p>Mejores Pr\u00e1cticas para Loki</p> <ol> <li>Usa etiquetas con moderaci\u00f3n - Pocas etiquetas de alta cardinalidad</li> <li>Optimiza LogQL queries - Usa filtros de etiquetas antes que filtros de texto</li> <li>Configura retenci\u00f3n apropiada - Balance entre historial y espacio</li> <li>Monitorea m\u00e9tricas regularmente - Previene problemas de performance</li> <li>Usa compresi\u00f3n - Significativo ahorro de espacio</li> </ol> <p>Consideraciones de Recursos</p> <ul> <li>RAM: 256MB m\u00ednimo, 512MB recomendado para logs de fail2ban</li> <li>CPU: 0.25 vCPU m\u00ednimo, 0.5 vCPU recomendado</li> <li>Almacenamiento: Planifica 100-500MB por d\u00eda dependiendo de la actividad</li> <li>Red: Bandwidth suficiente para ingesta desde Promtail</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Revisa la documentaci\u00f3n de Promtail para entender c\u00f3mo los logs son recolectados y enviados a Loki.</p>"},{"location":"servicios/promtail/","title":"\ud83d\udcdc Promtail Log Collection Agent","text":""},{"location":"servicios/promtail/#introduccion","title":"Introducci\u00f3n","text":"<p>Promtail es el agente recolector de logs que act\u00faa como puente entre los archivos de log del sistema y Loki. Es responsable de leer, procesar, estructurar y enviar los logs de Fail2ban a Loki para su almacenamiento y consulta.</p>"},{"location":"servicios/promtail/#funciones-principales","title":"\ud83c\udfaf Funciones Principales","text":""},{"location":"servicios/promtail/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<p>Capacidades de Promtail</p> <ul> <li>\ud83d\udcd6 Lectura Continua: Monitoreo en tiempo real de archivos de log</li> <li>\ud83d\udd04 Pipeline de Procesamiento: Transformaci\u00f3n y estructuraci\u00f3n de logs</li> <li>\ud83c\udff7\ufe0f Etiquetado Autom\u00e1tico: Asignaci\u00f3n de labels para indexaci\u00f3n en Loki</li> <li>\ud83d\udcdd Parsing Avanzado: Extracci\u00f3n de campos con regex y parsing JSON</li> <li>\ud83d\udd04 Multiline Support: Manejo de logs multi-l\u00ednea complejos</li> <li>\ud83d\udcbe Position Tracking: Seguimiento de posici\u00f3n para evitar duplicados</li> <li>\ud83d\udd17 Delivery Guarantees: Buffer management para garantizar entrega</li> </ul>"},{"location":"servicios/promtail/#arquitectura-de-promtail","title":"Arquitectura de Promtail","text":"<pre><code>graph TB\n    subgraph \"Fuentes de Logs\"\n        F2B_LOG[\ud83d\udcdd /var/log/fail2ban.log]\n        AUTH_LOG[\ud83d\udcdd /var/log/auth.log]\n        SYSLOG[\ud83d\udcdd /var/log/syslog]\n        CUSTOM_LOG[\ud83d\udcdd Custom Logs]\n    end\n\n    subgraph \"Promtail Agent\"\n        TAILER[\ud83d\udc41\ufe0f File Tailer]\n        PIPELINE[\ud83d\udd04 Pipeline Processor]\n        BUFFER[\ud83d\udcbe Buffer Manager]\n        CLIENT[\ud83d\udce4 HTTP Client]\n\n        subgraph \"Pipeline Stages\"\n            MULTILINE[\ud83d\udcc4 Multiline]\n            REGEX[\ud83d\udd0d Regex Parser]\n            JSON_PARSER[\ud83d\udccb JSON Parser]\n            TIMESTAMP[\u23f0 Timestamp]\n            LABELS[\ud83c\udff7\ufe0f Labels]\n            OUTPUT[\ud83d\udce4 Output]\n        end\n    end\n\n    subgraph \"Destino\"\n        LOKI[\ud83d\uddc4\ufe0f Loki]\n    end\n\n    subgraph \"Estado Persistente\"\n        POSITIONS[\ud83d\udccd positions.yaml]\n    end\n\n    F2B_LOG --&gt; TAILER\n    AUTH_LOG --&gt; TAILER\n    SYSLOG --&gt; TAILER\n    CUSTOM_LOG --&gt; TAILER\n\n    TAILER --&gt; PIPELINE\n    PIPELINE --&gt; MULTILINE\n    MULTILINE --&gt; REGEX\n    REGEX --&gt; JSON_PARSER\n    JSON_PARSER --&gt; TIMESTAMP\n    TIMESTAMP --&gt; LABELS\n    LABELS --&gt; OUTPUT\n    OUTPUT --&gt; BUFFER\n    BUFFER --&gt; CLIENT\n    CLIENT --&gt; LOKI\n\n    TAILER &lt;--&gt; POSITIONS</code></pre>"},{"location":"servicios/promtail/#configuracion","title":"\u2699\ufe0f Configuraci\u00f3n","text":""},{"location":"servicios/promtail/#archivo-de-configuracion-principal","title":"Archivo de Configuraci\u00f3n Principal","text":"<pre><code># promtail/promtail.yaml\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n  log_level: info\n  log_format: json\n\npositions:\n  filename: /tmp/positions.yaml\n\nclients:\n  - url: http://loki:3100/loki/api/v1/push\n    batchwait: 1s\n    batchsize: 1048576  # 1MB\n    timeout: 10s\n    backoff_config:\n      min_period: 500ms\n      max_period: 5m\n      max_retries: 10\n    # Headers personalizados si es necesario\n    headers:\n      X-Scope-OrgID: \"fail2ban-logs\"\n\nscrape_configs:\n  # Configuraci\u00f3n principal para logs de Fail2ban\n  - job_name: fail2ban\n    static_configs:\n      - targets:\n          - localhost\n        labels:\n          job: fail2ban\n          host: __hostname__\n          source: /var/log/fail2ban.log\n    pipeline_stages:\n      # Stage 1: Multiline - Agrupa logs relacionados\n      - multiline:\n          firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n          max_wait_time: 3s\n          max_lines: 100\n\n      # Stage 2: Regex - Extrae campos estructurados del log\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.-]+)\\[(?P&lt;pid&gt;\\d+)\\]: (?P&lt;level&gt;\\w+)\\s*(?:\\[(?P&lt;jail&gt;[\\w-]+)\\]\\s*)?(?P&lt;action&gt;\\w+)?\\s*(?P&lt;message&gt;.*)'\n          source: __line__\n\n      # Stage 3: Timestamp - Parsea la fecha y hora\n      - timestamp:\n          source: timestamp\n          format: '2006-01-02 15:04:05,000'\n          location: 'UTC'\n\n      # Stage 4: Extracci\u00f3n de IP baneada (si aplica)\n      - regex:\n          expression: '(?i)ban\\s+(?P&lt;banned_ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+)'\n          source: message\n\n      # Stage 5: Extracci\u00f3n de IP desbaneada (si aplica)\n      - regex:\n          expression: '(?i)unban\\s+(?P&lt;unbanned_ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+)'\n          source: message\n\n      # Stage 6: Extracci\u00f3n de intentos fallidos\n      - regex:\n          expression: '(?i)found\\s+(?P&lt;attempts&gt;\\d+)'\n          source: message\n\n      # Stage 7: Labels - Asigna etiquetas para Loki\n      - labels:\n          component: component\n          level: level\n          jail: jail\n          action: action\n\n      # Stage 8: Template - Formateo del mensaje final\n      - template:\n          source: formatted_message\n          template: |\n            {{- if .banned_ip -}}\n            IP {{.banned_ip}} banned in jail {{.jail}}\n            {{- else if .unbanned_ip -}}\n            IP {{.unbanned_ip}} unbanned from jail {{.jail}}\n            {{- else -}}\n            {{.message}}\n            {{- end -}}\n\n      # Stage 9: Output - Mensaje final\n      - output:\n          source: formatted_message\n\n      # Stage 10: Drop - Filtrar logs no deseados\n      - drop:\n          expression: '.*\\[DEBUG\\].*'\n          older_than: 24h\n\n  # Configuraci\u00f3n para logs de autenticaci\u00f3n SSH\n  - job_name: ssh-auth\n    static_configs:\n      - targets:\n          - localhost\n        labels:\n          job: ssh-auth\n          host: __hostname__\n          source: /var/log/auth.log\n    pipeline_stages:\n      # Multiline para logs de SSH\n      - multiline:\n          firstline: '^\\w{3}\\s+\\d{1,2} \\d{2}:\\d{2}:\\d{2}'\n          max_wait_time: 2s\n\n      # Regex para parsear logs de auth\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\w{3}\\s+\\d{1,2} \\d{2}:\\d{2}:\\d{2}) (?P&lt;host&gt;\\S+) (?P&lt;program&gt;\\w+)(?:\\[(?P&lt;pid&gt;\\d+)\\])?: (?P&lt;message&gt;.*)'\n\n      # Timestamp para logs de auth (formato syslog)\n      - timestamp:\n          source: timestamp\n          format: 'Jan _2 15:04:05'\n          location: 'Local'\n\n      # Extracci\u00f3n de IP de conexi\u00f3n SSH\n      - regex:\n          expression: '(?i)from\\s+(?P&lt;source_ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+)'\n          source: message\n\n      # Extracci\u00f3n de usuario SSH\n      - regex:\n          expression: '(?i)user\\s+(?P&lt;username&gt;\\w+)'\n          source: message\n\n      # Labels espec\u00edficos para SSH\n      - labels:\n          program: program\n          source_ip: source_ip\n          username: username\n\n      # Filtrar solo eventos relevantes de SSH\n      - match:\n          selector: '{job=\"ssh-auth\"}'\n          stages:\n            - regex:\n                expression: '(?i)(failed|invalid|error|refused|disconnect)'\n            - labels:\n                event_type: security\n\n      - output:\n          source: message\n\n  # Configuraci\u00f3n para logs del sistema\n  - job_name: system\n    static_configs:\n      - targets:\n          - localhost\n        labels:\n          job: system\n          host: __hostname__\n          source: /var/log/syslog\n    pipeline_stages:\n      - multiline:\n          firstline: '^\\w{3}\\s+\\d{1,2} \\d{2}:\\d{2}:\\d{2}'\n\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\w{3}\\s+\\d{1,2} \\d{2}:\\d{2}:\\d{2}) (?P&lt;host&gt;\\S+) (?P&lt;program&gt;[\\w.-]+)(?:\\[(?P&lt;pid&gt;\\d+)\\])?: (?P&lt;message&gt;.*)'\n\n      - timestamp:\n          source: timestamp\n          format: 'Jan _2 15:04:05'\n          location: 'Local'\n\n      - labels:\n          program: program\n\n      # Solo enviar logs de nivel WARNING o superior\n      - match:\n          selector: '{job=\"system\"}'\n          stages:\n            - regex:\n                expression: '(?i)(warn|error|crit|alert|emerg|fail)'\n            - labels:\n                severity: high\n\n      - output:\n          source: message\n\n# Configuraci\u00f3n de m\u00e9tricas\nmetric_relabel_configs:\n  - source_labels: [__name__]\n    regex: 'promtail_.*'\n    target_label: instance\n    replacement: 'fail2ban-promtail'\n</code></pre>"},{"location":"servicios/promtail/#configuracion-de-docker-compose","title":"Configuraci\u00f3n de Docker Compose","text":"<pre><code># docker-compose.yaml (secci\u00f3n de Promtail)\nversion: '3.8'\n\nservices:\n  promtail:\n    image: grafana/promtail:latest\n    container_name: fail2ban-promtail\n    restart: unless-stopped\n    volumes:\n      # Archivo de configuraci\u00f3n\n      - ./promtail/promtail.yaml:/etc/promtail/config.yml:ro\n\n      # Archivos de log a leer\n      - /var/log/fail2ban.log:/var/log/fail2ban.log:ro\n      - /var/log/auth.log:/var/log/auth.log:ro\n      - /var/log/syslog:/var/log/syslog:ro\n\n      # Estado persistente\n      - promtail_positions:/tmp/positions\n\n      # Socket de Docker para obtener labels adicionales (opcional)\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    command: \n      - '-config.file=/etc/promtail/config.yml'\n      - '-server.http-listen-port=9080'\n      - '-server.grpc-listen-port=0'\n    environment:\n      - HOSTNAME=${HOSTNAME:-localhost}\n    networks:\n      - fail2ban_network\n    depends_on:\n      - loki\n    healthcheck:\n      test: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider http://localhost:9080/ready || exit 1\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 10s\n    deploy:\n      resources:\n        limits:\n          memory: 128M\n          cpus: '0.2'\n        reservations:\n          memory: 64M\n          cpus: '0.1'\n    labels:\n      - \"traefik.enable=false\"  # No exponer externamente\n\nvolumes:\n  promtail_positions:\n    driver: local\n\nnetworks:\n  fail2ban_network:\n    driver: bridge\n</code></pre>"},{"location":"servicios/promtail/#pipeline-de-procesamiento-detallado","title":"\ud83d\udd04 Pipeline de Procesamiento Detallado","text":""},{"location":"servicios/promtail/#stages-de-procesamiento","title":"Stages de Procesamiento","text":"1. Multiline Stage2. Regex Stage3. Timestamp Stage4. Labels Stage <pre><code># Agrupa l\u00edneas relacionadas\n- multiline:\n    firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n    max_wait_time: 3s\n    max_lines: 100\n</code></pre> <p>Prop\u00f3sito: Combina m\u00faltiples l\u00edneas que pertenecen a un solo evento de log.</p> <pre><code># Extrae campos estructurados\n- regex:\n    expression: '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.-]+)\\[(?P&lt;pid&gt;\\d+)\\]: (?P&lt;level&gt;\\w+)\\s*(?:\\[(?P&lt;jail&gt;[\\w-]+)\\]\\s*)?(?P&lt;action&gt;\\w+)?\\s*(?P&lt;message&gt;.*)'\n    source: __line__\n</code></pre> <p>Campos extra\u00eddos: - <code>timestamp</code>: Fecha y hora del evento - <code>component</code>: Componente que gener\u00f3 el log (ej: fail2ban.server) - <code>pid</code>: Process ID - <code>level</code>: Nivel de log (INFO, WARNING, ERROR) - <code>jail</code>: Jail espec\u00edfico (sshd, caddy, etc.) - <code>action</code>: Acci\u00f3n realizada (Ban, Unban, Found, etc.) - <code>message</code>: Mensaje completo del log</p> <pre><code># Parsea timestamp para Loki\n- timestamp:\n    source: timestamp\n    format: '2006-01-02 15:04:05,000'\n    location: 'UTC'\n</code></pre> <p>Prop\u00f3sito: Convierte el timestamp del log al formato que Loki entiende.</p> <pre><code># Asigna etiquetas para indexaci\u00f3n\n- labels:\n    component: component\n    level: level\n    jail: jail\n    action: action\n</code></pre> <p>Resultado: Labels que permiten filtrado eficiente en Loki.</p>"},{"location":"servicios/promtail/#ejemplo-de-transformacion","title":"Ejemplo de Transformaci\u00f3n","text":"<pre><code># Log original de Fail2ban\n2024-01-21 10:30:45,123 fail2ban.server[1234]: INFO    [sshd] Ban 192.168.1.100\n\n# Despu\u00e9s del procesamiento\n{\n  \"timestamp\": \"2024-01-21T10:30:45.123Z\",\n  \"labels\": {\n    \"job\": \"fail2ban\",\n    \"component\": \"fail2ban.server\",\n    \"level\": \"INFO\",\n    \"jail\": \"sshd\",\n    \"action\": \"Ban\",\n    \"host\": \"server01\"\n  },\n  \"line\": \"IP 192.168.1.100 banned in jail sshd\",\n  \"extracted_fields\": {\n    \"banned_ip\": \"192.168.1.100\",\n    \"pid\": \"1234\"\n  }\n}\n</code></pre>"},{"location":"servicios/promtail/#monitoreo-y-metricas","title":"\ud83d\udcca Monitoreo y M\u00e9tricas","text":""},{"location":"servicios/promtail/#metricas-de-promtail","title":"M\u00e9tricas de Promtail","text":"<pre><code># Endpoint de m\u00e9tricas\ncurl http://localhost:9080/metrics\n\n# M\u00e9tricas clave\npromtail_files_active_total          # Archivos siendo monitoreados\npromtail_read_bytes_total            # Bytes le\u00eddos de archivos\npromtail_read_lines_total            # L\u00edneas le\u00eddas\npromtail_sent_bytes_total            # Bytes enviados a Loki\npromtail_sent_entries_total          # Entradas enviadas\npromtail_dropped_entries_total       # Entradas descartadas\npromtail_request_duration_seconds    # Duraci\u00f3n de requests a Loki\n</code></pre>"},{"location":"servicios/promtail/#script-de-monitoreo","title":"Script de Monitoreo","text":"<pre><code>#!/bin/bash\n# promtail-monitor.sh\n\necho \"=== ESTADO DE PROMTAIL ===\"\necho \"Fecha: $(date)\"\necho \"==========================\"\n\n# 1. Health check\necho \"\ud83d\udd0d Health Check:\"\nif curl -s http://localhost:9080/ready | grep -q \"ready\"; then\n    echo \"\u2705 Promtail est\u00e1 funcionando\"\nelse\n    echo \"\u274c Promtail no responde\"\nfi\n\n# 2. Archivos siendo monitoreados\necho -e \"\\n\ud83d\udcc1 Archivos Activos:\"\ncurl -s http://localhost:9080/metrics | grep promtail_files_active_total | awk '{print \"  Archivos monitoreados: \" $2}'\n\n# 3. Estad\u00edsticas de lectura\necho -e \"\\n\ud83d\udcd6 Estad\u00edsticas de Lectura:\"\ncurl -s http://localhost:9080/metrics | grep -E \"(promtail_read_lines_total|promtail_read_bytes_total)\" | while read line; do\n    metric=$(echo $line | awk '{print $1}' | cut -d'{' -f1)\n    value=$(echo $line | awk '{print $2}')\n    case $metric in\n        promtail_read_lines_total) echo \"  L\u00edneas le\u00eddas: $value\" ;;\n        promtail_read_bytes_total) echo \"  Bytes le\u00eddos: $value\" ;;\n    esac\ndone\n\n# 4. Estad\u00edsticas de env\u00edo\necho -e \"\\n\ud83d\udce4 Estad\u00edsticas de Env\u00edo:\"\ncurl -s http://localhost:9080/metrics | grep -E \"(promtail_sent_entries_total|promtail_dropped_entries_total)\" | while read line; do\n    metric=$(echo $line | awk '{print $1}' | cut -d'{' -f1)\n    value=$(echo $line | awk '{print $2}')\n    case $metric in\n        promtail_sent_entries_total) echo \"  Entradas enviadas: $value\" ;;\n        promtail_dropped_entries_total) echo \"  Entradas descartadas: $value\" ;;\n    esac\ndone\n\n# 5. Estado de posiciones\necho -e \"\\n\ud83d\udccd Estado de Posiciones:\"\nif [ -f \"/tmp/positions.yaml\" ]; then\n    echo \"  Archivo de posiciones existe\"\n    echo \"  Tama\u00f1o: $(du -h /tmp/positions.yaml | cut -f1)\"\n    echo \"  Archivos tracked: $(grep -c \"filename\" /tmp/positions.yaml 2&gt;/dev/null || echo \"0\")\"\nelse\n    echo \"  \u274c Archivo de posiciones no encontrado\"\nfi\n\n# 6. Conectividad con Loki\necho -e \"\\n\ud83d\udd17 Conectividad con Loki:\"\nif docker exec fail2ban-promtail wget -q --spider http://loki:3100/ready 2&gt;/dev/null; then\n    echo \"\u2705 Conexi\u00f3n con Loki exitosa\"\nelse\n    echo \"\u274c No se puede conectar con Loki\"\nfi\n\n# 7. Logs recientes del contenedor\necho -e \"\\n\ud83d\udcdd Logs Recientes (\u00faltimas 3 l\u00edneas):\"\ndocker logs fail2ban-promtail --tail 3 2&gt;/dev/null | sed 's/^/  /'\n\necho \"==========================\"\n</code></pre>"},{"location":"servicios/promtail/#configuraciones-avanzadas","title":"\ud83d\udd27 Configuraciones Avanzadas","text":""},{"location":"servicios/promtail/#filtros-y-transformaciones-personalizadas","title":"Filtros y Transformaciones Personalizadas","text":"<pre><code># Configuraci\u00f3n avanzada para diferentes tipos de logs\nscrape_configs:\n  - job_name: fail2ban-advanced\n    static_configs:\n      - targets: [localhost]\n        labels:\n          job: fail2ban\n          environment: production\n    pipeline_stages:\n      # Multiline mejorado\n      - multiline:\n          firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n          max_wait_time: 5s\n          max_lines: 50\n\n      # JSON parsing si el log est\u00e1 en formato JSON\n      - json:\n          expressions:\n            timestamp: timestamp\n            level: level\n            message: message\n            jail: jail\n\n      # Regex condicional basado en el contenido\n      - match:\n          selector: '{job=\"fail2ban\"}'\n          stages:\n            - regex:\n                expression: '(?i)ban\\s+(?P&lt;ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+)'\n                source: message\n            - template:\n                source: action_type\n                template: 'ban'\n            - labels:\n                action_type: action_type\n                banned_ip: ip\n\n      # Otro match para unbans\n      - match:\n          selector: '{job=\"fail2ban\"}'\n          stages:\n            - regex:\n                expression: '(?i)unban\\s+(?P&lt;ip&gt;\\d+\\.\\d+\\.\\d+\\.\\d+)'\n                source: message\n            - template:\n                source: action_type\n                template: 'unban'\n            - labels:\n                action_type: action_type\n                unbanned_ip: ip\n\n      # Geo-location de IPs (usando external service)\n      - template:\n          source: geo_lookup_url\n          template: 'http://ip-api.com/json/{{.banned_ip}}'\n\n      # Rate limiting de logs\n      - limit:\n          rate: 100\n          burst: 200\n          drop: true\n\n      # Sampling para logs de debugging\n      - sampling:\n          rate: 0.1  # Solo 10% de los logs DEBUG\n\n      # Metrics generation\n      - metrics:\n          promtail_logs_processed_total:\n            type: counter\n            description: \"Total logs processed by Promtail\"\n            config:\n              value: 1\n              action: inc\n\n      - output:\n          source: message\n</code></pre>"},{"location":"servicios/promtail/#configuracion-para-alta-disponibilidad","title":"Configuraci\u00f3n para Alta Disponibilidad","text":"<pre><code># promtail-ha.yaml - Configuraci\u00f3n para alta disponibilidad\nserver:\n  http_listen_port: 9080\n  grpc_listen_port: 0\n  log_level: info\n  register_instrumentation: true\n  graceful_shutdown_timeout: 30s\n\npositions:\n  filename: /tmp/positions.yaml\n  sync_period: 10s\n  ignore_invalid_yaml: false\n\nclients:\n  # M\u00faltiples endpoints de Loki para HA\n  - url: http://loki-1:3100/loki/api/v1/push\n    name: loki-primary\n    batchwait: 1s\n    batchsize: 1048576\n    timeout: 10s\n    backoff_config:\n      min_period: 500ms\n      max_period: 5m\n      max_retries: 10\n    external_labels:\n      cluster: primary\n\n  - url: http://loki-2:3100/loki/api/v1/push\n    name: loki-secondary\n    batchwait: 1s\n    batchsize: 1048576\n    timeout: 10s\n    backoff_config:\n      min_period: 500ms\n      max_period: 5m\n      max_retries: 5\n    external_labels:\n      cluster: secondary\n\n# Configuraci\u00f3n de targeting con service discovery\nscrape_configs:\n  - job_name: fail2ban\n    file_sd_configs:\n      - files:\n          - /etc/promtail/targets/*.yaml\n        refresh_interval: 10s\n    pipeline_stages:\n      # Pipeline optimizado para HA\n      - multiline:\n          firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n          max_wait_time: 3s\n\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.-]+)\\[(?P&lt;pid&gt;\\d+)\\]: (?P&lt;level&gt;\\w+)\\s*(?:\\[(?P&lt;jail&gt;[\\w-]+)\\]\\s*)?(?P&lt;message&gt;.*)'\n\n      - timestamp:\n          source: timestamp\n          format: '2006-01-02 15:04:05,000'\n\n      - labels:\n          component: component\n          level: level\n          jail: jail\n          instance: '{{env \"HOSTNAME\"}}'\n\n      - output:\n          source: message\n\n# Limits para prevenir sobrecarga\nlimits_config:\n  readline_rate: 10000\n  readline_burst: 20000\n  max_streams: 5000\n</code></pre>"},{"location":"servicios/promtail/#troubleshooting","title":"\ud83d\udd0d Troubleshooting","text":""},{"location":"servicios/promtail/#problemas-comunes","title":"Problemas Comunes","text":"Promtail No Lee ArchivosLogs No Llegan a LokiPipeline No Parsea Correctamente <pre><code># 1. Verificar permisos de archivos\nls -la /var/log/fail2ban.log\n\n# 2. Verificar que el archivo existe\ndocker exec fail2ban-promtail ls -la /var/log/fail2ban.log\n\n# 3. Verificar configuraci\u00f3n de scrape\ndocker exec fail2ban-promtail cat /etc/promtail/config.yml\n\n# 4. Verificar posiciones\ncat /tmp/positions.yaml\n\n# 5. Forzar re-lectura eliminando posiciones\nsudo rm /tmp/positions.yaml\ndocker restart fail2ban-promtail\n</code></pre> <pre><code># 1. Verificar conectividad con Loki\ndocker exec fail2ban-promtail wget -qO- http://loki:3100/ready\n\n# 2. Verificar logs de Promtail\ndocker logs fail2ban-promtail | grep -i error\n\n# 3. Test manual de push\ndocker exec fail2ban-promtail promtail -config.file=/etc/promtail/config.yml -dry-run\n\n# 4. Verificar m\u00e9tricas de env\u00edo\ncurl -s http://localhost:9080/metrics | grep promtail_sent\n</code></pre> <pre><code># 1. Test de regex en l\u00ednea de comandos\necho \"2024-01-21 10:30:45,123 fail2ban.server[1234]: INFO [sshd] Ban 192.168.1.100\" | \\\ngrep -P '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3})'\n\n# 2. Verificar logs de debugging\n# Cambiar log_level a debug en promtail.yaml\nserver:\n  log_level: debug\n\n# 3. Usar herramientas de testing de LogQL\n# https://grafana.com/docs/loki/latest/logql/\n\n# 4. Verificar con dry-run mode\ndocker run --rm -v $(pwd)/promtail:/etc/promtail grafana/promtail:latest \\\n  -config.file=/etc/promtail/promtail.yaml -dry-run -inspect\n</code></pre>"},{"location":"servicios/promtail/#optimizacion-de-performance","title":"Optimizaci\u00f3n de Performance","text":"<pre><code># Configuraci\u00f3n optimizada para mejor performance\nserver:\n  http_listen_port: 9080\n  log_level: warn  # Reducir logging\n\npositions:\n  filename: /tmp/positions.yaml\n  sync_period: 30s  # Sync menos frecuente\n\nclients:\n  - url: http://loki:3100/loki/api/v1/push\n    batchwait: 5s      # Batches m\u00e1s grandes\n    batchsize: 2097152  # 2MB batches\n    timeout: 30s       # Timeout m\u00e1s largo\n\n    # Configuraci\u00f3n de retry optimizada\n    backoff_config:\n      min_period: 1s\n      max_period: 10m\n      max_retries: 5\n\n# Configuraci\u00f3n de l\u00edmites\nlimits_config:\n  readline_rate: 50000    # L\u00edneas por segundo\n  readline_burst: 100000  # Burst de l\u00edneas\n  max_streams: 1000       # M\u00e1ximo streams simult\u00e1neos\n\nscrape_configs:\n  - job_name: fail2ban\n    static_configs:\n      - targets: [localhost]\n    pipeline_stages:\n      # Pipeline simplificado para mejor performance\n      - multiline:\n          firstline: '^\\d{4}-\\d{2}-\\d{2}'\n          max_wait_time: 1s  # Tiempo de espera reducido\n\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.-]+).*: (?P&lt;level&gt;\\w+).*?(?P&lt;message&gt;.*)'\n\n      - timestamp:\n          source: timestamp\n          format: '2006-01-02 15:04:05,000'\n\n      - labels:\n          level: level\n\n      # Filtrar solo logs importantes\n      - drop:\n          expression: '.*DEBUG.*'\n\n      - output:\n          source: message\n</code></pre>"},{"location":"servicios/promtail/#casos-de-uso-especificos","title":"\ud83d\udccb Casos de Uso Espec\u00edficos","text":""},{"location":"servicios/promtail/#configuracion-para-multiples-servicios","title":"Configuraci\u00f3n para M\u00faltiples Servicios","text":"<pre><code># promtail-multi-service.yaml\nscrape_configs:\n  # Fail2ban logs\n  - job_name: fail2ban\n    static_configs:\n      - targets: [localhost]\n        labels:\n          job: fail2ban\n          service: security\n    pipeline_stages:\n      - multiline:\n          firstline: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}'\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P&lt;component&gt;[\\w.-]+)\\[(?P&lt;pid&gt;\\d+)\\]: (?P&lt;level&gt;\\w+)\\s*(?:\\[(?P&lt;jail&gt;[\\w-]+)\\]\\s*)?(?P&lt;message&gt;.*)'\n      - timestamp:\n          source: timestamp\n          format: '2006-01-02 15:04:05,000'\n      - labels:\n          component: component\n          level: level\n          jail: jail\n      - output:\n          source: message\n\n  # Caddy access logs\n  - job_name: caddy-access\n    static_configs:\n      - targets: [localhost]\n        labels:\n          job: caddy\n          log_type: access\n    pipeline_stages:\n      - json:\n          expressions:\n            timestamp: ts\n            level: level\n            method: request.method\n            uri: request.uri\n            status: response.status\n            duration: response.duration\n            remote_ip: request.remote_ip\n            user_agent: request.headers.User-Agent\n      - timestamp:\n          source: timestamp\n          format: RFC3339\n      - labels:\n          method: method\n          status: status\n          level: level\n      - template:\n          source: formatted_message\n          template: '{{.method}} {{.uri}} {{.status}} {{.duration}}s from {{.remote_ip}}'\n      - output:\n          source: formatted_message\n\n  # System logs\n  - job_name: system\n    static_configs:\n      - targets: [localhost]\n        labels:\n          job: system\n    pipeline_stages:\n      - regex:\n          expression: '^(?P&lt;timestamp&gt;\\w{3}\\s+\\d{1,2} \\d{2}:\\d{2}:\\d{2}) (?P&lt;host&gt;\\S+) (?P&lt;program&gt;[\\w.-]+)(?:\\[(?P&lt;pid&gt;\\d+)\\])?: (?P&lt;message&gt;.*)'\n      - timestamp:\n          source: timestamp\n          format: 'Jan _2 15:04:05'\n          location: 'Local'\n      - labels:\n          program: program\n      - match:\n          selector: '{job=\"system\"}'\n          stages:\n            - regex:\n                expression: '(?i)(error|warn|crit|alert|emerg)'\n            - labels:\n                severity: high\n      - output:\n          source: message\n</code></pre> <p>Mejores Pr\u00e1cticas para Promtail</p> <ol> <li>Usa multiline apropiadamente - Agrupa logs relacionados correctamente</li> <li>Optimiza regex patterns - Patterns eficientes mejoran performance</li> <li>Filtra logs innecesarios - Usa drop stages para reducir volumen</li> <li>Monitorea m\u00e9tricas - Vigila rates de lectura y env\u00edo</li> <li>Configura positions correctamente - Evita p\u00e9rdida de datos en reinicios</li> </ol> <p>Consideraciones de Recursos</p> <ul> <li>RAM: 64MB m\u00ednimo, 128MB recomendado</li> <li>CPU: 0.1 vCPU m\u00ednimo, 0.2 vCPU recomendado  </li> <li>Almacenamiento: Minimal para positions file</li> <li>Red: Bandwidth para env\u00edo a Loki (t\u00edpicamente bajo)</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Revisa la documentaci\u00f3n de la API FastAPI para entender c\u00f3mo el backend consume y expone los datos de Loki.</p>"},{"location":"servidor/droplet-setup/","title":"\ud83d\ude80 Configuraci\u00f3n del Droplet","text":""},{"location":"servidor/droplet-setup/#creacion-del-droplet","title":"Creaci\u00f3n del Droplet","text":""},{"location":"servidor/droplet-setup/#especificaciones-recomendadas","title":"Especificaciones Recomendadas","text":"<p>Configuraci\u00f3n DigitalOcean</p> <ul> <li>SO: Ubuntu 22.04 LTS</li> <li>Plan: Basic ($24/mes)</li> <li>CPU: 2 vCPUs</li> <li>RAM: 4GB</li> <li>SSD: 80GB</li> <li>Transferencia: 4TB</li> </ul>"},{"location":"servidor/droplet-setup/#configuracion-inicial","title":"Configuraci\u00f3n Inicial","text":"<pre><code># Conectar como root\nssh root@your_droplet_ip\n\n# Actualizar sistema\napt update &amp;&amp; apt upgrade -y\n\n# Crear usuario admin\nadduser makuno\nusermod -aG sudo makuno\n\n# Configurar SSH keys\nmkdir -p /home/makuno/.ssh\ncp ~/.ssh/authorized_keys /home/makuno/.ssh/\nchown -R makuno:makuno /home/makuno/.ssh\nchmod 700 /home/makuno/.ssh\nchmod 600 /home/makuno/.ssh/authorized_keys\n</code></pre>"},{"location":"servidor/droplet-setup/#configuracion-de-seguridad","title":"\ud83d\udd10 Configuraci\u00f3n de Seguridad","text":""},{"location":"servidor/droplet-setup/#ssh-hardening","title":"SSH Hardening","text":"<pre><code># Editar configuraci\u00f3n SSH\nsudo nano /etc/ssh/sshd_config\n</code></pre> <pre><code># /etc/ssh/sshd_config\nPort 22\nPasswordAuthentication no\nPubkeyAuthentication yes\nPermitRootLogin no\nMaxAuthTries 3\nClientAliveInterval 300\n</code></pre> <pre><code># Reiniciar SSH\nsudo systemctl restart sshd\n</code></pre>"},{"location":"servidor/droplet-setup/#firewall-basico","title":"Firewall B\u00e1sico","text":"<pre><code># Configurar ufw\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow 22/tcp\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\nsudo ufw enable\n</code></pre>"},{"location":"servidor/droplet-setup/#configuracion-de-red","title":"\ud83c\udf10 Configuraci\u00f3n de Red","text":""},{"location":"servidor/droplet-setup/#cloud-firewall-digitalocean","title":"Cloud Firewall (DigitalOcean)","text":"Puerto Protocolo Origen Prop\u00f3sito 22 TCP Tu IP SSH Admin 80 TCP Anywhere HTTP/Let's Encrypt 443 TCP Anywhere HTTPS <p>Importante</p> <p>NO abrir puerto 8000 en Cloud Firewall. Solo debe ser accesible v\u00eda localhost.</p>"},{"location":"servidor/droplet-setup/#configuracion-de-dominio","title":"Configuraci\u00f3n de Dominio","text":"<pre><code># Verificar DNS\ndig alertasfail2ban.xmakuno.com\nnslookup alertasfail2ban.xmakuno.com\n\n# Debe retornar la IP del Droplet\n</code></pre>"},{"location":"servidor/droplet-setup/#monitoreo-basico","title":"\ud83d\udcca Monitoreo B\u00e1sico","text":""},{"location":"servidor/droplet-setup/#metricas-del-sistema","title":"M\u00e9tricas del Sistema","text":"<pre><code># Verificar recursos\nhtop\ndf -h\nfree -h\niostat\n</code></pre>"},{"location":"servidor/droplet-setup/#logs-del-sistema","title":"Logs del Sistema","text":"<pre><code># Logs importantes\nsudo journalctl -f\nsudo tail -f /var/log/auth.log\nsudo tail -f /var/log/syslog\n</code></pre> <p>Pr\u00f3ximo Paso</p> <p>Contin\u00faa con la instalaci\u00f3n de software necesario para el sistema.</p>"},{"location":"servidor/security/","title":"\ud83d\udd10 Configuraci\u00f3n de Seguridad","text":""},{"location":"servidor/security/#hardening-del-sistema","title":"Hardening del Sistema","text":""},{"location":"servidor/security/#configuracion-ssh-avanzada","title":"Configuraci\u00f3n SSH Avanzada","text":"<pre><code># Editar configuraci\u00f3n SSH\nsudo nano /etc/ssh/sshd_config\n</code></pre> <pre><code># /etc/ssh/sshd_config - Configuraci\u00f3n segura\nPort 22\nProtocol 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nHostKey /etc/ssh/ssh_host_ed25519_key\n\n# Autenticaci\u00f3n\nPubkeyAuthentication yes\nPasswordAuthentication no\nChallengeResponseAuthentication no\nUsePAM yes\n\n# Restricciones\nPermitRootLogin no\nMaxAuthTries 3\nMaxSessions 2\nLoginGraceTime 30\n\n# Timeout\nClientAliveInterval 300\nClientAliveCountMax 2\n\n# Restricciones de usuarios\nAllowUsers makuno\nDenyUsers root\n</code></pre>"},{"location":"servidor/security/#fail2ban-configuracion","title":"Fail2ban Configuraci\u00f3n","text":"<pre><code># Configuraci\u00f3n personalizada\nsudo nano /etc/fail2ban/jail.local\n</code></pre> <pre><code># /etc/fail2ban/jail.local\n[DEFAULT]\nignoreip = 127.0.0.1/8 ::1 TU_IP_PUBLICA\nbantime = 3600\nfindtime = 600\nmaxretry = 5\n\n[sshd]\nenabled = true\nport = ssh\nfilter = sshd\nlogpath = /var/log/auth.log\nmaxretry = 3\nbantime = 86400\n\n[caddy]\nenabled = true\nport = http,https\nfilter = caddy\nlogpath = /var/log/caddy/access.log\nmaxretry = 10\n</code></pre>"},{"location":"servidor/security/#configuracion-de-firewall","title":"Configuraci\u00f3n de Firewall","text":"<pre><code># ufw configuraci\u00f3n avanzada\nsudo ufw --force reset\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n\n# Permitir servicios esenciales\nsudo ufw allow from TU_IP_PUBLICA to any port 22\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\n\n# Habilitar firewall\nsudo ufw enable\nsudo ufw status verbose\n</code></pre>"},{"location":"servidor/security/#certificados-ssl","title":"\ud83d\udd12 Certificados SSL","text":""},{"location":"servidor/security/#configuracion-caddy-ssl","title":"Configuraci\u00f3n Caddy SSL","text":"<pre><code># /etc/caddy/Caddyfile\n{\n    email admin@tudominio.com\n}\n\nalertasfail2ban.xmakuno.com {\n    reverse_proxy localhost:8000\n\n    header {\n        Strict-Transport-Security max-age=31536000\n        X-Frame-Options DENY\n        X-Content-Type-Options nosniff\n    }\n}\n</code></pre>"},{"location":"servidor/security/#verificar-ssl","title":"Verificar SSL","text":"<pre><code># Verificar certificado\necho | openssl s_client -servername alertasfail2ban.xmakuno.com -connect alertasfail2ban.xmakuno.com:443 2&gt;/dev/null | openssl x509 -noout -dates\n\n# Logs de Caddy\nsudo journalctl -u caddy -f\n</code></pre>"},{"location":"servidor/security/#auditoria-de-seguridad","title":"\ud83d\udcca Auditor\u00eda de Seguridad","text":""},{"location":"servidor/security/#scripts-de-monitoreo","title":"Scripts de Monitoreo","text":"<pre><code>#!/bin/bash\n# security-check.sh\n\necho \"=== AUDITOR\u00cdA DE SEGURIDAD ===\"\n\n# Verificar intentos SSH fallidos\necho \"Intentos SSH fallidos (\u00faltimas 24h):\"\nsudo grep \"Failed password\" /var/log/auth.log | tail -5\n\n# Verificar baneos de Fail2ban\necho \"IPs baneadas actualmente:\"\nsudo fail2ban-client status sshd\n\n# Verificar firewall\necho \"Estado del firewall:\"\nsudo ufw status\n\n# Verificar certificados SSL\necho \"Certificado SSL:\"\ncurl -I https://alertasfail2ban.xmakuno.com 2&gt;/dev/null | grep -i \"strict-transport\"\n</code></pre> <p>Recordatorios de Seguridad</p> <ul> <li>Cambiar <code>TU_IP_PUBLICA</code> por tu IP real</li> <li>Revisar logs regularmente</li> <li>Mantener sistema actualizado</li> <li>Backup de configuraciones cr\u00edticas</li> </ul> <p>Pr\u00f3ximo Paso</p> <p>Contin\u00faa con el despliegue del proyecto.</p>"},{"location":"servidor/software/","title":"\ud83d\udee0\ufe0f Instalaci\u00f3n de Software","text":""},{"location":"servidor/software/#software-base","title":"Software Base","text":""},{"location":"servidor/software/#paquetes-esenciales","title":"Paquetes Esenciales","text":"<pre><code># Actualizar repositorios\nsudo apt update\n\n# Instalar herramientas b\u00e1sicas\nsudo apt install -y curl wget git htop neofetch unzip\n</code></pre>"},{"location":"servidor/software/#docker-engine","title":"Docker Engine","text":"<pre><code># Desinstalar versiones anteriores\nsudo apt remove -y docker docker-engine docker.io containerd runc\n\n# Instalar dependencias\nsudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Agregar clave GPG de Docker\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Agregar repositorio\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list\n\n# Instalar Docker\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# Configurar usuario\nsudo usermod -aG docker $USER\nsudo systemctl enable docker\n</code></pre>"},{"location":"servidor/software/#caddy-web-server","title":"Caddy Web Server","text":"<pre><code># Instalar dependencias\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\n\n# Agregar clave GPG\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\n\n# Agregar repositorio\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\n\n# Instalar Caddy\nsudo apt update\nsudo apt install -y caddy\nsudo systemctl enable caddy\n</code></pre>"},{"location":"servidor/software/#fail2ban","title":"Fail2ban","text":"<pre><code># Instalar Fail2ban\nsudo apt install -y fail2ban\n\n# Habilitar servicio\nsudo systemctl enable fail2ban\nsudo systemctl start fail2ban\n\n# Verificar instalaci\u00f3n\nsudo fail2ban-client status\n</code></pre>"},{"location":"servidor/software/#configuracion-inicial","title":"\u2699\ufe0f Configuraci\u00f3n Inicial","text":""},{"location":"servidor/software/#verificar-servicios","title":"Verificar Servicios","text":"<pre><code># Estado de servicios cr\u00edticos\nsudo systemctl status docker caddy fail2ban\n\n# Verificar que Docker funciona\ndocker --version\ndocker ps\n</code></pre>"},{"location":"servidor/software/#logs-y-monitoreo","title":"Logs y Monitoreo","text":"<pre><code># Ubicaciones importantes de logs\nls -la /var/log/fail2ban.log\nls -la /var/log/auth.log\nls -la /var/log/syslog\n\n# Verificar espacio en disco\ndf -h /var/log\n</code></pre> <p>Pr\u00f3ximo Paso</p> <p>Contin\u00faa con la configuraci\u00f3n de seguridad avanzada del servidor.</p>"}]}